
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL CADENA COMA CONST CORCHETE_DER CORCHETE_IZQ DIVISION DOSPUNTOS DOUBLE ELSE ES_IGUAL FALSE FINAL FLOAT FOR FUNCION IF IGUAL IN INCREMENTADOR INT INTEGER LIST LLAVEL LLAVER LPARENT MAIN MAS MAYOR_O_IGUAL MAYOR_QUE MENOR_O_IGUAL MENOR_QUE MULTIPL NEGACION NO_IGUAL OR PARSE PRINT PUNTO PUNTOCOMA READLINESYNC RESTA RETURN RPARENT SALTO_LINEA STDIN STDOUT STRING TABULACION TODOUBLE TOINT TOSTRING TRUE VAR VARIABLE VOID WRITEsentencias : asignacion\n                  | comparacion\n                  | operacion\n                  | impresion\n                  | funcion\n                  | estructuras\n                  | for\n                  | if\n                  | if-else\n                  | write\n                   declaradores : INT\n                  | CONST\n                  | VAR\n                  | BOOL\n                  | FINAL\n                  | STRINGtipodato : INTEGER\n              | CADENA\n              | FLOAT\n              | VARIABLE\n              | valoresverdad\n              | negativo\n            \n    negativo : RESTA INTEGER\n              | RESTA FLOAT\n    valoresverdad : TRUE\n                   | FALSEasignacion : declaradores VARIABLE IGUAL tipodato PUNTOCOMA\n                  | declaradores VARIABLE IGUAL negativo PUNTOCOMA\n                  | BOOL VARIABLE IGUAL valoresverdad PUNTOCOMAcomparadores : ES_IGUAL\n                  | NO_IGUAL\n                  | MENOR_QUE\n                  | MAYOR_QUE\n                  | MENOR_O_IGUAL\n                  | MAYOR_O_IGUALcomparacion : VARIABLE comparadores VARIABLE PUNTOCOMAdatonumerico : INTEGER\n                    | FLOAT\n                    | negativooperador : MAS\n                | RESTA\n                | MULTIPL\n                | DIVISIONoperacion : datonumerico operador datonumerico PUNTOCOMAimpresion : PRINT LPARENT tipodato RPARENT PUNTOCOMAdeclaracionfunciones : INT\n                          | DOUBLE\n                          | STRING\n                          | BOOLfuncion : VOID VARIABLE LPARENT declaracionfunciones VARIABLE RPARENT LLAVEL LLAVER\n               | VOID VARIABLE LPARENT  VARIABLE RPARENT LLAVEL LLAVER\n               | VOID VARIABLE LPARENT RPARENT LLAVEL LLAVER\n               | declaracionfunciones VARIABLE LPARENT  RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER\n               | declaracionfunciones VARIABLE LPARENT  RPARENT LLAVEL RETURN tipodato PUNTOCOMA LLAVERdeclaradoresestruras : CONST\n                           | VAR\n                           | FINALtipodatoestructura : INTEGER\n                        | CADENA\n                        | DOUBLEelementos : tipodatoestructura\n               | tipodatoestructura COMA elementoselementosdiccionario : tipodatoestructura DOSPUNTOS tipodatoestructura\n                          | tipodatoestructura DOSPUNTOS tipodatoestructura COMA elementosdiccionario estructuras : declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ elementos CORCHETE_DER PUNTOCOMA\n                 | declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ CORCHETE_DER PUNTOCOMA\n                 | declaradoresestruras VARIABLE IGUAL LLAVEL elementosdiccionario LLAVER PUNTOCOMA\n                 | declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL elementos LLAVER PUNTOCOMAdeclaracionesfor : VAR\n                      | INT\n                      | VARIABLEfor : FOR LPARENT declaracionesfor VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER\n          | FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVERif : IF LPARENT VARIABLE RPARENT LLAVEL LLAVER\n        | IF LPARENT TRUE RPARENT LLAVEL LLAVER\n        | IF LPARENT FALSE RPARENT LLAVEL LLAVER\n        | IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER\n        | IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVERif-else : if ELSE LLAVEL LLAVERwrite : STDOUT PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA'
    
_lr_action_items = {'BOOL':([0,71,99,],[15,95,95,]),'VARIABLE':([0,12,15,18,19,20,25,26,27,28,29,31,35,36,37,38,39,40,41,48,52,53,58,71,74,75,76,77,91,93,94,95,102,106,124,135,160,181,],[13,34,42,49,50,51,-11,-12,-13,-15,-16,-47,59,-30,-31,-32,-33,-34,-35,66,75,78,66,90,100,-71,-69,-70,112,-46,-48,-49,127,66,142,152,170,182,]),'PRINT':([0,],[17,]),'VOID':([0,],[18,]),'FOR':([0,],[21,]),'IF':([0,],[23,]),'STDOUT':([0,],[24,]),'INT':([0,52,71,99,],[25,77,93,93,]),'CONST':([0,],[26,]),'VAR':([0,52,],[27,76,]),'FINAL':([0,],[28,]),'STRING':([0,71,99,],[29,94,94,]),'INTEGER':([0,32,36,37,38,39,40,41,43,44,45,46,47,48,53,58,97,98,105,106,125,135,138,140,158,167,178,],[22,55,-30,-31,-32,-33,-34,-35,22,-40,-41,-42,-43,63,22,63,118,118,22,63,143,63,118,118,118,118,180,]),'FLOAT':([0,32,36,37,38,39,40,41,43,44,45,46,47,48,53,58,105,106,135,],[30,56,-30,-31,-32,-33,-34,-35,30,-40,-41,-42,-43,65,30,65,30,65,65,]),'DOUBLE':([0,71,97,98,99,138,140,158,167,],[31,31,120,120,31,120,120,120,120,]),'RESTA':([0,14,16,22,30,36,37,38,39,40,41,43,44,45,46,47,48,53,55,56,58,105,106,135,182,183,],[32,-39,45,-37,-38,-30,-31,-32,-33,-34,-35,32,-40,-41,-42,-43,32,32,-23,-24,32,32,32,32,45,45,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,83,86,88,107,108,109,110,134,137,144,146,147,150,154,156,163,164,171,172,173,174,177,179,187,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-79,-36,-44,-27,-28,-29,-45,-52,-66,-74,-75,-76,-51,-65,-67,-80,-50,-77,-78,-53,-54,-72,-68,-73,]),'ELSE':([9,144,146,147,171,172,],[33,-74,-75,-76,-77,-78,]),'ES_IGUAL':([13,14,22,30,55,56,78,81,170,],[36,-39,-37,-38,-23,-24,36,36,36,]),'NO_IGUAL':([13,14,22,30,55,56,78,81,170,],[37,-39,-37,-38,-23,-24,37,37,37,]),'MENOR_QUE':([13,14,22,30,55,56,73,78,81,170,],[38,-39,-37,-38,-23,-24,99,38,38,38,]),'MAYOR_QUE':([13,14,22,30,31,55,56,78,81,93,94,95,123,170,],[39,-39,-37,-38,-47,-23,-24,39,39,-46,-48,-49,141,39,]),'MENOR_O_IGUAL':([13,14,22,30,55,56,78,81,170,],[40,-39,-37,-38,-23,-24,40,40,40,]),'MAYOR_O_IGUAL':([13,14,22,30,55,56,78,81,170,],[41,-39,-37,-38,-23,-24,41,41,41,]),'MAS':([14,16,22,30,44,45,46,47,55,56,182,183,],[-39,44,-37,-38,-40,-41,-42,-43,-23,-24,44,44,]),'MULTIPL':([14,16,22,30,44,45,46,47,55,56,182,183,],[-39,46,-37,-38,-40,-41,-42,-43,-23,-24,46,46,]),'DIVISION':([14,16,22,30,44,45,46,47,55,56,182,183,],[-39,47,-37,-38,-40,-41,-42,-43,-23,-24,47,47,]),'PUNTOCOMA':([14,22,30,55,56,59,61,63,64,65,66,67,68,69,70,84,85,87,89,116,136,139,143,149,152,153,176,180,],[-39,-37,-38,-23,-24,86,88,-17,-18,-19,-20,-21,-22,-25,-26,107,108,109,110,137,154,156,160,163,165,166,179,181,]),'RPARENT':([14,22,30,44,45,46,47,55,56,62,63,64,65,66,67,68,69,70,71,72,78,79,80,90,112,127,130,131,142,184,],[-39,-37,-38,-40,-41,-42,-43,-23,-24,89,-17,-18,-19,-20,-21,-22,-25,-26,92,96,101,103,104,111,133,145,148,149,159,185,]),'LPARENT':([17,21,23,49,50,82,],[48,52,53,71,72,106,]),'PUNTO':([24,],[54,]),'LLAVEL':([33,73,92,96,101,103,104,111,133,141,145,148,159,185,],[57,98,113,114,126,128,129,132,151,158,161,162,169,186,]),'IGUAL':([34,42,51,100,],[58,60,73,125,]),'CADENA':([48,58,97,98,106,135,138,140,158,167,],[64,64,119,119,64,64,119,119,119,119,]),'TRUE':([48,53,58,60,106,135,],[69,79,69,69,69,69,]),'FALSE':([48,53,58,60,106,135,],[70,80,70,70,70,70,]),'WRITE':([54,],[82,]),'LLAVER':([57,113,117,118,119,120,121,126,128,129,132,151,155,157,161,162,165,166,168,169,175,186,],[83,134,-61,-58,-59,-60,139,144,146,147,150,164,-62,-63,171,172,173,174,176,177,-64,187,]),'CORCHETE_IZQ':([73,],[97,]),'CORCHETE_DER':([97,115,117,118,119,120,155,],[116,136,-61,-58,-59,-60,-62,]),'IN':([100,],[124,]),'RETURN':([114,],[135,]),'COMA':([117,118,119,120,157,],[138,-58,-59,-60,167,]),'DOSPUNTOS':([118,119,120,122,],[-58,-59,-60,140,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,],[1,]),'asignacion':([0,],[2,]),'comparacion':([0,],[3,]),'operacion':([0,],[4,]),'impresion':([0,],[5,]),'funcion':([0,],[6,]),'estructuras':([0,],[7,]),'for':([0,],[8,]),'if':([0,],[9,]),'if-else':([0,],[10,]),'write':([0,],[11,]),'declaradores':([0,],[12,]),'negativo':([0,43,48,53,58,105,106,135,],[14,14,68,14,85,14,68,68,]),'datonumerico':([0,43,53,105,],[16,61,81,130,]),'declaracionfunciones':([0,71,99,],[19,91,123,]),'declaradoresestruras':([0,],[20,]),'comparadores':([13,78,81,170,],[35,102,105,178,]),'operador':([16,182,183,],[43,183,184,]),'tipodato':([48,58,106,135,],[62,84,131,153,]),'valoresverdad':([48,58,60,106,135,],[67,67,87,67,67,]),'declaracionesfor':([52,],[74,]),'elementos':([97,138,158,],[115,155,168,]),'tipodatoestructura':([97,98,138,140,158,167,],[117,122,117,157,117,122,]),'elementosdiccionario':([98,167,],[121,175,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias","S'",1,None,None,None),
  ('sentencias -> asignacion','sentencias',1,'p_sentencias','sintaxis.py',6),
  ('sentencias -> comparacion','sentencias',1,'p_sentencias','sintaxis.py',7),
  ('sentencias -> operacion','sentencias',1,'p_sentencias','sintaxis.py',8),
  ('sentencias -> impresion','sentencias',1,'p_sentencias','sintaxis.py',9),
  ('sentencias -> funcion','sentencias',1,'p_sentencias','sintaxis.py',10),
  ('sentencias -> estructuras','sentencias',1,'p_sentencias','sintaxis.py',11),
  ('sentencias -> for','sentencias',1,'p_sentencias','sintaxis.py',12),
  ('sentencias -> if','sentencias',1,'p_sentencias','sintaxis.py',13),
  ('sentencias -> if-else','sentencias',1,'p_sentencias','sintaxis.py',14),
  ('sentencias -> write','sentencias',1,'p_sentencias','sintaxis.py',15),
  ('declaradores -> INT','declaradores',1,'p_declaradores','sintaxis.py',27),
  ('declaradores -> CONST','declaradores',1,'p_declaradores','sintaxis.py',28),
  ('declaradores -> VAR','declaradores',1,'p_declaradores','sintaxis.py',29),
  ('declaradores -> BOOL','declaradores',1,'p_declaradores','sintaxis.py',30),
  ('declaradores -> FINAL','declaradores',1,'p_declaradores','sintaxis.py',31),
  ('declaradores -> STRING','declaradores',1,'p_declaradores','sintaxis.py',32),
  ('tipodato -> INTEGER','tipodato',1,'p_tipodato','sintaxis.py',35),
  ('tipodato -> CADENA','tipodato',1,'p_tipodato','sintaxis.py',36),
  ('tipodato -> FLOAT','tipodato',1,'p_tipodato','sintaxis.py',37),
  ('tipodato -> VARIABLE','tipodato',1,'p_tipodato','sintaxis.py',38),
  ('tipodato -> valoresverdad','tipodato',1,'p_tipodato','sintaxis.py',39),
  ('tipodato -> negativo','tipodato',1,'p_tipodato','sintaxis.py',40),
  ('negativo -> RESTA INTEGER','negativo',2,'p_negativo','sintaxis.py',45),
  ('negativo -> RESTA FLOAT','negativo',2,'p_negativo','sintaxis.py',46),
  ('valoresverdad -> TRUE','valoresverdad',1,'p_valoresverdad','sintaxis.py',50),
  ('valoresverdad -> FALSE','valoresverdad',1,'p_valoresverdad','sintaxis.py',51),
  ('asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA','asignacion',5,'p_asignacion','sintaxis.py',54),
  ('asignacion -> declaradores VARIABLE IGUAL negativo PUNTOCOMA','asignacion',5,'p_asignacion','sintaxis.py',55),
  ('asignacion -> BOOL VARIABLE IGUAL valoresverdad PUNTOCOMA','asignacion',5,'p_asignacion','sintaxis.py',56),
  ('comparadores -> ES_IGUAL','comparadores',1,'p_comparadores','sintaxis.py',65),
  ('comparadores -> NO_IGUAL','comparadores',1,'p_comparadores','sintaxis.py',66),
  ('comparadores -> MENOR_QUE','comparadores',1,'p_comparadores','sintaxis.py',67),
  ('comparadores -> MAYOR_QUE','comparadores',1,'p_comparadores','sintaxis.py',68),
  ('comparadores -> MENOR_O_IGUAL','comparadores',1,'p_comparadores','sintaxis.py',69),
  ('comparadores -> MAYOR_O_IGUAL','comparadores',1,'p_comparadores','sintaxis.py',70),
  ('comparacion -> VARIABLE comparadores VARIABLE PUNTOCOMA','comparacion',4,'p_comparacion','sintaxis.py',73),
  ('datonumerico -> INTEGER','datonumerico',1,'p_datonumerico','sintaxis.py',85),
  ('datonumerico -> FLOAT','datonumerico',1,'p_datonumerico','sintaxis.py',86),
  ('datonumerico -> negativo','datonumerico',1,'p_datonumerico','sintaxis.py',87),
  ('operador -> MAS','operador',1,'p_operador','sintaxis.py',90),
  ('operador -> RESTA','operador',1,'p_operador','sintaxis.py',91),
  ('operador -> MULTIPL','operador',1,'p_operador','sintaxis.py',92),
  ('operador -> DIVISION','operador',1,'p_operador','sintaxis.py',93),
  ('operacion -> datonumerico operador datonumerico PUNTOCOMA','operacion',4,'p_operacion','sintaxis.py',96),
  ('impresion -> PRINT LPARENT tipodato RPARENT PUNTOCOMA','impresion',5,'p_impresion','sintaxis.py',106),
  ('declaracionfunciones -> INT','declaracionfunciones',1,'p_declaracionfunciones','sintaxis.py',116),
  ('declaracionfunciones -> DOUBLE','declaracionfunciones',1,'p_declaracionfunciones','sintaxis.py',117),
  ('declaracionfunciones -> STRING','declaracionfunciones',1,'p_declaracionfunciones','sintaxis.py',118),
  ('declaracionfunciones -> BOOL','declaracionfunciones',1,'p_declaracionfunciones','sintaxis.py',119),
  ('funcion -> VOID VARIABLE LPARENT declaracionfunciones VARIABLE RPARENT LLAVEL LLAVER','funcion',8,'p_funcion','sintaxis.py',122),
  ('funcion -> VOID VARIABLE LPARENT VARIABLE RPARENT LLAVEL LLAVER','funcion',7,'p_funcion','sintaxis.py',123),
  ('funcion -> VOID VARIABLE LPARENT RPARENT LLAVEL LLAVER','funcion',6,'p_funcion','sintaxis.py',124),
  ('funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER','funcion',9,'p_funcion','sintaxis.py',125),
  ('funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN tipodato PUNTOCOMA LLAVER','funcion',9,'p_funcion','sintaxis.py',126),
  ('declaradoresestruras -> CONST','declaradoresestruras',1,'p_declaracionestructura','sintaxis.py',137),
  ('declaradoresestruras -> VAR','declaradoresestruras',1,'p_declaracionestructura','sintaxis.py',138),
  ('declaradoresestruras -> FINAL','declaradoresestruras',1,'p_declaracionestructura','sintaxis.py',139),
  ('tipodatoestructura -> INTEGER','tipodatoestructura',1,'p_tipodatoestructura','sintaxis.py',142),
  ('tipodatoestructura -> CADENA','tipodatoestructura',1,'p_tipodatoestructura','sintaxis.py',143),
  ('tipodatoestructura -> DOUBLE','tipodatoestructura',1,'p_tipodatoestructura','sintaxis.py',144),
  ('elementos -> tipodatoestructura','elementos',1,'p_elementos','sintaxis.py',147),
  ('elementos -> tipodatoestructura COMA elementos','elementos',3,'p_elementos','sintaxis.py',148),
  ('elementosdiccionario -> tipodatoestructura DOSPUNTOS tipodatoestructura','elementosdiccionario',3,'p_elementosdiccionario','sintaxis.py',151),
  ('elementosdiccionario -> tipodatoestructura DOSPUNTOS tipodatoestructura COMA elementosdiccionario','elementosdiccionario',5,'p_elementosdiccionario','sintaxis.py',152),
  ('estructuras -> declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ elementos CORCHETE_DER PUNTOCOMA','estructuras',7,'p_estructuras','sintaxis.py',155),
  ('estructuras -> declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ CORCHETE_DER PUNTOCOMA','estructuras',6,'p_estructuras','sintaxis.py',156),
  ('estructuras -> declaradoresestruras VARIABLE IGUAL LLAVEL elementosdiccionario LLAVER PUNTOCOMA','estructuras',7,'p_estructuras','sintaxis.py',157),
  ('estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL elementos LLAVER PUNTOCOMA','estructuras',10,'p_estructuras','sintaxis.py',158),
  ('declaracionesfor -> VAR','declaracionesfor',1,'p_declaracionesfor','sintaxis.py',168),
  ('declaracionesfor -> INT','declaracionesfor',1,'p_declaracionesfor','sintaxis.py',169),
  ('declaracionesfor -> VARIABLE','declaracionesfor',1,'p_declaracionesfor','sintaxis.py',170),
  ('for -> FOR LPARENT declaracionesfor VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER','for',9,'p_estructura_for','sintaxis.py',173),
  ('for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER','for',17,'p_estructura_for','sintaxis.py',174),
  ('if -> IF LPARENT VARIABLE RPARENT LLAVEL LLAVER','if',6,'p_if','sintaxis.py',187),
  ('if -> IF LPARENT TRUE RPARENT LLAVEL LLAVER','if',6,'p_if','sintaxis.py',188),
  ('if -> IF LPARENT FALSE RPARENT LLAVEL LLAVER','if',6,'p_if','sintaxis.py',189),
  ('if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER','if',8,'p_if','sintaxis.py',190),
  ('if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER','if',8,'p_if','sintaxis.py',191),
  ('if-else -> if ELSE LLAVEL LLAVER','if-else',4,'p_if_else','sintaxis.py',201),
  ('write -> STDOUT PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA','write',7,'p_write','sintaxis.py',209),
]
