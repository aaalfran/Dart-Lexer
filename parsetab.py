
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AS AUTODECREMENTO AUTOINCREMENTO BOOL BREAK CADENA COMA CONST CONTINUE CORCH_DER CORCH_IZQ DIVISION DOSPUNTOS DOUBLE ELSE ES_IGUAL FALSE FINAL FLOAT FOR FUNCION IF IGUAL IN INCREMENTADOR INT INTEGER JOIN LIST LLAVEL LLAVER LPARENT MAIN MAP MAS MAYOR_O_IGUAL MAYOR_QUE MENOR_O_IGUAL MENOR_QUE MULTIPL NEGACION NO_IGUAL OR PARSE PRINT PUNTO PUNTOCOMA READLINESYNC RESTA RETURN RPARENT SALTO_LINEA SET STDIN STDOUT STRING TABULACION TODOUBLE TOINT TOSTRING TRUE VAR VARIABLE VOID WHILE WRITE\n    valores : valor\n            | valor COMA valores\n    \n    operador_mat : MAS\n                  | RESTA\n                  | MULTIPL\n                  | DIVISION\n\n    \n    all : simbolos_globales\n    \n      clave_valor : valor DOSPUNTOS valor\n    \n    simbolo_global : declaracion_asign\n                    | funcion\n    \n    operando_mat : numero\n                  | VARIABLE\n                  | indexacion\n                  | negativo\n                  | ejecutar_funcion\n                  | casting_num\n    \n    claves_valores : clave_valor\n                    | clave_valor COMA claves_valores\n    \n    simbolos_globales : simbolo_global\n                      | simbolo_global simbolos_globales\n                      | empty\n    \n    lista : CORCH_IZQ valores CORCH_DER\n          | CORCH_IZQ CORCH_DER\n    \n    casting_num : LPARENT valor AS INT RPARENT\n                  | LPARENT valor AS DOUBLE RPARENT\n    \n    empty :\n    \n    operacion_mat_sin_par : operando_mat operador_mat operacion_mat\n                          | VARIABLE operador_mat operacion_mat\n    \n    conjunto : LLAVEL valores LLAVER\n              | LLAVEL LLAVER\n    \n    sentencia : declaracion_var\n              | asignacion\n              | declaracion_asign\n              | operaciones PUNTOCOMA\n              | print\n              | estructura_control\n              | return\n              | continue\n              | break\n    \n    operacion_mat_con_par : LPARENT operacion_mat_sin_par RPARENT\n    \n    mapa : LLAVEL claves_valores LLAVER\n        | LLAVEL LLAVER\n    \n    operacion_mat_pos : operacion_mat_con_par\n                      | RESTA operacion_mat_con_par\n                      | operacion_mat_con_par operador_mat operacion_mat_pos\n                      | operacion_mat_sin_par\n                      | operando_mat\n    \n    sentencias : sentencia\n                | sentencia sentencias\n                | empty\n    \n    estructura_dato : lista\n                    | conjunto\n                    | mapa\n    \n    numero : INTEGER\n            | FLOAT\n    \n    operacion_mat_neg : RESTA operacion_mat_con_par\n                      | RESTA operacion_mat_con_par operador_mat operacion_mat_pos\n    \n    bool : TRUE\n          | FALSE\n    \n    operacion_mat : operacion_mat_pos\n                  | operacion_mat_neg\n    \n    datos : numero\n          | CADENA\n          | bool\n    \n    operador_comp_orden : MAYOR_QUE\n                  | MENOR_QUE\n                  | MENOR_O_IGUAL\n                  | MAYOR_O_IGUAL\n    \n    valor : datos\n          | operaciones\n          | VARIABLE\n          | estructura_dato\n          | indexacion\n          | read\n          | ejecutar_funcion\n          | negativo\n          | casting\n    \n    operando_comp_orden : operacion_mat\n                        | numero\n                        | VARIABLE\n                        | indexacion\n                        | ejecutar_funcion\n                        | negativo\n    \n    operacion_comp_orden_sin_par : operando_comp_orden operador_comp_orden operando_comp_orden\n    \n    negativo : RESTA numero\n              | RESTA VARIABLE\n              | RESTA indexacion\n              | RESTA ejecutar_funcion\n\n    \n    operacion_comp_orden_con_par : LPARENT operacion_comp_orden_sin_par RPARENT\n    indexacion : VARIABLE CORCH_IZQ valor CORCH_IZQ\n    operacion_comp_orden : operacion_comp_orden_sin_par\n                        | operacion_comp_orden_con_par\n    \n    tipo_dato : BOOL\n              | DOUBLE\n              | INT\n              | STRING\n              | VOID\n              | LIST\n              | SET\n              | MAP\n    \n    operando_comp_eq : numero\n                    | bool\n                    | CADENA\n                    | operacion_mat\n                    | operacion_comp_orden\n                    | operacion_comp_con_par\n                    | indexacion\n                    | ejecutar_funcion\n                    | VARIABLE\n                    | operacion_log_con_par\n                    | negativo\n                    | LPARENT valor AS BOOL RPARENT\n    \n    declaradores : tipo_dato\n                  | FINAL\n                  | VAR\n    \n    declaracion_var : declaradores VARIABLE PUNTOCOMA\n    \n    operador_comp_eq : IGUAL\n                    | NO_IGUAL\n    \n    declaracion_asign : tipo_dato VARIABLE IGUAL valor PUNTOCOMA\n                      | FINAL VARIABLE IGUAL valor PUNTOCOMA\n                      | VAR VARIABLE IGUAL valor PUNTOCOMA\n                      | CONST VARIABLE IGUAL valor PUNTOCOMA\n    \n    operacion_comp_eq : operando_comp_eq operador_comp_eq operando_comp_eq\n    \n    operacion_comp_sin_par : operacion_comp_eq\n                    | operacion_comp_orden\n    \n    asignacion : VARIABLE IGUAL valor PUNTOCOMA\n                | VARIABLE CORCH_IZQ valor CORCH_DER IGUAL valor PUNTOCOMA\n                | operacion_autoasig PUNTOCOMA\n                | declaracion_asign\n    \n    operacion_comp_con_par : LPARENT operacion_comp_sin_par RPARENT\n    print : PRINT LPARENT valor RPARENT PUNTOCOMA\n    operacion_comp : operacion_comp_con_par\n                    | operacion_comp_sin_par\n    \n    cuerpo_estruct : LLAVEL sentencias LLAVER\n                    | sentencia\n    \n    operadores_log : AND\n                    | OR\n    \n    for : FOR LPARENT IGUAL operacion_log PUNTOCOMA operaciones RPARENT cuerpo_estruct\n        | FOR LPARENT VARIABLE IN VARIABLE RPARENT cuerpo_estruct\n        | FOR LPARENT tipo_dato VARIABLE IN VARIABLE RPARENT cuerpo_estruct\n        | FOR LPARENT VAR VARIABLE IN VARIABLE RPARENT cuerpo_estruct\n    \n    operandos_log : operacion_comp\n                    | operacion_log_not\n                    | VARIABLE\n                    | bool\n                    | ejecutar_funcion\n                    | indexacion\n    \n    if : IF LPARENT operacion_log RPARENT cuerpo_estruct\n    \n    operacion_log_sin_par : operandos_log operadores_log operacion_log\n                          | operandos_log\n    \n    if_else : IF LPARENT operacion_log RPARENT cuerpo_estruct ELSE cuerpo_estruct\n    \n    operacion_log_con_par : LPARENT operacion_log_sin_par RPARENT\n    \n    while : WHILE LPARENT operacion_log RPARENT cuerpo_estruct\n    \n    operando_log_not : bool\n                    | operacion_log_con_par\n                    | VARIABLE\n    \n    estructura_control : if\n                        | if_else\n                        | while\n                        | for\n    \n    operacion_log_not_sin_par : NEGACION operando_log_not\n    break : BREAK PUNTOCOMAcontinue : CONTINUE PUNTOCOMA\n    operacion_log_not_con_par : LPARENT NEGACION operando_log_not RPARENT\n    \n    read : STDIN PUNTO READLINESYNC LPARENT RPARENT\n    \n    operacion_log_not : operacion_log_not_sin_par\n                        | operacion_log_not_con_par\n    \n    return : RETURN valor PUNTOCOMA\n            | RETURN PUNTOCOMA\n    \n    operacion_log : operacion_log_con_par\n                  | operacion_log_con_par operadores_log operacion_log\n                  | operacion_log_sin_par\n                  | operacion_log_not\n                  | operandos_log\n    \n    arg_funcion : VARIABLE\n                | VAR VARIABLE\n                | tipo_dato VARIABLE\n    \n    operacion_unaria : VARIABLE AUTOINCREMENTO\n                      | VARIABLE AUTODECREMENTO\n                      | AUTOINCREMENTO VARIABLE\n                      | AUTODECREMENTO VARIABLE\n    \n    args_funcion : arg_funcion COMA args_funcion\n                  | arg_funcion\n                  | empty\n    \n    operaciones : operacion_mat\n                | operacion_log\n                | operacion_unaria\n                | operacion_autoasig\n    \n    funcion : tipo_dato VARIABLE LPARENT args_funcion RPARENT LLAVEL sentencias LLAVER\n    \n    ejecutar_funcion : VARIABLE LPARENT valores RPARENT\n                      | VARIABLE LPARENT RPARENT\n    operacion_autoasig : VARIABLE operador_mat IGUAL operacion_matcasting : LPARENT valor AS tipo_dato RPARENT'
    
_lr_action_items = {'VARIABLE':([0,22,24,25,36,37,38,46,55,56,57,60,61,62,63,64,68,72,89,90,91,92,93,101,102,107,108,109,110,111,112,113,114,115,121,123,124,131,143,144,145,148,150,162,163,165,167,181,191,193,212,223,],[5,5,75,85,94,95,5,106,5,5,5,120,-3,-4,-5,-6,132,106,120,151,-136,-137,151,120,120,151,179,-117,-118,185,-65,-66,-67,-68,120,85,195,132,120,120,5,85,214,5,5,85,224,226,120,75,132,132,]),'CADENA':([0,22,24,38,55,56,57,68,90,91,92,93,107,108,109,110,124,131,145,150,162,163,167,181,193,212,223,],[13,13,13,13,13,13,13,13,156,-136,-137,156,156,156,-117,-118,13,13,13,13,13,13,13,13,13,13,13,]),'STDIN':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'RESTA':([0,5,7,9,10,12,22,24,26,27,38,39,41,45,55,56,57,60,61,62,63,64,68,75,76,77,78,80,82,84,85,86,87,88,89,90,91,92,93,101,102,107,108,109,110,111,112,113,114,115,119,120,121,124,125,126,127,128,131,132,133,134,135,136,139,143,144,145,147,150,151,153,154,155,158,162,163,167,173,177,178,179,180,181,184,185,186,187,188,189,190,191,193,195,196,197,198,212,214,215,216,223,224,226,231,232,],[25,62,-13,-15,-14,-11,25,25,-54,-55,25,62,62,-16,25,25,25,123,-3,-4,-5,-6,25,62,-13,-15,-14,62,-11,-85,-86,-87,-88,62,148,25,-136,-137,25,165,123,25,25,-117,-118,25,-65,-66,-67,-68,-191,62,123,25,-11,-13,-14,-15,25,62,-13,-15,-14,-11,-40,123,165,25,62,25,62,-15,-13,-11,-14,25,25,25,-11,-13,-15,62,-14,25,-11,62,-13,-15,-14,-90,-190,123,25,62,-13,-15,-11,25,62,-13,-15,25,62,62,-24,-25,]),'LPARENT':([0,5,22,24,25,38,46,55,56,57,60,61,62,63,64,68,72,75,85,89,90,91,92,93,101,102,107,108,109,110,111,112,113,114,115,120,121,123,124,130,131,132,143,144,145,150,151,162,163,165,167,179,181,185,191,193,195,212,214,223,224,226,],[24,57,24,68,89,24,107,24,24,24,124,-3,-4,-5,-6,131,107,57,57,145,150,-136,-137,150,124,124,167,181,-117,-118,124,-65,-66,-67,-68,57,124,89,193,199,131,57,124,124,24,212,57,24,24,89,223,57,131,57,124,68,57,131,57,131,57,57,]),'INTEGER':([0,22,24,25,38,55,56,57,60,61,62,63,64,68,89,90,91,92,93,101,102,107,108,109,110,111,112,113,114,115,121,123,124,131,143,144,145,148,150,162,163,165,167,181,191,193,212,223,],[26,26,26,26,26,26,26,26,26,-3,-4,-5,-6,26,26,26,-136,-137,26,26,26,26,26,-117,-118,26,-65,-66,-67,-68,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FLOAT':([0,22,24,25,38,55,56,57,60,61,62,63,64,68,89,90,91,92,93,101,102,107,108,109,110,111,112,113,114,115,121,123,124,131,143,144,145,148,150,162,163,165,167,181,191,193,212,223,],[27,27,27,27,27,27,27,27,27,-3,-4,-5,-6,27,27,27,-136,-137,27,27,27,27,27,-117,-118,27,-65,-66,-67,-68,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'TRUE':([0,22,24,38,46,55,56,57,68,72,90,91,92,93,107,108,109,110,124,131,145,150,162,163,167,181,193,212,223,],[28,28,28,28,28,28,28,28,28,28,28,-136,-137,28,28,28,-117,-118,28,28,28,28,28,28,28,28,28,28,28,]),'FALSE':([0,22,24,38,46,55,56,57,68,72,90,91,92,93,107,108,109,110,124,131,145,150,162,163,167,181,193,212,223,],[29,29,29,29,29,29,29,29,29,29,29,-136,-137,29,29,29,-117,-118,29,29,29,29,29,29,29,29,29,29,29,]),'AUTOINCREMENTO':([0,5,22,24,38,55,56,57,68,75,124,131,132,145,150,162,163,167,181,193,195,212,214,223,224,226,],[36,58,36,36,36,36,36,36,36,58,36,36,58,36,36,36,36,36,36,36,58,36,58,36,58,58,]),'AUTODECREMENTO':([0,5,22,24,38,55,56,57,68,75,124,131,132,145,150,162,163,167,181,193,195,212,214,223,224,226,],[37,59,37,37,37,37,37,37,37,59,37,37,59,37,37,37,37,37,37,37,59,37,59,37,59,59,]),'CORCH_IZQ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,47,48,49,50,52,53,55,56,57,58,59,66,68,75,84,85,86,87,88,94,95,97,103,104,105,106,117,119,120,122,124,125,126,127,128,129,131,132,138,139,141,142,145,149,150,151,152,153,154,156,157,159,160,161,162,163,164,166,167,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,195,210,211,212,214,222,223,224,226,228,230,231,232,233,],[22,-69,-70,56,-72,-13,-74,-15,-14,-77,-11,-63,-64,-185,-186,-187,-188,-51,-52,-53,22,22,-54,-55,-58,-59,-60,-61,-170,-172,-143,-150,22,-43,-46,-47,-166,-167,-142,-16,-132,-133,-124,-125,-91,-92,22,22,22,-178,-179,-23,22,56,-85,56,-87,-88,-44,-180,-181,-30,-161,-154,-155,-156,189,-191,56,-28,22,-11,-13,-14,-15,-22,22,56,-152,-40,-130,-89,22,-171,22,56,-145,-146,-147,-103,-104,-149,-29,-41,22,22,-45,-27,22,-110,-123,-11,-102,-105,-106,-13,-15,56,-14,22,-84,-78,-11,56,-13,-15,-14,-90,-190,-192,22,56,-164,-57,22,56,-44,22,56,56,-165,-193,-24,-25,-112,]),'LLAVEL':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'NEGACION':([0,22,24,38,55,56,57,68,90,91,92,93,107,124,131,145,150,162,163,167,181,193,212,223,],[46,46,72,46,46,46,46,72,46,-136,-137,46,46,46,72,46,72,46,46,72,46,72,72,72,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,45,47,48,49,50,52,53,58,59,66,84,85,86,87,88,94,95,97,103,104,105,106,116,119,120,122,125,126,127,128,129,138,139,141,142,149,151,152,153,154,156,157,159,160,161,164,166,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,192,210,211,222,228,230,231,232,233,],[0,-1,-69,-70,-12,-72,-13,-74,-15,-14,-77,-11,-63,-64,-185,-186,-187,-188,-51,-52,-53,-54,-55,-58,-59,-60,-61,-170,-172,-143,-150,-43,-46,-47,-166,-167,-142,-16,-132,-133,-124,-125,-91,-92,-178,-179,-23,-85,-86,-87,-88,-44,-180,-181,-30,-161,-154,-155,-156,-2,-191,-12,-28,-11,-13,-14,-15,-22,-152,-40,-130,-89,-171,-144,-145,-146,-147,-103,-104,-149,-29,-41,-45,-27,-110,-123,-11,-102,-105,-106,-13,-15,-12,-14,-84,-78,-11,-12,-13,-15,-14,-90,-190,-192,-164,-57,-44,-165,-193,-24,-25,-112,]),'CORCH_DER':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,45,47,48,49,50,52,53,58,59,65,66,84,85,86,87,88,94,95,97,103,104,105,106,116,119,120,122,125,126,127,128,129,138,139,141,142,149,151,152,153,154,156,157,159,160,161,164,166,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,192,210,211,222,228,230,231,232,233,],[-1,-69,-70,-12,-72,-13,-74,-15,-14,-77,-11,-63,-64,-185,-186,-187,-188,-51,-52,-53,66,-54,-55,-58,-59,-60,-61,-170,-172,-143,-150,-43,-46,-47,-166,-167,-142,-16,-132,-133,-124,-125,-91,-92,-178,-179,129,-23,-85,-86,-87,-88,-44,-180,-181,-30,-161,-154,-155,-156,-2,-191,-12,-28,-11,-13,-14,-15,-22,-152,-40,-130,-89,-171,-144,-145,-146,-147,-103,-104,-149,-29,-41,-45,-27,-110,-123,-11,-102,-105,-106,-13,-15,-12,-14,-84,-78,-11,-12,-13,-15,-14,-90,-190,-192,-164,-57,-44,-165,-193,-24,-25,-112,]),'LLAVER':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,38,39,40,41,42,43,44,45,47,48,49,50,52,53,58,59,66,84,85,86,87,88,94,95,96,97,98,99,100,103,104,105,106,116,119,120,122,125,126,127,128,129,138,139,141,142,149,151,152,153,154,156,157,159,160,161,164,166,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,192,210,211,219,220,222,228,230,231,232,233,],[-1,-69,-70,-12,-72,-13,-74,-15,-14,-77,-11,-63,-64,-185,-186,-187,-188,-51,-52,-53,-54,-55,-58,-59,-60,-61,-170,-172,-143,-150,97,-43,-46,-47,-166,-167,-142,-16,-132,-133,-124,-125,-91,-92,-178,-179,-23,-85,-86,-87,-88,-44,-180,-181,160,-30,161,-1,-17,-161,-154,-155,-156,-2,-191,-12,-28,-11,-13,-14,-15,-22,-152,-40,-130,-89,-171,-144,-145,-146,-147,-103,-104,-149,-29,-41,-45,-27,-110,-123,-11,-102,-105,-106,-13,-15,-12,-14,-84,-78,-11,-12,-13,-15,-14,-90,-190,-192,-164,-57,-8,-18,-44,-165,-193,-24,-25,-112,]),'RPARENT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,45,47,48,49,50,52,53,57,58,59,66,70,71,73,74,75,76,77,79,83,84,85,86,87,88,94,95,97,103,104,105,106,116,118,119,120,122,125,126,127,128,129,132,133,134,138,139,140,141,142,146,149,151,152,153,154,156,157,159,160,161,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,192,199,201,202,203,204,205,206,207,208,209,210,211,214,215,216,217,222,224,225,226,228,230,231,232,233,235,236,237,],[-1,-69,-70,-12,-72,-13,-74,-15,-14,-77,-11,-63,-64,-185,-186,-187,-188,-51,-52,-53,-54,-55,-58,-59,-60,-61,-170,-172,-143,-150,-43,-46,-47,-166,-167,-142,-16,-132,-133,-124,-125,-91,-92,119,-178,-179,-23,138,139,141,142,-144,-147,-146,-150,-143,-85,-86,-87,-88,-44,-180,-181,-30,-161,-154,-155,-156,-2,190,-191,-12,-28,-11,-13,-14,-15,-22,-144,-147,-146,-152,-40,210,-130,-89,139,-171,-144,-145,-146,-147,-103,-104,-149,-29,-41,-45,-27,138,-150,-143,-110,-123,-11,-102,-105,-106,-13,-15,-12,-14,-84,-78,-11,-12,-13,-15,-14,-90,-190,-192,228,230,231,232,233,-96,-97,-98,-99,-100,-164,-57,-144,-147,-146,-145,-44,-144,-132,-144,-165,-193,-24,-25,-112,231,232,233,]),'COMA':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,45,47,48,49,50,52,53,58,59,66,84,85,86,87,88,94,95,97,99,100,103,104,105,106,119,120,122,125,126,127,128,129,138,139,141,142,149,151,152,153,154,156,157,159,160,161,164,166,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,192,210,211,219,222,228,230,231,232,233,],[55,-69,-70,-12,-72,-13,-74,-15,-14,-77,-11,-63,-64,-185,-186,-187,-188,-51,-52,-53,-54,-55,-58,-59,-60,-61,-170,-172,-143,-150,-43,-46,-47,-166,-167,-142,-16,-132,-133,-124,-125,-91,-92,-178,-179,-23,-85,-86,-87,-88,-44,-180,-181,-30,55,163,-161,-154,-155,-156,-191,-12,-28,-11,-13,-14,-15,-22,-152,-40,-130,-89,-171,-144,-145,-146,-147,-103,-104,-149,-29,-41,-45,-27,-110,-123,-11,-102,-105,-106,-13,-15,-12,-14,-84,-78,-11,-12,-13,-15,-14,-90,-190,-192,-164,-57,-8,-44,-165,-193,-24,-25,-112,]),'AS':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,45,47,48,49,50,52,53,58,59,66,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,94,95,97,103,104,105,106,119,120,122,125,126,127,128,129,132,133,134,135,136,138,139,140,141,142,149,151,152,153,154,156,157,159,160,161,164,166,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,192,194,195,196,197,198,200,210,211,213,214,215,216,217,218,222,224,225,226,228,230,231,232,233,],[-69,-70,-12,-72,-13,-74,-15,-14,-77,-11,-63,-64,-185,-186,-187,-188,-51,-52,-53,-54,-55,-58,-59,-60,-61,-170,-172,-143,-150,-43,-46,-47,-166,-167,-142,-16,-132,-133,-124,-125,-91,-92,-178,-179,-23,137,-172,-46,-133,-91,-12,-13,-15,-14,-150,-47,-185,-11,-143,-85,-86,-87,-88,-44,-180,-181,-30,-161,-154,-155,-156,-191,-12,-28,-11,-13,-14,-15,-22,-12,-13,-15,-14,-11,-152,-40,-161,-130,-89,-171,-144,-145,-146,-147,-103,-104,-149,-29,-41,-45,-27,-110,-123,-11,-102,-105,-106,-13,-15,-12,-14,-84,-78,-11,-12,-13,-15,-14,-90,-190,-192,227,-12,-13,-15,-11,229,-164,-57,234,-12,-13,-15,-64,-170,-44,-12,-132,-12,-165,-193,-24,-25,-112,]),'DOSPUNTOS':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,31,32,33,34,35,39,40,41,42,43,44,45,47,48,49,50,52,53,58,59,66,84,85,86,87,88,94,95,97,99,103,104,105,106,119,120,122,125,126,127,128,129,138,139,141,142,149,151,152,153,154,156,157,159,160,161,164,166,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,192,210,211,221,222,228,230,231,232,233,],[-69,-70,-12,-72,-13,-74,-15,-14,-77,-11,-63,-64,-185,-186,-187,-188,-51,-52,-53,-54,-55,-58,-59,-60,-61,-170,-172,-143,-150,-43,-46,-47,-166,-167,-142,-16,-132,-133,-124,-125,-91,-92,-178,-179,-23,-85,-86,-87,-88,-44,-180,-181,-30,162,-161,-154,-155,-156,-191,-12,-28,-11,-13,-14,-15,-22,-152,-40,-130,-89,-171,-144,-145,-146,-147,-103,-104,-149,-29,-41,-45,-27,-110,-123,-11,-102,-105,-106,-13,-15,-12,-14,-84,-78,-11,-12,-13,-15,-14,-90,-190,-192,-164,-57,162,-44,-165,-193,-24,-25,-112,]),'AND':([5,7,9,14,26,27,28,29,30,31,32,34,35,39,40,41,42,43,44,45,47,48,49,50,52,53,73,74,75,76,77,79,83,84,85,86,87,88,103,104,105,106,119,120,122,125,126,127,128,132,133,134,138,139,140,141,142,151,152,153,154,156,157,164,166,169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,195,196,197,210,211,214,215,216,217,218,222,224,225,226,231,232,233,],[-144,-147,-146,-145,-54,-55,-58,-59,-60,-61,91,-143,91,-43,-46,-47,-166,-167,-142,-16,-132,-133,-124,-125,-91,-92,-133,-91,-144,-147,-146,91,-143,-85,-86,-87,-88,-44,-161,-154,-155,-156,-191,-12,-28,-11,-13,-14,-15,-144,-147,-146,-152,-40,-161,-130,-89,-144,-145,-146,-147,-103,-104,-45,-27,91,-143,-110,-123,-11,-102,-105,-106,-13,-15,-12,-14,-84,-78,-11,-12,-13,-15,-14,-90,-190,-144,-147,-146,-164,-57,-144,-147,-146,-145,91,-44,-144,-132,-144,-24,-25,-112,]),'OR':([5,7,9,14,26,27,28,29,30,31,32,34,35,39,40,41,42,43,44,45,47,48,49,50,52,53,73,74,75,76,77,79,83,84,85,86,87,88,103,104,105,106,119,120,122,125,126,127,128,132,133,134,138,139,140,141,142,151,152,153,154,156,157,164,166,169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,185,186,187,188,189,190,195,196,197,210,211,214,215,216,217,218,222,224,225,226,231,232,233,],[-144,-147,-146,-145,-54,-55,-58,-59,-60,-61,92,-143,92,-43,-46,-47,-166,-167,-142,-16,-132,-133,-124,-125,-91,-92,-133,-91,-144,-147,-146,92,-143,-85,-86,-87,-88,-44,-161,-154,-155,-156,-191,-12,-28,-11,-13,-14,-15,-144,-147,-146,-152,-40,-161,-130,-89,-144,-145,-146,-147,-103,-104,-45,-27,92,-143,-110,-123,-11,-102,-105,-106,-13,-15,-12,-14,-84,-78,-11,-12,-13,-15,-14,-90,-190,-144,-147,-146,-164,-57,-144,-147,-146,-145,92,-44,-144,-132,-144,-24,-25,-112,]),'MAS':([5,7,9,10,12,26,27,39,41,45,75,76,77,78,80,82,84,85,86,87,88,119,120,125,126,127,128,132,133,134,135,136,139,147,151,153,154,155,158,173,177,178,179,180,184,185,186,187,188,189,190,195,196,197,198,214,215,216,224,226,231,232,],[61,-13,-15,-14,-11,-54,-55,61,61,-16,61,-13,-15,-14,61,-11,-85,-86,-87,-88,61,-191,61,-11,-13,-14,-15,61,-13,-15,-14,-11,-40,61,61,-15,-13,-11,-14,-11,-13,-15,61,-14,-11,61,-13,-15,-14,-90,-190,61,-13,-15,-11,61,-13,-15,61,61,-24,-25,]),'MULTIPL':([5,7,9,10,12,26,27,39,41,45,75,76,77,78,80,82,84,85,86,87,88,119,120,125,126,127,128,132,133,134,135,136,139,147,151,153,154,155,158,173,177,178,179,180,184,185,186,187,188,189,190,195,196,197,198,214,215,216,224,226,231,232,],[63,-13,-15,-14,-11,-54,-55,63,63,-16,63,-13,-15,-14,63,-11,-85,-86,-87,-88,63,-191,63,-11,-13,-14,-15,63,-13,-15,-14,-11,-40,63,63,-15,-13,-11,-14,-11,-13,-15,63,-14,-11,63,-13,-15,-14,-90,-190,63,-13,-15,-11,63,-13,-15,63,63,-24,-25,]),'DIVISION':([5,7,9,10,12,26,27,39,41,45,75,76,77,78,80,82,84,85,86,87,88,119,120,125,126,127,128,132,133,134,135,136,139,147,151,153,154,155,158,173,177,178,179,180,184,185,186,187,188,189,190,195,196,197,198,214,215,216,224,226,231,232,],[64,-13,-15,-14,-11,-54,-55,64,64,-16,64,-13,-15,-14,64,-11,-85,-86,-87,-88,64,-191,64,-11,-13,-14,-15,64,-13,-15,-14,-11,-40,64,64,-15,-13,-11,-14,-11,-13,-15,64,-14,-11,64,-13,-15,-14,-90,-190,64,-13,-15,-11,64,-13,-15,64,64,-24,-25,]),'IGUAL':([5,7,9,10,12,13,14,15,26,27,28,29,30,31,32,39,40,41,45,47,50,51,52,53,60,61,62,63,64,71,74,75,76,77,78,80,81,82,84,85,86,87,88,119,120,122,125,126,127,128,132,133,134,135,136,138,139,141,142,143,151,152,153,154,155,156,157,158,164,166,171,182,183,184,185,186,187,188,189,190,195,196,197,198,211,214,215,216,217,218,222,224,225,226,231,232,233,],[-12,-13,-15,-14,-11,-103,-102,-104,-54,-55,-58,-59,-60,-61,-110,-43,-46,-47,-16,-106,-105,109,-91,-92,121,-3,-4,-5,-6,-46,-91,-12,-13,-15,-14,-47,-104,-11,-85,-86,-87,-88,-44,-191,-12,-28,-11,-13,-14,-15,-12,-13,-15,-14,-11,-152,-40,-130,-89,121,-12,-102,-15,-13,-11,-103,-104,-14,-45,-27,-110,-84,-78,-11,-12,-13,-15,-14,-90,-190,-12,-13,-15,-11,-57,-12,-13,-15,-102,-110,-44,-12,-106,-12,-24,-25,-112,]),'NO_IGUAL':([5,7,9,10,12,13,14,15,26,27,28,29,30,31,32,39,40,41,45,47,50,51,52,53,71,74,75,76,77,78,80,81,82,84,85,86,87,88,119,120,122,125,126,127,128,132,133,134,135,136,138,139,141,142,151,152,153,154,155,156,157,158,164,166,171,182,183,184,185,186,187,188,189,190,195,196,197,198,211,214,215,216,217,218,222,224,225,226,231,232,233,],[-12,-13,-15,-14,-11,-103,-102,-104,-54,-55,-58,-59,-60,-61,-110,-43,-46,-47,-16,-106,-105,110,-91,-92,-46,-91,-12,-13,-15,-14,-47,-104,-11,-85,-86,-87,-88,-44,-191,-12,-28,-11,-13,-14,-15,-12,-13,-15,-14,-11,-152,-40,-130,-89,-12,-102,-15,-13,-11,-103,-104,-14,-45,-27,-110,-84,-78,-11,-12,-13,-15,-14,-90,-190,-12,-13,-15,-11,-57,-12,-13,-15,-102,-110,-44,-12,-106,-12,-24,-25,-112,]),'MAYOR_QUE':([5,7,9,10,12,15,26,27,30,31,39,40,41,45,54,71,75,76,77,78,80,81,82,84,85,86,87,88,119,120,122,125,126,127,128,132,133,134,135,136,139,151,153,154,155,157,158,164,166,173,177,178,179,180,189,190,195,196,197,198,211,214,215,216,222,224,226,231,232,],[-12,-13,-15,-14,-11,-78,-54,-55,-60,-61,-43,-46,-47,-16,112,-46,-12,-13,-15,-14,-47,-78,-11,-85,-86,-87,-88,-44,-191,-12,-28,-11,-13,-14,-15,-12,-13,-15,-14,-11,-40,-12,-15,-13,-11,-78,-14,-45,-27,-11,-13,-15,-12,-14,-90,-190,-12,-13,-15,-11,-57,-12,-13,-15,-44,-12,-12,-24,-25,]),'MENOR_QUE':([5,7,9,10,12,15,26,27,30,31,39,40,41,45,54,71,75,76,77,78,80,81,82,84,85,86,87,88,119,120,122,125,126,127,128,132,133,134,135,136,139,151,153,154,155,157,158,164,166,173,177,178,179,180,189,190,195,196,197,198,211,214,215,216,222,224,226,231,232,],[-12,-13,-15,-14,-11,-78,-54,-55,-60,-61,-43,-46,-47,-16,113,-46,-12,-13,-15,-14,-47,-78,-11,-85,-86,-87,-88,-44,-191,-12,-28,-11,-13,-14,-15,-12,-13,-15,-14,-11,-40,-12,-15,-13,-11,-78,-14,-45,-27,-11,-13,-15,-12,-14,-90,-190,-12,-13,-15,-11,-57,-12,-13,-15,-44,-12,-12,-24,-25,]),'MENOR_O_IGUAL':([5,7,9,10,12,15,26,27,30,31,39,40,41,45,54,71,75,76,77,78,80,81,82,84,85,86,87,88,119,120,122,125,126,127,128,132,133,134,135,136,139,151,153,154,155,157,158,164,166,173,177,178,179,180,189,190,195,196,197,198,211,214,215,216,222,224,226,231,232,],[-12,-13,-15,-14,-11,-78,-54,-55,-60,-61,-43,-46,-47,-16,114,-46,-12,-13,-15,-14,-47,-78,-11,-85,-86,-87,-88,-44,-191,-12,-28,-11,-13,-14,-15,-12,-13,-15,-14,-11,-40,-12,-15,-13,-11,-78,-14,-45,-27,-11,-13,-15,-12,-14,-90,-190,-12,-13,-15,-11,-57,-12,-13,-15,-44,-12,-12,-24,-25,]),'MAYOR_O_IGUAL':([5,7,9,10,12,15,26,27,30,31,39,40,41,45,54,71,75,76,77,78,80,81,82,84,85,86,87,88,119,120,122,125,126,127,128,132,133,134,135,136,139,151,153,154,155,157,158,164,166,173,177,178,179,180,189,190,195,196,197,198,211,214,215,216,222,224,226,231,232,],[-12,-13,-15,-14,-11,-78,-54,-55,-60,-61,-43,-46,-47,-16,115,-46,-12,-13,-15,-14,-47,-78,-11,-85,-86,-87,-88,-44,-191,-12,-28,-11,-13,-14,-15,-12,-13,-15,-14,-11,-40,-12,-15,-13,-11,-78,-14,-45,-27,-11,-13,-15,-12,-14,-90,-190,-12,-13,-15,-11,-57,-12,-13,-15,-44,-12,-12,-24,-25,]),'PUNTO':([23,],[67,]),'READLINESYNC':([67,],[130,]),'INT':([137,227,229,234,],[202,235,202,235,]),'DOUBLE':([137,227,229,234,],[203,236,203,236,]),'BOOL':([137,229,234,],[204,204,237,]),'STRING':([137,229,],[205,205,]),'VOID':([137,229,],[206,206,]),'LIST':([137,229,],[207,207,]),'SET':([137,229,],[208,208,]),'MAP':([137,229,],[209,209,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'valores':([0,22,38,55,57,],[1,65,96,116,118,]),'valor':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[2,2,69,99,2,117,2,69,194,200,194,213,219,221,213,213,69,200,200,]),'datos':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'operaciones':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'estructura_dato':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'indexacion':([0,22,24,25,38,55,56,57,60,68,89,90,93,101,102,107,108,111,121,123,124,131,143,144,145,148,150,162,163,165,167,181,191,193,212,223,],[7,7,76,86,7,7,7,7,126,133,126,154,154,126,126,154,177,186,126,86,196,133,126,126,7,86,215,7,7,86,133,215,126,76,133,133,]),'read':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ejecutar_funcion':([0,22,24,25,38,55,56,57,60,68,89,90,93,101,102,107,108,111,121,123,124,131,143,144,145,148,150,162,163,165,167,181,191,193,212,223,],[9,9,77,87,9,9,9,9,128,134,128,153,153,128,128,153,178,187,128,87,197,134,128,128,9,87,216,9,9,87,134,216,128,77,134,134,]),'negativo':([0,22,24,38,55,56,57,60,68,89,90,93,101,102,107,108,111,121,124,131,143,144,145,150,162,163,167,181,191,193,212,223,],[10,10,78,10,10,10,10,127,135,127,158,158,127,127,158,180,188,127,10,135,127,127,10,135,10,10,135,135,127,78,135,135,]),'casting':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'numero':([0,22,24,25,38,55,56,57,60,68,89,90,93,101,102,107,108,111,121,123,124,131,143,144,145,148,150,162,163,165,167,181,191,193,212,223,],[12,12,82,84,12,12,12,12,125,136,125,155,155,125,125,155,173,184,125,84,198,136,125,125,12,84,136,12,12,84,136,136,125,82,136,136,]),'bool':([0,22,24,38,46,55,56,57,68,72,90,93,107,108,124,131,145,150,162,163,167,181,193,212,223,],[14,14,14,14,104,14,14,14,14,104,152,152,152,174,14,14,14,217,14,14,14,14,14,14,14,]),'operacion_mat':([0,22,24,38,55,56,57,60,68,90,93,102,107,108,111,121,124,131,143,145,150,162,163,167,181,191,193,212,223,],[15,15,81,15,15,15,15,122,81,157,157,166,157,157,183,192,15,81,122,15,81,15,15,81,81,122,81,81,81,]),'operacion_log':([0,22,24,38,55,56,57,68,90,93,124,131,145,150,162,163,167,181,193,212,223,],[16,16,16,16,16,16,16,16,149,159,16,16,16,16,16,16,16,16,16,16,16,]),'operacion_unaria':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'operacion_autoasig':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'lista':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'conjunto':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'mapa':([0,22,24,38,55,56,57,68,124,131,145,150,162,163,167,181,193,212,223,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'operacion_mat_pos':([0,22,24,38,55,56,57,60,68,90,93,101,102,107,108,111,121,124,131,143,144,145,150,162,163,167,181,191,193,212,223,],[30,30,30,30,30,30,30,30,30,30,30,164,30,30,30,30,30,30,30,30,211,30,30,30,30,30,30,30,30,30,30,]),'operacion_mat_neg':([0,22,24,38,55,56,57,60,68,90,93,102,107,108,111,121,124,131,143,145,150,162,163,167,181,191,193,212,223,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'operacion_log_con_par':([0,22,24,38,46,55,56,57,68,72,90,93,107,108,124,131,145,150,162,163,167,181,193,212,223,],[32,32,32,32,105,32,32,32,32,105,32,32,171,171,32,32,32,218,32,32,218,32,32,32,32,]),'operacion_log_sin_par':([0,22,24,38,55,56,57,68,90,93,107,124,131,145,150,162,163,167,181,193,212,223,],[33,33,70,33,33,33,33,70,33,33,168,33,70,33,70,33,33,70,70,70,70,70,]),'operacion_log_not':([0,22,24,38,55,56,57,68,90,93,107,124,131,145,150,162,163,167,181,193,212,223,],[34,34,83,34,34,34,34,83,34,34,170,34,83,34,83,34,34,83,83,83,83,83,]),'operandos_log':([0,22,24,38,55,56,57,68,90,93,107,124,131,145,150,162,163,167,181,193,212,223,],[35,35,79,35,35,35,35,79,35,35,169,35,79,35,79,35,35,79,79,79,79,79,]),'operacion_mat_con_par':([0,22,24,25,38,55,56,57,60,68,90,93,101,102,107,108,111,121,123,124,131,143,144,145,150,162,163,165,167,181,191,193,212,223,],[39,39,39,88,39,39,39,39,39,39,39,39,39,39,39,39,39,39,88,39,39,39,39,39,39,39,39,222,39,39,39,39,39,39,]),'operacion_mat_sin_par':([0,22,24,38,55,56,57,60,68,89,90,93,101,102,107,108,111,121,124,131,143,144,145,150,162,163,167,181,191,193,212,223,],[40,40,71,40,40,40,40,40,71,146,40,40,40,40,40,40,40,40,71,71,40,40,40,71,40,40,71,71,40,71,71,71,]),'operando_mat':([0,22,24,38,55,56,57,60,68,89,90,93,101,102,107,108,111,121,124,131,143,144,145,150,162,163,167,181,191,193,212,223,],[41,41,80,41,41,41,41,41,80,147,41,41,41,41,41,41,41,41,80,80,41,41,41,80,41,41,80,80,41,80,80,80,]),'operacion_log_not_sin_par':([0,22,24,38,55,56,57,68,90,93,107,124,131,145,150,162,163,167,181,193,212,223,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'operacion_log_not_con_par':([0,22,24,38,55,56,57,68,90,93,107,124,131,145,150,162,163,167,181,193,212,223,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'operacion_comp':([0,22,24,38,55,56,57,68,90,93,107,124,131,145,150,162,163,167,181,193,212,223,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'casting_num':([0,22,24,38,55,56,57,60,68,89,90,93,101,102,107,108,111,121,124,131,143,144,145,150,162,163,167,181,191,193,212,223,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'operacion_comp_con_par':([0,22,24,38,55,56,57,68,90,93,107,108,124,131,145,150,162,163,167,181,193,212,223,],[47,47,47,47,47,47,47,47,47,47,47,176,47,47,47,47,47,47,225,225,47,225,225,]),'operacion_comp_sin_par':([0,22,24,38,55,56,57,68,90,93,107,124,131,145,150,162,163,167,181,193,212,223,],[48,48,73,48,48,48,48,73,48,48,48,48,73,48,73,48,48,73,73,73,73,73,]),'operacion_comp_eq':([0,22,24,38,55,56,57,68,90,93,107,124,131,145,150,162,163,167,181,193,212,223,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'operacion_comp_orden':([0,22,24,38,55,56,57,68,90,93,107,108,124,131,145,150,162,163,167,181,193,212,223,],[50,50,50,50,50,50,50,50,50,50,50,175,50,50,50,50,50,50,50,50,50,50,50,]),'operando_comp_eq':([0,22,24,38,55,56,57,68,90,93,107,108,124,131,145,150,162,163,167,181,193,212,223,],[51,51,51,51,51,51,51,51,51,51,51,172,51,51,51,51,51,51,51,51,51,51,51,]),'operacion_comp_orden_sin_par':([0,22,24,38,55,56,57,68,90,93,107,108,124,131,145,150,162,163,167,181,193,212,223,],[52,52,74,52,52,52,52,74,52,52,52,52,52,74,52,74,52,52,74,74,74,74,74,]),'operacion_comp_orden_con_par':([0,22,24,38,55,56,57,68,90,93,107,108,124,131,145,150,162,163,167,181,193,212,223,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'operando_comp_orden':([0,22,24,38,55,56,57,68,90,93,107,108,111,124,131,145,150,162,163,167,181,193,212,223,],[54,54,54,54,54,54,54,54,54,54,54,54,182,54,54,54,54,54,54,54,54,54,54,54,]),'operador_mat':([5,39,41,75,80,88,120,132,147,151,179,185,195,214,224,226,],[60,101,102,143,102,144,191,143,102,191,191,191,143,143,143,143,]),'operadores_log':([32,35,79,169,218,],[90,93,93,93,90,]),'claves_valores':([38,163,],[98,220,]),'clave_valor':([38,163,],[100,100,]),'operando_log_not':([46,72,],[103,140,]),'operador_comp_eq':([51,],[108,]),'operador_comp_orden':([54,],[111,]),'tipo_dato':([137,229,],[201,201,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> valores","S'",1,None,None,None),
  ('valores -> valor','valores',1,'p_valores','sintacticoOp.py',5),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintacticoOp.py',6),
  ('operador_mat -> MAS','operador_mat',1,'p_operador_mat','sintactico.py',6),
  ('operador_mat -> RESTA','operador_mat',1,'p_operador_mat','sintactico.py',7),
  ('operador_mat -> MULTIPL','operador_mat',1,'p_operador_mat','sintactico.py',8),
  ('operador_mat -> DIVISION','operador_mat',1,'p_operador_mat','sintactico.py',9),
  ('all -> simbolos_globales','all',1,'p_all','sintaxis.py',10),
  ('clave_valor -> valor DOSPUNTOS valor','clave_valor',3,'p_clave_valor','sintacticoOp.py',12),
  ('simbolo_global -> declaracion_asign','simbolo_global',1,'p_simbolo_global','sintaxis.py',16),
  ('simbolo_global -> funcion','simbolo_global',1,'p_simbolo_global','sintaxis.py',17),
  ('operando_mat -> numero','operando_mat',1,'p_operando_mat','sintactico.py',16),
  ('operando_mat -> VARIABLE','operando_mat',1,'p_operando_mat','sintactico.py',17),
  ('operando_mat -> indexacion','operando_mat',1,'p_operando_mat','sintactico.py',18),
  ('operando_mat -> negativo','operando_mat',1,'p_operando_mat','sintactico.py',19),
  ('operando_mat -> ejecutar_funcion','operando_mat',1,'p_operando_mat','sintactico.py',20),
  ('operando_mat -> casting_num','operando_mat',1,'p_operando_mat','sintactico.py',21),
  ('claves_valores -> clave_valor','claves_valores',1,'p_claves_valores','sintacticoOp.py',18),
  ('claves_valores -> clave_valor COMA claves_valores','claves_valores',3,'p_claves_valores','sintacticoOp.py',19),
  ('simbolos_globales -> simbolo_global','simbolos_globales',1,'p_simbolos_globales','sintaxis.py',23),
  ('simbolos_globales -> simbolo_global simbolos_globales','simbolos_globales',2,'p_simbolos_globales','sintaxis.py',24),
  ('simbolos_globales -> empty','simbolos_globales',1,'p_simbolos_globales','sintaxis.py',25),
  ('lista -> CORCH_IZQ valores CORCH_DER','lista',3,'p_lista','sintacticoOp.py',25),
  ('lista -> CORCH_IZQ CORCH_DER','lista',2,'p_lista','sintacticoOp.py',26),
  ('casting_num -> LPARENT valor AS INT RPARENT','casting_num',5,'p_casting_num','sintactico.py',28),
  ('casting_num -> LPARENT valor AS DOUBLE RPARENT','casting_num',5,'p_casting_num','sintactico.py',29),
  ('empty -> <empty>','empty',0,'p_empty','sintaxis.py',31),
  ('operacion_mat_sin_par -> operando_mat operador_mat operacion_mat','operacion_mat_sin_par',3,'p_operacion_mat_sin_par','sintactico.py',35),
  ('operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat','operacion_mat_sin_par',3,'p_operacion_mat_sin_par','sintactico.py',36),
  ('conjunto -> LLAVEL valores LLAVER','conjunto',3,'p_conjunto','sintacticoOp.py',36),
  ('conjunto -> LLAVEL LLAVER','conjunto',2,'p_conjunto','sintacticoOp.py',37),
  ('sentencia -> declaracion_var','sentencia',1,'p_sentencia','sintaxis.py',37),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','sintaxis.py',38),
  ('sentencia -> declaracion_asign','sentencia',1,'p_sentencia','sintaxis.py',39),
  ('sentencia -> operaciones PUNTOCOMA','sentencia',2,'p_sentencia','sintaxis.py',40),
  ('sentencia -> print','sentencia',1,'p_sentencia','sintaxis.py',41),
  ('sentencia -> estructura_control','sentencia',1,'p_sentencia','sintaxis.py',42),
  ('sentencia -> return','sentencia',1,'p_sentencia','sintaxis.py',43),
  ('sentencia -> continue','sentencia',1,'p_sentencia','sintaxis.py',44),
  ('sentencia -> break','sentencia',1,'p_sentencia','sintaxis.py',45),
  ('operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT','operacion_mat_con_par',3,'p_operacion_mat_con_par','sintactico.py',42),
  ('mapa -> LLAVEL claves_valores LLAVER','mapa',3,'p_mapa','sintacticoOp.py',48),
  ('mapa -> LLAVEL LLAVER','mapa',2,'p_mapa','sintacticoOp.py',49),
  ('operacion_mat_pos -> operacion_mat_con_par','operacion_mat_pos',1,'p_operacion_mat_pos','sintactico.py',49),
  ('operacion_mat_pos -> RESTA operacion_mat_con_par','operacion_mat_pos',2,'p_operacion_mat_pos','sintactico.py',50),
  ('operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos','operacion_mat_pos',3,'p_operacion_mat_pos','sintactico.py',51),
  ('operacion_mat_pos -> operacion_mat_sin_par','operacion_mat_pos',1,'p_operacion_mat_pos','sintactico.py',52),
  ('operacion_mat_pos -> operando_mat','operacion_mat_pos',1,'p_operacion_mat_pos','sintactico.py',53),
  ('sentencias -> sentencia','sentencias',1,'p_sentencias','sintaxis.py',51),
  ('sentencias -> sentencia sentencias','sentencias',2,'p_sentencias','sintaxis.py',52),
  ('sentencias -> empty','sentencias',1,'p_sentencias','sintaxis.py',53),
  ('estructura_dato -> lista','estructura_dato',1,'p_estructura_dato','sintacticoOp.py',57),
  ('estructura_dato -> conjunto','estructura_dato',1,'p_estructura_dato','sintacticoOp.py',58),
  ('estructura_dato -> mapa','estructura_dato',1,'p_estructura_dato','sintacticoOp.py',59),
  ('numero -> INTEGER','numero',1,'p_numero','sintaxis.py',59),
  ('numero -> FLOAT','numero',1,'p_numero','sintaxis.py',60),
  ('operacion_mat_neg -> RESTA operacion_mat_con_par','operacion_mat_neg',2,'p_operacion_mat_neg','sintactico.py',59),
  ('operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos','operacion_mat_neg',4,'p_operacion_mat_neg','sintactico.py',60),
  ('bool -> TRUE','bool',1,'p_bool','sintaxis.py',66),
  ('bool -> FALSE','bool',1,'p_bool','sintaxis.py',67),
  ('operacion_mat -> operacion_mat_pos','operacion_mat',1,'p_operacion_mat','sintactico.py',66),
  ('operacion_mat -> operacion_mat_neg','operacion_mat',1,'p_operacion_mat','sintactico.py',67),
  ('datos -> numero','datos',1,'p_datos','sintaxis.py',73),
  ('datos -> CADENA','datos',1,'p_datos','sintaxis.py',74),
  ('datos -> bool','datos',1,'p_datos','sintaxis.py',75),
  ('operador_comp_orden -> MAYOR_QUE','operador_comp_orden',1,'p_operador_comp_orden','sintactico.py',73),
  ('operador_comp_orden -> MENOR_QUE','operador_comp_orden',1,'p_operador_comp_orden','sintactico.py',74),
  ('operador_comp_orden -> MENOR_O_IGUAL','operador_comp_orden',1,'p_operador_comp_orden','sintactico.py',75),
  ('operador_comp_orden -> MAYOR_O_IGUAL','operador_comp_orden',1,'p_operador_comp_orden','sintactico.py',76),
  ('valor -> datos','valor',1,'p_valor','sintaxis.py',81),
  ('valor -> operaciones','valor',1,'p_valor','sintaxis.py',82),
  ('valor -> VARIABLE','valor',1,'p_valor','sintaxis.py',83),
  ('valor -> estructura_dato','valor',1,'p_valor','sintaxis.py',84),
  ('valor -> indexacion','valor',1,'p_valor','sintaxis.py',85),
  ('valor -> read','valor',1,'p_valor','sintaxis.py',86),
  ('valor -> ejecutar_funcion','valor',1,'p_valor','sintaxis.py',87),
  ('valor -> negativo','valor',1,'p_valor','sintaxis.py',88),
  ('valor -> casting','valor',1,'p_valor','sintaxis.py',89),
  ('operando_comp_orden -> operacion_mat','operando_comp_orden',1,'p_operando_comp_orden','sintactico.py',82),
  ('operando_comp_orden -> numero','operando_comp_orden',1,'p_operando_comp_orden','sintactico.py',83),
  ('operando_comp_orden -> VARIABLE','operando_comp_orden',1,'p_operando_comp_orden','sintactico.py',84),
  ('operando_comp_orden -> indexacion','operando_comp_orden',1,'p_operando_comp_orden','sintactico.py',85),
  ('operando_comp_orden -> ejecutar_funcion','operando_comp_orden',1,'p_operando_comp_orden','sintactico.py',86),
  ('operando_comp_orden -> negativo','operando_comp_orden',1,'p_operando_comp_orden','sintactico.py',87),
  ('operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden','operacion_comp_orden_sin_par',3,'p_operacion_comp_orden_sin_par','sintactico.py',94),
  ('negativo -> RESTA numero','negativo',2,'p_negativo','sintaxis.py',95),
  ('negativo -> RESTA VARIABLE','negativo',2,'p_negativo','sintaxis.py',96),
  ('negativo -> RESTA indexacion','negativo',2,'p_negativo','sintaxis.py',97),
  ('negativo -> RESTA ejecutar_funcion','negativo',2,'p_negativo','sintaxis.py',98),
  ('operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT','operacion_comp_orden_con_par',3,'p_operacion_comp_orden_con_par','sintactico.py',100),
  ('indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ','indexacion',4,'p_indexacion','sintaxis.py',104),
  ('operacion_comp_orden -> operacion_comp_orden_sin_par','operacion_comp_orden',1,'p_operacion_comp_orden','sintactico.py',106),
  ('operacion_comp_orden -> operacion_comp_orden_con_par','operacion_comp_orden',1,'p_operacion_comp_orden','sintactico.py',107),
  ('tipo_dato -> BOOL','tipo_dato',1,'p_tipo_dato','sintaxis.py',109),
  ('tipo_dato -> DOUBLE','tipo_dato',1,'p_tipo_dato','sintaxis.py',110),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','sintaxis.py',111),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','sintaxis.py',112),
  ('tipo_dato -> VOID','tipo_dato',1,'p_tipo_dato','sintaxis.py',113),
  ('tipo_dato -> LIST','tipo_dato',1,'p_tipo_dato','sintaxis.py',114),
  ('tipo_dato -> SET','tipo_dato',1,'p_tipo_dato','sintaxis.py',115),
  ('tipo_dato -> MAP','tipo_dato',1,'p_tipo_dato','sintaxis.py',116),
  ('operando_comp_eq -> numero','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',114),
  ('operando_comp_eq -> bool','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',115),
  ('operando_comp_eq -> CADENA','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',116),
  ('operando_comp_eq -> operacion_mat','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',117),
  ('operando_comp_eq -> operacion_comp_orden','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',118),
  ('operando_comp_eq -> operacion_comp_con_par','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',119),
  ('operando_comp_eq -> indexacion','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',120),
  ('operando_comp_eq -> ejecutar_funcion','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',121),
  ('operando_comp_eq -> VARIABLE','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',122),
  ('operando_comp_eq -> operacion_log_con_par','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',123),
  ('operando_comp_eq -> negativo','operando_comp_eq',1,'p_operando_comp_eq','sintactico.py',124),
  ('operando_comp_eq -> LPARENT valor AS BOOL RPARENT','operando_comp_eq',5,'p_operando_comp_eq','sintactico.py',125),
  ('declaradores -> tipo_dato','declaradores',1,'p_declaradores','sintaxis.py',122),
  ('declaradores -> FINAL','declaradores',1,'p_declaradores','sintaxis.py',123),
  ('declaradores -> VAR','declaradores',1,'p_declaradores','sintaxis.py',124),
  ('declaracion_var -> declaradores VARIABLE PUNTOCOMA','declaracion_var',3,'p_declaracion_var','sintaxis.py',130),
  ('operador_comp_eq -> IGUAL','operador_comp_eq',1,'p_operador_comp_eq','sintactico.py',131),
  ('operador_comp_eq -> NO_IGUAL','operador_comp_eq',1,'p_operador_comp_eq','sintactico.py',132),
  ('declaracion_asign -> tipo_dato VARIABLE IGUAL valor PUNTOCOMA','declaracion_asign',5,'p_declaracion_asign','sintaxis.py',136),
  ('declaracion_asign -> FINAL VARIABLE IGUAL valor PUNTOCOMA','declaracion_asign',5,'p_declaracion_asign','sintaxis.py',137),
  ('declaracion_asign -> VAR VARIABLE IGUAL valor PUNTOCOMA','declaracion_asign',5,'p_declaracion_asign','sintaxis.py',138),
  ('declaracion_asign -> CONST VARIABLE IGUAL valor PUNTOCOMA','declaracion_asign',5,'p_declaracion_asign','sintaxis.py',139),
  ('operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq','operacion_comp_eq',3,'p_operacion_comp_eq','sintactico.py',138),
  ('operacion_comp_sin_par -> operacion_comp_eq','operacion_comp_sin_par',1,'p_operacion_comp_sin_par','sintactico.py',144),
  ('operacion_comp_sin_par -> operacion_comp_orden','operacion_comp_sin_par',1,'p_operacion_comp_sin_par','sintactico.py',145),
  ('asignacion -> VARIABLE IGUAL valor PUNTOCOMA','asignacion',4,'p_asignacion','sintaxis.py',145),
  ('asignacion -> VARIABLE CORCH_IZQ valor CORCH_DER IGUAL valor PUNTOCOMA','asignacion',7,'p_asignacion','sintaxis.py',146),
  ('asignacion -> operacion_autoasig PUNTOCOMA','asignacion',2,'p_asignacion','sintaxis.py',147),
  ('asignacion -> declaracion_asign','asignacion',1,'p_asignacion','sintaxis.py',148),
  ('operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT','operacion_comp_con_par',3,'p_operacion_comp_con_par','sintactico.py',151),
  ('print -> PRINT LPARENT valor RPARENT PUNTOCOMA','print',5,'p_print','sintaxis.py',153),
  ('operacion_comp -> operacion_comp_con_par','operacion_comp',1,'p_operacion_comp','sintactico.py',157),
  ('operacion_comp -> operacion_comp_sin_par','operacion_comp',1,'p_operacion_comp','sintactico.py',158),
  ('cuerpo_estruct -> LLAVEL sentencias LLAVER','cuerpo_estruct',3,'p_cuerpo_estruct','sintaxis.py',158),
  ('cuerpo_estruct -> sentencia','cuerpo_estruct',1,'p_cuerpo_estruct','sintaxis.py',159),
  ('operadores_log -> AND','operadores_log',1,'p_operadores_log','sintactico.py',164),
  ('operadores_log -> OR','operadores_log',1,'p_operadores_log','sintactico.py',165),
  ('for -> FOR LPARENT IGUAL operacion_log PUNTOCOMA operaciones RPARENT cuerpo_estruct','for',8,'p_for','sintaxis.py',166),
  ('for -> FOR LPARENT VARIABLE IN VARIABLE RPARENT cuerpo_estruct','for',7,'p_for','sintaxis.py',167),
  ('for -> FOR LPARENT tipo_dato VARIABLE IN VARIABLE RPARENT cuerpo_estruct','for',8,'p_for','sintaxis.py',168),
  ('for -> FOR LPARENT VAR VARIABLE IN VARIABLE RPARENT cuerpo_estruct','for',8,'p_for','sintaxis.py',169),
  ('operandos_log -> operacion_comp','operandos_log',1,'p_operandos_log','sintactico.py',171),
  ('operandos_log -> operacion_log_not','operandos_log',1,'p_operandos_log','sintactico.py',172),
  ('operandos_log -> VARIABLE','operandos_log',1,'p_operandos_log','sintactico.py',173),
  ('operandos_log -> bool','operandos_log',1,'p_operandos_log','sintactico.py',174),
  ('operandos_log -> ejecutar_funcion','operandos_log',1,'p_operandos_log','sintactico.py',175),
  ('operandos_log -> indexacion','operandos_log',1,'p_operandos_log','sintactico.py',176),
  ('if -> IF LPARENT operacion_log RPARENT cuerpo_estruct','if',5,'p_if','sintaxis.py',176),
  ('operacion_log_sin_par -> operandos_log operadores_log operacion_log','operacion_log_sin_par',3,'p_operacion_log_sin_par','sintactico.py',182),
  ('operacion_log_sin_par -> operandos_log','operacion_log_sin_par',1,'p_operacion_log_sin_par','sintactico.py',183),
  ('if_else -> IF LPARENT operacion_log RPARENT cuerpo_estruct ELSE cuerpo_estruct','if_else',7,'p_if_else','sintaxis.py',183),
  ('operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT','operacion_log_con_par',3,'p_operacion_log_con_par','sintactico.py',189),
  ('while -> WHILE LPARENT operacion_log RPARENT cuerpo_estruct','while',5,'p_while','sintaxis.py',190),
  ('operando_log_not -> bool','operando_log_not',1,'p_operando_log_not','sintactico.py',195),
  ('operando_log_not -> operacion_log_con_par','operando_log_not',1,'p_operando_log_not','sintactico.py',196),
  ('operando_log_not -> VARIABLE','operando_log_not',1,'p_operando_log_not','sintactico.py',197),
  ('estructura_control -> if','estructura_control',1,'p_estructura_control','sintaxis.py',196),
  ('estructura_control -> if_else','estructura_control',1,'p_estructura_control','sintaxis.py',197),
  ('estructura_control -> while','estructura_control',1,'p_estructura_control','sintaxis.py',198),
  ('estructura_control -> for','estructura_control',1,'p_estructura_control','sintaxis.py',199),
  ('operacion_log_not_sin_par -> NEGACION operando_log_not','operacion_log_not_sin_par',2,'p_operacion_log_not_sin_par','sintactico.py',203),
  ('break -> BREAK PUNTOCOMA','break',2,'p_break','sintaxis.py',204),
  ('continue -> CONTINUE PUNTOCOMA','continue',2,'p_continue','sintaxis.py',208),
  ('operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT','operacion_log_not_con_par',4,'p_operacion_log_not_con_par','sintactico.py',209),
  ('read -> STDIN PUNTO READLINESYNC LPARENT RPARENT','read',5,'p_read','sintaxis.py',213),
  ('operacion_log_not -> operacion_log_not_sin_par','operacion_log_not',1,'p_operacion_log_not','sintactico.py',215),
  ('operacion_log_not -> operacion_log_not_con_par','operacion_log_not',1,'p_operacion_log_not','sintactico.py',216),
  ('return -> RETURN valor PUNTOCOMA','return',3,'p_return','sintaxis.py',221),
  ('return -> RETURN PUNTOCOMA','return',2,'p_return','sintaxis.py',222),
  ('operacion_log -> operacion_log_con_par','operacion_log',1,'p_operacion_log','sintactico.py',223),
  ('operacion_log -> operacion_log_con_par operadores_log operacion_log','operacion_log',3,'p_operacion_log','sintactico.py',224),
  ('operacion_log -> operacion_log_sin_par','operacion_log',1,'p_operacion_log','sintactico.py',225),
  ('operacion_log -> operacion_log_not','operacion_log',1,'p_operacion_log','sintactico.py',226),
  ('operacion_log -> operandos_log','operacion_log',1,'p_operacion_log','sintactico.py',227),
  ('arg_funcion -> VARIABLE','arg_funcion',1,'p_arg_funcion','sintaxis.py',228),
  ('arg_funcion -> VAR VARIABLE','arg_funcion',2,'p_arg_funcion','sintaxis.py',229),
  ('arg_funcion -> tipo_dato VARIABLE','arg_funcion',2,'p_arg_funcion','sintaxis.py',230),
  ('operacion_unaria -> VARIABLE AUTOINCREMENTO','operacion_unaria',2,'p_operacion_unaria','sintactico.py',233),
  ('operacion_unaria -> VARIABLE AUTODECREMENTO','operacion_unaria',2,'p_operacion_unaria','sintactico.py',234),
  ('operacion_unaria -> AUTOINCREMENTO VARIABLE','operacion_unaria',2,'p_operacion_unaria','sintactico.py',235),
  ('operacion_unaria -> AUTODECREMENTO VARIABLE','operacion_unaria',2,'p_operacion_unaria','sintactico.py',236),
  ('args_funcion -> arg_funcion COMA args_funcion','args_funcion',3,'p_args_funcion','sintaxis.py',236),
  ('args_funcion -> arg_funcion','args_funcion',1,'p_args_funcion','sintaxis.py',237),
  ('args_funcion -> empty','args_funcion',1,'p_args_funcion','sintaxis.py',238),
  ('operaciones -> operacion_mat','operaciones',1,'p_operaciones','sintactico.py',242),
  ('operaciones -> operacion_log','operaciones',1,'p_operaciones','sintactico.py',243),
  ('operaciones -> operacion_unaria','operaciones',1,'p_operaciones','sintactico.py',244),
  ('operaciones -> operacion_autoasig','operaciones',1,'p_operaciones','sintactico.py',245),
  ('funcion -> tipo_dato VARIABLE LPARENT args_funcion RPARENT LLAVEL sentencias LLAVER','funcion',8,'p_declarar_funcion','sintaxis.py',244),
  ('ejecutar_funcion -> VARIABLE LPARENT valores RPARENT','ejecutar_funcion',4,'p_ejecutar_funcion','sintaxis.py',250),
  ('ejecutar_funcion -> VARIABLE LPARENT RPARENT','ejecutar_funcion',3,'p_ejecutar_funcion','sintaxis.py',251),
  ('operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat','operacion_autoasig',4,'p_operacion_autoasig','sintactico.py',250),
  ('casting -> LPARENT valor AS tipo_dato RPARENT','casting',5,'p_casting','sintaxis.py',256),
]
