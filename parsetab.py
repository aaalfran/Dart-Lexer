
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL CADENA COMA CONST CORCHETE_DER CORCHETE_IZQ DIVISION DOUBLE ELSE ES_IGUAL FALSE FINAL FOR FUNCION IF IGUAL IN INCREMENTADOR INT INTEGER LIST LLAVEL LLAVER LPARENT MAIN MAS MAYOR_O_IGUAL MAYOR_QUE MENOR_O_IGUAL MENOR_QUE MULTIPL NEGACION NO_IGUAL OR PARSE PRINT PUNTO PUNTOCOMA READLINESYNC RESTA RETURN RPARENT SALTO_LINEA STDIN STRING TABULACION TODOUBLE TOINT TOSTRING TRUE VAR VARIABLE VOID WRITEcomparaciones : VARIABLE comp VARIABLE PUNTOCOMA\n  asignacion : declaradores VARIABLE IGUAL tipodato PUNTOCOMAsalida : PRINT LPARENT tipodato RPARENT PUNTOCOMAfuncion : VARIABLE LPARENT argumentos RPARENT PUNTOCOMAargumentos : VARIABLE\n                | tipodato argumentos \n  tipodato : INTEGER\n            | CADENA\n            | DOUBLE\n            | VARIABLE\n\n\n  \n  declaradores : INT\n                | CONST\n                | VAR\n                | BOOL\n                | FINAL\n                | STRING\n  \n  comp : ES_IGUAL\n         | NO_IGUAL\n         | MENOR_QUE\n         | MAYOR_QUE\n         | MENOR_O_IGUAL\n         | MAYOR_O_IGUAL\n  '
    
_lr_action_items = {'VARIABLE':([0,3,4,5,6,7,8,9,],[2,10,-17,-18,-19,-20,-21,-22,]),'$end':([1,11,],[0,-1,]),'ES_IGUAL':([2,],[4,]),'NO_IGUAL':([2,],[5,]),'MENOR_QUE':([2,],[6,]),'MAYOR_QUE':([2,],[7,]),'MENOR_O_IGUAL':([2,],[8,]),'MAYOR_O_IGUAL':([2,],[9,]),'PUNTOCOMA':([10,],[11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'comparaciones':([0,],[1,]),'comp':([2,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> comparaciones","S'",1,None,None,None),
  ('comparaciones -> VARIABLE comp VARIABLE PUNTOCOMA','comparaciones',4,'p_comparacion','sintactico.py',7),
  ('asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA','asignacion',5,'p_asignacion','sintactico.py',11),
  ('salida -> PRINT LPARENT tipodato RPARENT PUNTOCOMA','salida',5,'p_salida','sintactico.py',15),
  ('funcion -> VARIABLE LPARENT argumentos RPARENT PUNTOCOMA','funcion',5,'p_funcion','sintactico.py',17),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',19),
  ('argumentos -> tipodato argumentos','argumentos',2,'p_argumentos','sintactico.py',20),
  ('tipodato -> INTEGER','tipodato',1,'p_tipodato','sintactico.py',25),
  ('tipodato -> CADENA','tipodato',1,'p_tipodato','sintactico.py',26),
  ('tipodato -> DOUBLE','tipodato',1,'p_tipodato','sintactico.py',27),
  ('tipodato -> VARIABLE','tipodato',1,'p_tipodato','sintactico.py',28),
  ('declaradores -> INT','declaradores',1,'p_declaradores','sintactico.py',36),
  ('declaradores -> CONST','declaradores',1,'p_declaradores','sintactico.py',37),
  ('declaradores -> VAR','declaradores',1,'p_declaradores','sintactico.py',38),
  ('declaradores -> BOOL','declaradores',1,'p_declaradores','sintactico.py',39),
  ('declaradores -> FINAL','declaradores',1,'p_declaradores','sintactico.py',40),
  ('declaradores -> STRING','declaradores',1,'p_declaradores','sintactico.py',41),
  ('comp -> ES_IGUAL','comp',1,'p_simnbolos','sintactico.py',45),
  ('comp -> NO_IGUAL','comp',1,'p_simnbolos','sintactico.py',46),
  ('comp -> MENOR_QUE','comp',1,'p_simnbolos','sintactico.py',47),
  ('comp -> MAYOR_QUE','comp',1,'p_simnbolos','sintactico.py',48),
  ('comp -> MENOR_O_IGUAL','comp',1,'p_simnbolos','sintactico.py',49),
  ('comp -> MAYOR_O_IGUAL','comp',1,'p_simnbolos','sintactico.py',50),
]
