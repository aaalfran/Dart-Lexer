Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMA
    CORCHETE_DER
    CORCHETE_IZQ
    ELSE
    FALSE
    FOR
    FUNCION
    IF
    IN
    INCREMENTADOR
    LIST
    LLAVEL
    LLAVER
    MAIN
    NEGACION
    OR
    PARSE
    PUNTO
    READLINESYNC
    RETURN
    SALTO_LINEA
    STDIN
    TABULACION
    TODOUBLE
    TOINT
    TOSTRING
    TRUE
    VOID
    WRITE

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> asignacion
Rule 2     sentencias -> comparacion
Rule 3     sentencias -> operacion
Rule 4     sentencias -> impresion
Rule 5     sentencias -> funcion
Rule 6     asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA
Rule 7     comparacion -> VARIABLE comparadores VARIABLE PUNTOCOMA
Rule 8     operacion -> datonumerico operador datonumerico PUNTOCOMA
Rule 9     impresion -> PRINT LPARENT tipodato RPARENT PUNTOCOMA
Rule 10    funcion -> VARIABLE LPARENT argumentos RPARENT PUNTOCOMA
Rule 11    argumentos -> tipodato
Rule 12    datonumerico -> INTEGER
Rule 13    datonumerico -> DOUBLE
Rule 14    operador -> MAS
Rule 15    operador -> RESTA
Rule 16    operador -> MULTIPL
Rule 17    operador -> DIVISION
Rule 18    comparadores -> ES_IGUAL
Rule 19    comparadores -> NO_IGUAL
Rule 20    comparadores -> MENOR_QUE
Rule 21    comparadores -> MAYOR_QUE
Rule 22    comparadores -> MENOR_O_IGUAL
Rule 23    comparadores -> MAYOR_O_IGUAL
Rule 24    declaradores -> INT
Rule 25    declaradores -> CONST
Rule 26    declaradores -> VAR
Rule 27    declaradores -> BOOL
Rule 28    declaradores -> FINAL
Rule 29    declaradores -> STRING
Rule 30    tipodato -> INTEGER
Rule 31    tipodato -> CADENA
Rule 32    tipodato -> DOUBLE
Rule 33    tipodato -> VARIABLE

Terminals, with rules where they appear

AND                  : 
BOOL                 : 27
CADENA               : 31
COMA                 : 
CONST                : 25
CORCHETE_DER         : 
CORCHETE_IZQ         : 
DIVISION             : 17
DOUBLE               : 13 32
ELSE                 : 
ES_IGUAL             : 18
FALSE                : 
FINAL                : 28
FOR                  : 
FUNCION              : 
IF                   : 
IGUAL                : 6
IN                   : 
INCREMENTADOR        : 
INT                  : 24
INTEGER              : 12 30
LIST                 : 
LLAVEL               : 
LLAVER               : 
LPARENT              : 9 10
MAIN                 : 
MAS                  : 14
MAYOR_O_IGUAL        : 23
MAYOR_QUE            : 21
MENOR_O_IGUAL        : 22
MENOR_QUE            : 20
MULTIPL              : 16
NEGACION             : 
NO_IGUAL             : 19
OR                   : 
PARSE                : 
PRINT                : 9
PUNTO                : 
PUNTOCOMA            : 6 7 8 9 10
READLINESYNC         : 
RESTA                : 15
RETURN               : 
RPARENT              : 9 10
SALTO_LINEA          : 
STDIN                : 
STRING               : 29
TABULACION           : 
TODOUBLE             : 
TOINT                : 
TOSTRING             : 
TRUE                 : 
VAR                  : 26
VARIABLE             : 6 7 7 10 33
VOID                 : 
WRITE                : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 10
asignacion           : 1
comparacion          : 2
comparadores         : 7
datonumerico         : 8 8
declaradores         : 6
funcion              : 5
impresion            : 4
operacion            : 3
operador             : 8
sentencias           : 0
tipodato             : 6 9 11

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . asignacion
    (2) sentencias -> . comparacion
    (3) sentencias -> . operacion
    (4) sentencias -> . impresion
    (5) sentencias -> . funcion
    (6) asignacion -> . declaradores VARIABLE IGUAL tipodato PUNTOCOMA
    (7) comparacion -> . VARIABLE comparadores VARIABLE PUNTOCOMA
    (8) operacion -> . datonumerico operador datonumerico PUNTOCOMA
    (9) impresion -> . PRINT LPARENT tipodato RPARENT PUNTOCOMA
    (10) funcion -> . VARIABLE LPARENT argumentos RPARENT PUNTOCOMA
    (24) declaradores -> . INT
    (25) declaradores -> . CONST
    (26) declaradores -> . VAR
    (27) declaradores -> . BOOL
    (28) declaradores -> . FINAL
    (29) declaradores -> . STRING
    (12) datonumerico -> . INTEGER
    (13) datonumerico -> . DOUBLE

    VARIABLE        shift and go to state 8
    PRINT           shift and go to state 10
    INT             shift and go to state 11
    CONST           shift and go to state 12
    VAR             shift and go to state 13
    BOOL            shift and go to state 14
    FINAL           shift and go to state 15
    STRING          shift and go to state 16
    INTEGER         shift and go to state 17
    DOUBLE          shift and go to state 18

    sentencias                     shift and go to state 1
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 3
    operacion                      shift and go to state 4
    impresion                      shift and go to state 5
    funcion                        shift and go to state 6
    declaradores                   shift and go to state 7
    datonumerico                   shift and go to state 9

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> asignacion .

    $end            reduce using rule 1 (sentencias -> asignacion .)


state 3

    (2) sentencias -> comparacion .

    $end            reduce using rule 2 (sentencias -> comparacion .)


state 4

    (3) sentencias -> operacion .

    $end            reduce using rule 3 (sentencias -> operacion .)


state 5

    (4) sentencias -> impresion .

    $end            reduce using rule 4 (sentencias -> impresion .)


state 6

    (5) sentencias -> funcion .

    $end            reduce using rule 5 (sentencias -> funcion .)


state 7

    (6) asignacion -> declaradores . VARIABLE IGUAL tipodato PUNTOCOMA

    VARIABLE        shift and go to state 19


state 8

    (7) comparacion -> VARIABLE . comparadores VARIABLE PUNTOCOMA
    (10) funcion -> VARIABLE . LPARENT argumentos RPARENT PUNTOCOMA
    (18) comparadores -> . ES_IGUAL
    (19) comparadores -> . NO_IGUAL
    (20) comparadores -> . MENOR_QUE
    (21) comparadores -> . MAYOR_QUE
    (22) comparadores -> . MENOR_O_IGUAL
    (23) comparadores -> . MAYOR_O_IGUAL

    LPARENT         shift and go to state 21
    ES_IGUAL        shift and go to state 22
    NO_IGUAL        shift and go to state 23
    MENOR_QUE       shift and go to state 24
    MAYOR_QUE       shift and go to state 25
    MENOR_O_IGUAL   shift and go to state 26
    MAYOR_O_IGUAL   shift and go to state 27

    comparadores                   shift and go to state 20

state 9

    (8) operacion -> datonumerico . operador datonumerico PUNTOCOMA
    (14) operador -> . MAS
    (15) operador -> . RESTA
    (16) operador -> . MULTIPL
    (17) operador -> . DIVISION

    MAS             shift and go to state 29
    RESTA           shift and go to state 30
    MULTIPL         shift and go to state 31
    DIVISION        shift and go to state 32

    operador                       shift and go to state 28

state 10

    (9) impresion -> PRINT . LPARENT tipodato RPARENT PUNTOCOMA

    LPARENT         shift and go to state 33


state 11

    (24) declaradores -> INT .

    VARIABLE        reduce using rule 24 (declaradores -> INT .)


state 12

    (25) declaradores -> CONST .

    VARIABLE        reduce using rule 25 (declaradores -> CONST .)


state 13

    (26) declaradores -> VAR .

    VARIABLE        reduce using rule 26 (declaradores -> VAR .)


state 14

    (27) declaradores -> BOOL .

    VARIABLE        reduce using rule 27 (declaradores -> BOOL .)


state 15

    (28) declaradores -> FINAL .

    VARIABLE        reduce using rule 28 (declaradores -> FINAL .)


state 16

    (29) declaradores -> STRING .

    VARIABLE        reduce using rule 29 (declaradores -> STRING .)


state 17

    (12) datonumerico -> INTEGER .

    MAS             reduce using rule 12 (datonumerico -> INTEGER .)
    RESTA           reduce using rule 12 (datonumerico -> INTEGER .)
    MULTIPL         reduce using rule 12 (datonumerico -> INTEGER .)
    DIVISION        reduce using rule 12 (datonumerico -> INTEGER .)
    PUNTOCOMA       reduce using rule 12 (datonumerico -> INTEGER .)


state 18

    (13) datonumerico -> DOUBLE .

    MAS             reduce using rule 13 (datonumerico -> DOUBLE .)
    RESTA           reduce using rule 13 (datonumerico -> DOUBLE .)
    MULTIPL         reduce using rule 13 (datonumerico -> DOUBLE .)
    DIVISION        reduce using rule 13 (datonumerico -> DOUBLE .)
    PUNTOCOMA       reduce using rule 13 (datonumerico -> DOUBLE .)


state 19

    (6) asignacion -> declaradores VARIABLE . IGUAL tipodato PUNTOCOMA

    IGUAL           shift and go to state 34


state 20

    (7) comparacion -> VARIABLE comparadores . VARIABLE PUNTOCOMA

    VARIABLE        shift and go to state 35


state 21

    (10) funcion -> VARIABLE LPARENT . argumentos RPARENT PUNTOCOMA
    (11) argumentos -> . tipodato
    (30) tipodato -> . INTEGER
    (31) tipodato -> . CADENA
    (32) tipodato -> . DOUBLE
    (33) tipodato -> . VARIABLE

    INTEGER         shift and go to state 39
    CADENA          shift and go to state 40
    DOUBLE          shift and go to state 41
    VARIABLE        shift and go to state 36

    argumentos                     shift and go to state 37
    tipodato                       shift and go to state 38

state 22

    (18) comparadores -> ES_IGUAL .

    VARIABLE        reduce using rule 18 (comparadores -> ES_IGUAL .)


state 23

    (19) comparadores -> NO_IGUAL .

    VARIABLE        reduce using rule 19 (comparadores -> NO_IGUAL .)


state 24

    (20) comparadores -> MENOR_QUE .

    VARIABLE        reduce using rule 20 (comparadores -> MENOR_QUE .)


state 25

    (21) comparadores -> MAYOR_QUE .

    VARIABLE        reduce using rule 21 (comparadores -> MAYOR_QUE .)


state 26

    (22) comparadores -> MENOR_O_IGUAL .

    VARIABLE        reduce using rule 22 (comparadores -> MENOR_O_IGUAL .)


state 27

    (23) comparadores -> MAYOR_O_IGUAL .

    VARIABLE        reduce using rule 23 (comparadores -> MAYOR_O_IGUAL .)


state 28

    (8) operacion -> datonumerico operador . datonumerico PUNTOCOMA
    (12) datonumerico -> . INTEGER
    (13) datonumerico -> . DOUBLE

    INTEGER         shift and go to state 17
    DOUBLE          shift and go to state 18

    datonumerico                   shift and go to state 42

state 29

    (14) operador -> MAS .

    INTEGER         reduce using rule 14 (operador -> MAS .)
    DOUBLE          reduce using rule 14 (operador -> MAS .)


state 30

    (15) operador -> RESTA .

    INTEGER         reduce using rule 15 (operador -> RESTA .)
    DOUBLE          reduce using rule 15 (operador -> RESTA .)


state 31

    (16) operador -> MULTIPL .

    INTEGER         reduce using rule 16 (operador -> MULTIPL .)
    DOUBLE          reduce using rule 16 (operador -> MULTIPL .)


state 32

    (17) operador -> DIVISION .

    INTEGER         reduce using rule 17 (operador -> DIVISION .)
    DOUBLE          reduce using rule 17 (operador -> DIVISION .)


state 33

    (9) impresion -> PRINT LPARENT . tipodato RPARENT PUNTOCOMA
    (30) tipodato -> . INTEGER
    (31) tipodato -> . CADENA
    (32) tipodato -> . DOUBLE
    (33) tipodato -> . VARIABLE

    INTEGER         shift and go to state 39
    CADENA          shift and go to state 40
    DOUBLE          shift and go to state 41
    VARIABLE        shift and go to state 36

    tipodato                       shift and go to state 43

state 34

    (6) asignacion -> declaradores VARIABLE IGUAL . tipodato PUNTOCOMA
    (30) tipodato -> . INTEGER
    (31) tipodato -> . CADENA
    (32) tipodato -> . DOUBLE
    (33) tipodato -> . VARIABLE

    INTEGER         shift and go to state 39
    CADENA          shift and go to state 40
    DOUBLE          shift and go to state 41
    VARIABLE        shift and go to state 36

    tipodato                       shift and go to state 44

state 35

    (7) comparacion -> VARIABLE comparadores VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 45


state 36

    (33) tipodato -> VARIABLE .

    RPARENT         reduce using rule 33 (tipodato -> VARIABLE .)
    PUNTOCOMA       reduce using rule 33 (tipodato -> VARIABLE .)


state 37

    (10) funcion -> VARIABLE LPARENT argumentos . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 46


state 38

    (11) argumentos -> tipodato .

    RPARENT         reduce using rule 11 (argumentos -> tipodato .)


state 39

    (30) tipodato -> INTEGER .

    RPARENT         reduce using rule 30 (tipodato -> INTEGER .)
    PUNTOCOMA       reduce using rule 30 (tipodato -> INTEGER .)


state 40

    (31) tipodato -> CADENA .

    RPARENT         reduce using rule 31 (tipodato -> CADENA .)
    PUNTOCOMA       reduce using rule 31 (tipodato -> CADENA .)


state 41

    (32) tipodato -> DOUBLE .

    RPARENT         reduce using rule 32 (tipodato -> DOUBLE .)
    PUNTOCOMA       reduce using rule 32 (tipodato -> DOUBLE .)


state 42

    (8) operacion -> datonumerico operador datonumerico . PUNTOCOMA

    PUNTOCOMA       shift and go to state 47


state 43

    (9) impresion -> PRINT LPARENT tipodato . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 48


state 44

    (6) asignacion -> declaradores VARIABLE IGUAL tipodato . PUNTOCOMA

    PUNTOCOMA       shift and go to state 49


state 45

    (7) comparacion -> VARIABLE comparadores VARIABLE PUNTOCOMA .

    $end            reduce using rule 7 (comparacion -> VARIABLE comparadores VARIABLE PUNTOCOMA .)


state 46

    (10) funcion -> VARIABLE LPARENT argumentos RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 50


state 47

    (8) operacion -> datonumerico operador datonumerico PUNTOCOMA .

    $end            reduce using rule 8 (operacion -> datonumerico operador datonumerico PUNTOCOMA .)


state 48

    (9) impresion -> PRINT LPARENT tipodato RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 51


state 49

    (6) asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA .

    $end            reduce using rule 6 (asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA .)


state 50

    (10) funcion -> VARIABLE LPARENT argumentos RPARENT PUNTOCOMA .

    $end            reduce using rule 10 (funcion -> VARIABLE LPARENT argumentos RPARENT PUNTOCOMA .)


state 51

    (9) impresion -> PRINT LPARENT tipodato RPARENT PUNTOCOMA .

    $end            reduce using rule 9 (impresion -> PRINT LPARENT tipodato RPARENT PUNTOCOMA .)

