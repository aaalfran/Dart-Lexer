Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ES_IGUAL
    FUNCION
    INCREMENTADOR
    JOIN
    MAIN
    PARSE
    SALTO_LINEA
    TABULACION

Grammar

Rule 0     S' -> valores
Rule 1     valores -> valor
Rule 2     valores -> valor COMA valores
Rule 3     operador_mat -> MAS
Rule 4     operador_mat -> RESTA
Rule 5     operador_mat -> MULTIPL
Rule 6     operador_mat -> DIVISION
Rule 7     all -> simbolos_globales
Rule 8     clave_valor -> valor DOSPUNTOS valor
Rule 9     simbolo_global -> declaracion_asign
Rule 10    simbolo_global -> funcion
Rule 11    operando_mat -> numero
Rule 12    operando_mat -> VARIABLE
Rule 13    operando_mat -> indexacion
Rule 14    operando_mat -> negativo
Rule 15    operando_mat -> ejecutar_funcion
Rule 16    operando_mat -> casting_num
Rule 17    claves_valores -> clave_valor
Rule 18    claves_valores -> clave_valor COMA claves_valores
Rule 19    simbolos_globales -> simbolo_global
Rule 20    simbolos_globales -> simbolo_global simbolos_globales
Rule 21    simbolos_globales -> empty
Rule 22    cuerpo_lista_string -> CADENA
Rule 23    cuerpo_lista_string -> CADENA COMA CADENA
Rule 24    cuerpo_lista_string -> CADENA COMA CADENA COMA cuerpo_lista_string
Rule 25    casting_num -> LPARENT valor AS INT RPARENT
Rule 26    casting_num -> LPARENT valor AS DOUBLE RPARENT
Rule 27    empty -> <empty>
Rule 28    cuerpo_lista_integer -> INTEGER
Rule 29    cuerpo_lista_integer -> INTEGER COMA INTEGER
Rule 30    cuerpo_lista_integer -> INTEGER COMA INTEGER COMA cuerpo_lista_integer
Rule 31    operacion_mat_sin_par -> operando_mat operador_mat operacion_mat
Rule 32    operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat
Rule 33    sentencia -> declaracion_var
Rule 34    sentencia -> asignacion
Rule 35    sentencia -> declaracion_asign
Rule 36    sentencia -> operaciones PUNTOCOMA
Rule 37    sentencia -> print
Rule 38    sentencia -> estructura_control
Rule 39    sentencia -> return
Rule 40    sentencia -> continue
Rule 41    sentencia -> break
Rule 42    cuerpo_lista_double -> FLOAT
Rule 43    cuerpo_lista_double -> FLOAT COMA FLOAT
Rule 44    cuerpo_lista_double -> FLOAT COMA FLOAT COMA cuerpo_lista_double
Rule 45    operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT
Rule 46    cuerpo_lista_boolean -> bool
Rule 47    cuerpo_lista_boolean -> bool COMA bool
Rule 48    cuerpo_lista_boolean -> bool COMA bool COMA cuerpo_lista_boolean
Rule 49    operacion_mat_pos -> operacion_mat_con_par
Rule 50    operacion_mat_pos -> RESTA operacion_mat_con_par
Rule 51    operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos
Rule 52    operacion_mat_pos -> operacion_mat_sin_par
Rule 53    operacion_mat_pos -> operando_mat
Rule 54    sentencias -> sentencia
Rule 55    sentencias -> sentencia sentencias
Rule 56    sentencias -> empty
Rule 57    lista -> LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
Rule 58    lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
Rule 59    lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
Rule 60    lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
Rule 61    lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
Rule 62    numero -> INTEGER
Rule 63    numero -> FLOAT
Rule 64    operacion_mat_neg -> RESTA operacion_mat_con_par
Rule 65    operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos
Rule 66    string -> CADENA MAS CADENA
Rule 67    bool -> TRUE
Rule 68    bool -> FALSE
Rule 69    operacion_mat -> operacion_mat_pos
Rule 70    operacion_mat -> operacion_mat_neg
Rule 71    string -> CADENA MULTIPL CADENA
Rule 72    casting -> CADENA PUNTO TOINT LPARENT RPARENT
Rule 73    casting -> CADENA PUNTO TODOUBLE LPARENT RPARENT
Rule 74    datos -> numero
Rule 75    datos -> CADENA
Rule 76    datos -> bool
Rule 77    operador_comp_orden -> MAYOR_QUE
Rule 78    operador_comp_orden -> MENOR_QUE
Rule 79    operador_comp_orden -> MENOR_O_IGUAL
Rule 80    operador_comp_orden -> MAYOR_O_IGUAL
Rule 81    casting -> INTEGER PUNTO TOSTRING LPARENT RPARENT
Rule 82    casting -> FLOAT PUNTO TOSTRING LPARENT RPARENT
Rule 83    conjunto -> LLAVEL valores LLAVER
Rule 84    conjunto -> LLAVEL LLAVER
Rule 85    valor -> datos
Rule 86    valor -> operaciones
Rule 87    valor -> VARIABLE
Rule 88    valor -> estructura_dato
Rule 89    valor -> indexacion
Rule 90    valor -> read
Rule 91    valor -> ejecutar_funcion
Rule 92    valor -> negativo
Rule 93    valor -> casting
Rule 94    operando_comp_orden -> operacion_mat
Rule 95    operando_comp_orden -> numero
Rule 96    operando_comp_orden -> VARIABLE
Rule 97    operando_comp_orden -> indexacion
Rule 98    operando_comp_orden -> ejecutar_funcion
Rule 99    operando_comp_orden -> negativo
Rule 100   mapa -> LLAVEL claves_valores LLAVER
Rule 101   mapa -> LLAVEL LLAVER
Rule 102   operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden
Rule 103   negativo -> RESTA numero
Rule 104   negativo -> RESTA VARIABLE
Rule 105   negativo -> RESTA indexacion
Rule 106   negativo -> RESTA ejecutar_funcion
Rule 107   estructura_dato -> lista
Rule 108   estructura_dato -> conjunto
Rule 109   estructura_dato -> mapa
Rule 110   operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT
Rule 111   indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ
Rule 112   operacion_comp_orden -> operacion_comp_orden_sin_par
Rule 113   operacion_comp_orden -> operacion_comp_orden_con_par
Rule 114   tipo_dato -> BOOL
Rule 115   tipo_dato -> DOUBLE
Rule 116   tipo_dato -> INT
Rule 117   tipo_dato -> STRING
Rule 118   tipo_dato -> VOID
Rule 119   tipo_dato -> LIST
Rule 120   tipo_dato -> SET
Rule 121   tipo_dato -> MAP
Rule 122   operando_comp_eq -> numero
Rule 123   operando_comp_eq -> bool
Rule 124   operando_comp_eq -> CADENA
Rule 125   operando_comp_eq -> operacion_mat
Rule 126   operando_comp_eq -> operacion_comp_orden
Rule 127   operando_comp_eq -> operacion_comp_con_par
Rule 128   operando_comp_eq -> indexacion
Rule 129   operando_comp_eq -> ejecutar_funcion
Rule 130   operando_comp_eq -> VARIABLE
Rule 131   operando_comp_eq -> operacion_log_con_par
Rule 132   operando_comp_eq -> negativo
Rule 133   operando_comp_eq -> LPARENT valor AS BOOL RPARENT
Rule 134   declaradores -> tipo_dato
Rule 135   declaradores -> FINAL
Rule 136   declaradores -> VAR
Rule 137   declaracion_var -> declaradores VARIABLE PUNTOCOMA
Rule 138   operador_comp_eq -> IGUAL
Rule 139   operador_comp_eq -> NO_IGUAL
Rule 140   declaracion_asign -> tipo_dato VARIABLE IGUAL valor PUNTOCOMA
Rule 141   declaracion_asign -> FINAL VARIABLE IGUAL valor PUNTOCOMA
Rule 142   declaracion_asign -> VAR VARIABLE IGUAL valor PUNTOCOMA
Rule 143   declaracion_asign -> CONST VARIABLE IGUAL valor PUNTOCOMA
Rule 144   operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq
Rule 145   operacion_comp_sin_par -> operacion_comp_eq
Rule 146   operacion_comp_sin_par -> operacion_comp_orden
Rule 147   asignacion -> VARIABLE IGUAL valor PUNTOCOMA
Rule 148   asignacion -> VARIABLE CORCH_IZQ valor CORCH_DER IGUAL valor PUNTOCOMA
Rule 149   asignacion -> operacion_autoasig PUNTOCOMA
Rule 150   asignacion -> declaracion_asign
Rule 151   operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT
Rule 152   print -> PRINT LPARENT valor RPARENT PUNTOCOMA
Rule 153   operacion_comp -> operacion_comp_con_par
Rule 154   operacion_comp -> operacion_comp_sin_par
Rule 155   cuerpo_estruct -> LLAVEL sentencias LLAVER
Rule 156   cuerpo_estruct -> sentencia
Rule 157   operadores_log -> AND
Rule 158   operadores_log -> OR
Rule 159   for -> FOR LPARENT IGUAL operacion_log PUNTOCOMA operaciones RPARENT cuerpo_estruct
Rule 160   for -> FOR LPARENT VARIABLE IN VARIABLE RPARENT cuerpo_estruct
Rule 161   for -> FOR LPARENT tipo_dato VARIABLE IN VARIABLE RPARENT cuerpo_estruct
Rule 162   for -> FOR LPARENT VAR VARIABLE IN VARIABLE RPARENT cuerpo_estruct
Rule 163   operandos_log -> operacion_comp
Rule 164   operandos_log -> operacion_log_not
Rule 165   operandos_log -> VARIABLE
Rule 166   operandos_log -> bool
Rule 167   operandos_log -> ejecutar_funcion
Rule 168   operandos_log -> indexacion
Rule 169   if -> IF LPARENT operacion_log RPARENT cuerpo_estruct
Rule 170   operacion_log_sin_par -> operandos_log operadores_log operacion_log
Rule 171   operacion_log_sin_par -> operandos_log
Rule 172   if_else -> IF LPARENT operacion_log RPARENT cuerpo_estruct ELSE cuerpo_estruct
Rule 173   operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT
Rule 174   while -> WHILE LPARENT operacion_log RPARENT cuerpo_estruct
Rule 175   operando_log_not -> bool
Rule 176   operando_log_not -> operacion_log_con_par
Rule 177   operando_log_not -> VARIABLE
Rule 178   estructura_control -> if
Rule 179   estructura_control -> if_else
Rule 180   estructura_control -> while
Rule 181   estructura_control -> for
Rule 182   operacion_log_not_sin_par -> NEGACION operando_log_not
Rule 183   break -> BREAK PUNTOCOMA
Rule 184   continue -> CONTINUE PUNTOCOMA
Rule 185   operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT
Rule 186   read -> STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
Rule 187   operacion_log_not -> operacion_log_not_sin_par
Rule 188   operacion_log_not -> operacion_log_not_con_par
Rule 189   read -> STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
Rule 190   operacion_log -> operacion_log_con_par
Rule 191   operacion_log -> operacion_log_con_par operadores_log operacion_log
Rule 192   operacion_log -> operacion_log_sin_par
Rule 193   operacion_log -> operacion_log_not
Rule 194   operacion_log -> operandos_log
Rule 195   return -> RETURN valor PUNTOCOMA
Rule 196   return -> RETURN PUNTOCOMA
Rule 197   arg_funcion -> VARIABLE
Rule 198   arg_funcion -> VAR VARIABLE
Rule 199   arg_funcion -> tipo_dato VARIABLE
Rule 200   operacion_unaria -> VARIABLE AUTOINCREMENTO
Rule 201   operacion_unaria -> VARIABLE AUTODECREMENTO
Rule 202   operacion_unaria -> AUTOINCREMENTO VARIABLE
Rule 203   operacion_unaria -> AUTODECREMENTO VARIABLE
Rule 204   args_funcion -> arg_funcion COMA args_funcion
Rule 205   args_funcion -> arg_funcion
Rule 206   args_funcion -> empty
Rule 207   operaciones -> operacion_mat
Rule 208   operaciones -> operacion_log
Rule 209   operaciones -> operacion_unaria
Rule 210   operaciones -> operacion_autoasig
Rule 211   funcion -> tipo_dato VARIABLE LPARENT args_funcion RPARENT LLAVEL sentencias LLAVER
Rule 212   operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat
Rule 213   ejecutar_funcion -> VARIABLE LPARENT valores RPARENT
Rule 214   ejecutar_funcion -> VARIABLE LPARENT RPARENT
Rule 215   casting -> LPARENT valor AS tipo_dato RPARENT

Terminals, with rules where they appear

AND                  : 157
AS                   : 25 26 133 215
AUTODECREMENTO       : 201 203
AUTOINCREMENTO       : 200 202
BOOL                 : 61 114 133
BREAK                : 183
CADENA               : 22 23 23 24 24 66 66 71 71 72 73 75 124 189
COMA                 : 2 18 23 24 24 29 30 30 43 44 44 47 48 48 204
CONST                : 143
CONTINUE             : 184
CORCH_DER            : 58 59 60 61 148
CORCH_IZQ            : 58 59 60 61 111 111 148
DIVISION             : 6
DOSPUNTOS            : 8
DOUBLE               : 26 60 115
ELSE                 : 172
ES_IGUAL             : 
FALSE                : 68
FINAL                : 135 141
FLOAT                : 42 43 43 44 44 63 82
FOR                  : 159 160 161 162
FUNCION              : 
IF                   : 169 172
IGUAL                : 58 59 60 61 138 140 141 142 143 147 148 159 212
IN                   : 160 161 162
INCREMENTADOR        : 
INT                  : 25 59 116
INTEGER              : 28 29 29 30 30 62 81
JOIN                 : 
LIST                 : 57 58 59 60 61 119
LLAVEL               : 83 84 100 101 155 211
LLAVER               : 83 84 100 101 155 211
LPARENT              : 25 26 45 72 73 81 82 110 133 151 152 159 160 161 162 169 172 173 174 185 186 189 211 213 214 215
MAIN                 : 
MAP                  : 121
MAS                  : 3 66
MAYOR_O_IGUAL        : 80
MAYOR_QUE            : 57 58 59 60 61 77
MENOR_O_IGUAL        : 79
MENOR_QUE            : 57 58 59 60 61 78
MULTIPL              : 5 71
NEGACION             : 182 185
NO_IGUAL             : 139
OR                   : 158
PARSE                : 
PRINT                : 152
PUNTO                : 72 73 81 82 186 189
PUNTOCOMA            : 36 57 58 59 60 61 137 140 141 142 143 147 148 149 152 159 183 184 186 189 195 196
READLINESYNC         : 186
RESTA                : 4 50 64 65 103 104 105 106
RETURN               : 195 196
RPARENT              : 25 26 45 72 73 81 82 110 133 151 152 159 160 161 162 169 172 173 174 185 186 189 211 213 214 215
SALTO_LINEA          : 
SET                  : 120
STDIN                : 186
STDOUT               : 189
STRING               : 58 117
TABULACION           : 
TODOUBLE             : 73
TOINT                : 72
TOSTRING             : 81 82
TRUE                 : 67
VAR                  : 136 142 162 198
VARIABLE             : 12 32 57 58 59 60 61 87 96 104 111 130 137 140 141 142 143 147 148 160 160 161 161 162 162 165 177 197 198 199 200 201 202 203 211 212 213 214
VOID                 : 118
WHILE                : 174
WRITE                : 189
error                : 

Nonterminals, with rules where they appear

all                  : 
arg_funcion          : 204 205
args_funcion         : 204 211
asignacion           : 34
bool                 : 46 47 47 48 48 76 123 166 175
break                : 41
casting              : 93
casting_num          : 16
clave_valor          : 17 18
claves_valores       : 18 100
conjunto             : 108
continue             : 40
cuerpo_estruct       : 159 160 161 162 169 172 172 174
cuerpo_lista_boolean : 48 61
cuerpo_lista_double  : 44 60
cuerpo_lista_integer : 30 59
cuerpo_lista_string  : 24 58
datos                : 57 85
declaracion_asign    : 9 35 150
declaracion_var      : 33
declaradores         : 137
ejecutar_funcion     : 15 91 98 106 129 167
empty                : 21 56 206
estructura_control   : 38
estructura_dato      : 88
for                  : 181
funcion              : 10
if                   : 178
if_else              : 179
indexacion           : 13 89 97 105 128 168
lista                : 107
mapa                 : 109
negativo             : 14 92 99 132
numero               : 11 74 95 103 122
operacion_autoasig   : 149 210
operacion_comp       : 163
operacion_comp_con_par : 127 153
operacion_comp_eq    : 145
operacion_comp_orden : 126 146
operacion_comp_orden_con_par : 113
operacion_comp_orden_sin_par : 110 112
operacion_comp_sin_par : 151 154
operacion_log        : 159 169 170 172 174 191 208
operacion_log_con_par : 131 176 190 191
operacion_log_not    : 164 193
operacion_log_not_con_par : 188
operacion_log_not_sin_par : 187
operacion_log_sin_par : 173 192
operacion_mat        : 31 32 94 125 207 212
operacion_mat_con_par : 49 50 51 64 65
operacion_mat_neg    : 70
operacion_mat_pos    : 51 65 69
operacion_mat_sin_par : 45 52
operacion_unaria     : 209
operaciones          : 36 86 159
operador_comp_eq     : 144
operador_comp_orden  : 102
operador_mat         : 31 32 51 65 212
operadores_log       : 170 191
operando_comp_eq     : 144 144
operando_comp_orden  : 102 102
operando_log_not     : 182 185
operando_mat         : 31 53
operandos_log        : 170 171 194
print                : 37
read                 : 90
return               : 39
sentencia            : 54 55 156
sentencias           : 55 155 211
simbolo_global       : 19 20
simbolos_globales    : 7 20
string               : 
tipo_dato            : 134 140 161 199 211 215
valor                : 1 2 8 8 25 26 111 133 140 141 142 143 147 148 148 152 195 215
valores              : 2 83 213 0
while                : 180

Parsing method: LALR

state 0

    (0) S' -> . valores
    (1) valores -> . valor
    (2) valores -> . valor COMA valores
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 23
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39
    NEGACION        shift and go to state 47

    valores                        shift and go to state 1
    valor                          shift and go to state 2
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    casting_num                    shift and go to state 46
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    operando_comp_orden            shift and go to state 55

state 1

    (0) S' -> valores .



state 2

    (1) valores -> valor .
    (2) valores -> valor . COMA valores

    $end            reduce using rule 1 (valores -> valor .)
    LLAVER          reduce using rule 1 (valores -> valor .)
    RPARENT         reduce using rule 1 (valores -> valor .)
    COMA            shift and go to state 56


state 3

    (85) valor -> datos .

    COMA            reduce using rule 85 (valor -> datos .)
    $end            reduce using rule 85 (valor -> datos .)
    AS              reduce using rule 85 (valor -> datos .)
    DOSPUNTOS       reduce using rule 85 (valor -> datos .)
    LLAVER          reduce using rule 85 (valor -> datos .)
    RPARENT         reduce using rule 85 (valor -> datos .)
    CORCH_IZQ       reduce using rule 85 (valor -> datos .)


state 4

    (86) valor -> operaciones .

    COMA            reduce using rule 86 (valor -> operaciones .)
    $end            reduce using rule 86 (valor -> operaciones .)
    AS              reduce using rule 86 (valor -> operaciones .)
    DOSPUNTOS       reduce using rule 86 (valor -> operaciones .)
    LLAVER          reduce using rule 86 (valor -> operaciones .)
    RPARENT         reduce using rule 86 (valor -> operaciones .)
    CORCH_IZQ       reduce using rule 86 (valor -> operaciones .)


state 5

    (87) valor -> VARIABLE .
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (200) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (201) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (212) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (165) operandos_log -> VARIABLE .
    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (12) operando_mat -> VARIABLE .
    (130) operando_comp_eq -> VARIABLE .
    (96) operando_comp_orden -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for COMA resolved using rule 87 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 87 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 87 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LLAVER resolved using rule 87 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 87 (valor -> VARIABLE .)
  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for AS resolved using rule 87 (valor -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for LLAVER resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58
    AUTOINCREMENTO  shift and go to state 59
    AUTODECREMENTO  shift and go to state 60
    AND             reduce using rule 165 (operandos_log -> VARIABLE .)
    OR              reduce using rule 165 (operandos_log -> VARIABLE .)
    COMA            reduce using rule 12 (operando_mat -> VARIABLE .)
    $end            reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    DOSPUNTOS       reduce using rule 12 (operando_mat -> VARIABLE .)
    LLAVER          reduce using rule 12 (operando_mat -> VARIABLE .)
    RPARENT         reduce using rule 12 (operando_mat -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! COMA            [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! $end            [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! DOSPUNTOS       [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! LLAVER          [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! AS              [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! COMA            [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! $end            [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! DOSPUNTOS       [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! LLAVER          [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! AS              [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]

    operador_mat                   shift and go to state 61

state 6

    (88) valor -> estructura_dato .

    COMA            reduce using rule 88 (valor -> estructura_dato .)
    $end            reduce using rule 88 (valor -> estructura_dato .)
    AS              reduce using rule 88 (valor -> estructura_dato .)
    DOSPUNTOS       reduce using rule 88 (valor -> estructura_dato .)
    LLAVER          reduce using rule 88 (valor -> estructura_dato .)
    RPARENT         reduce using rule 88 (valor -> estructura_dato .)
    CORCH_IZQ       reduce using rule 88 (valor -> estructura_dato .)


state 7

    (89) valor -> indexacion .
    (168) operandos_log -> indexacion .
    (13) operando_mat -> indexacion .
    (128) operando_comp_eq -> indexacion .
    (97) operando_comp_orden -> indexacion .

  ! reduce/reduce conflict for COMA resolved using rule 89 (valor -> indexacion .)
  ! reduce/reduce conflict for $end resolved using rule 89 (valor -> indexacion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 89 (valor -> indexacion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 89 (valor -> indexacion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 89 (valor -> indexacion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 89 (valor -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 89 (valor -> indexacion .)
  ! reduce/reduce conflict for COMA resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for $end resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 168 (operandos_log -> indexacion .)
    OR              reduce using rule 168 (operandos_log -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    COMA            reduce using rule 13 (operando_mat -> indexacion .)
    $end            reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    DOSPUNTOS       reduce using rule 13 (operando_mat -> indexacion .)
    LLAVER          reduce using rule 13 (operando_mat -> indexacion .)
    RPARENT         reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_IZQ       reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)

  ! COMA            [ reduce using rule 89 (valor -> indexacion .) ]
  ! $end            [ reduce using rule 89 (valor -> indexacion .) ]
  ! DOSPUNTOS       [ reduce using rule 89 (valor -> indexacion .) ]
  ! LLAVER          [ reduce using rule 89 (valor -> indexacion .) ]
  ! RPARENT         [ reduce using rule 89 (valor -> indexacion .) ]
  ! CORCH_IZQ       [ reduce using rule 89 (valor -> indexacion .) ]
  ! AS              [ reduce using rule 89 (valor -> indexacion .) ]
  ! COMA            [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! $end            [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! DOSPUNTOS       [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! LLAVER          [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! RPARENT         [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! CORCH_IZQ       [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! AS              [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! IGUAL           [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]


state 8

    (90) valor -> read .

    COMA            reduce using rule 90 (valor -> read .)
    $end            reduce using rule 90 (valor -> read .)
    AS              reduce using rule 90 (valor -> read .)
    DOSPUNTOS       reduce using rule 90 (valor -> read .)
    LLAVER          reduce using rule 90 (valor -> read .)
    RPARENT         reduce using rule 90 (valor -> read .)
    CORCH_IZQ       reduce using rule 90 (valor -> read .)


state 9

    (91) valor -> ejecutar_funcion .
    (167) operandos_log -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (129) operando_comp_eq -> ejecutar_funcion .
    (98) operando_comp_orden -> ejecutar_funcion .

  ! reduce/reduce conflict for COMA resolved using rule 91 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for $end resolved using rule 91 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 91 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 91 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 91 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 91 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 91 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for COMA resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for $end resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    COMA            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    $end            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    LLAVER          reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RPARENT         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! COMA            [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! $end            [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! DOSPUNTOS       [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! LLAVER          [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! RPARENT         [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! CORCH_IZQ       [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! COMA            [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! $end            [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! DOSPUNTOS       [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! LLAVER          [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! RPARENT         [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! CORCH_IZQ       [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]


state 10

    (92) valor -> negativo .
    (14) operando_mat -> negativo .
    (132) operando_comp_eq -> negativo .
    (99) operando_comp_orden -> negativo .

  ! reduce/reduce conflict for COMA resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for $end resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for LLAVER resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for RPARENT resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for AS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    COMA            reduce using rule 14 (operando_mat -> negativo .)
    $end            reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    DOSPUNTOS       reduce using rule 14 (operando_mat -> negativo .)
    LLAVER          reduce using rule 14 (operando_mat -> negativo .)
    RPARENT         reduce using rule 14 (operando_mat -> negativo .)
    CORCH_IZQ       reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)

  ! COMA            [ reduce using rule 92 (valor -> negativo .) ]
  ! $end            [ reduce using rule 92 (valor -> negativo .) ]
  ! DOSPUNTOS       [ reduce using rule 92 (valor -> negativo .) ]
  ! LLAVER          [ reduce using rule 92 (valor -> negativo .) ]
  ! RPARENT         [ reduce using rule 92 (valor -> negativo .) ]
  ! CORCH_IZQ       [ reduce using rule 92 (valor -> negativo .) ]
  ! AS              [ reduce using rule 92 (valor -> negativo .) ]
  ! IGUAL           [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! NO_IGUAL        [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! MAYOR_QUE       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MENOR_QUE       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 99 (operando_comp_orden -> negativo .) ]


state 11

    (93) valor -> casting .

    COMA            reduce using rule 93 (valor -> casting .)
    $end            reduce using rule 93 (valor -> casting .)
    AS              reduce using rule 93 (valor -> casting .)
    DOSPUNTOS       reduce using rule 93 (valor -> casting .)
    LLAVER          reduce using rule 93 (valor -> casting .)
    RPARENT         reduce using rule 93 (valor -> casting .)
    CORCH_IZQ       reduce using rule 93 (valor -> casting .)


state 12

    (74) datos -> numero .
    (11) operando_mat -> numero .
    (122) operando_comp_eq -> numero .
    (95) operando_comp_orden -> numero .

  ! reduce/reduce conflict for COMA resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for $end resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for LLAVER resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for RPARENT resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    COMA            reduce using rule 11 (operando_mat -> numero .)
    $end            reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    DOSPUNTOS       reduce using rule 11 (operando_mat -> numero .)
    LLAVER          reduce using rule 11 (operando_mat -> numero .)
    RPARENT         reduce using rule 11 (operando_mat -> numero .)
    CORCH_IZQ       reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)

  ! COMA            [ reduce using rule 74 (datos -> numero .) ]
  ! $end            [ reduce using rule 74 (datos -> numero .) ]
  ! DOSPUNTOS       [ reduce using rule 74 (datos -> numero .) ]
  ! LLAVER          [ reduce using rule 74 (datos -> numero .) ]
  ! RPARENT         [ reduce using rule 74 (datos -> numero .) ]
  ! CORCH_IZQ       [ reduce using rule 74 (datos -> numero .) ]
  ! AS              [ reduce using rule 74 (datos -> numero .) ]
  ! IGUAL           [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]


state 13

    (75) datos -> CADENA .
    (72) casting -> CADENA . PUNTO TOINT LPARENT RPARENT
    (73) casting -> CADENA . PUNTO TODOUBLE LPARENT RPARENT
    (124) operando_comp_eq -> CADENA .

    COMA            reduce using rule 75 (datos -> CADENA .)
    $end            reduce using rule 75 (datos -> CADENA .)
    AS              reduce using rule 75 (datos -> CADENA .)
    DOSPUNTOS       reduce using rule 75 (datos -> CADENA .)
    LLAVER          reduce using rule 75 (datos -> CADENA .)
    RPARENT         reduce using rule 75 (datos -> CADENA .)
    CORCH_IZQ       reduce using rule 75 (datos -> CADENA .)
    PUNTO           shift and go to state 66
    IGUAL           reduce using rule 124 (operando_comp_eq -> CADENA .)
    NO_IGUAL        reduce using rule 124 (operando_comp_eq -> CADENA .)


state 14

    (76) datos -> bool .
    (166) operandos_log -> bool .
    (123) operando_comp_eq -> bool .

  ! reduce/reduce conflict for COMA resolved using rule 76 (datos -> bool .)
  ! reduce/reduce conflict for $end resolved using rule 76 (datos -> bool .)
  ! reduce/reduce conflict for RPARENT resolved using rule 76 (datos -> bool .)
  ! reduce/reduce conflict for AS resolved using rule 76 (datos -> bool .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 76 (datos -> bool .)
  ! reduce/reduce conflict for LLAVER resolved using rule 76 (datos -> bool .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 76 (datos -> bool .)
    COMA            reduce using rule 76 (datos -> bool .)
    $end            reduce using rule 76 (datos -> bool .)
    AS              reduce using rule 76 (datos -> bool .)
    DOSPUNTOS       reduce using rule 76 (datos -> bool .)
    LLAVER          reduce using rule 76 (datos -> bool .)
    RPARENT         reduce using rule 76 (datos -> bool .)
    CORCH_IZQ       reduce using rule 76 (datos -> bool .)
    AND             reduce using rule 166 (operandos_log -> bool .)
    OR              reduce using rule 166 (operandos_log -> bool .)
    IGUAL           reduce using rule 123 (operando_comp_eq -> bool .)
    NO_IGUAL        reduce using rule 123 (operando_comp_eq -> bool .)

  ! COMA            [ reduce using rule 166 (operandos_log -> bool .) ]
  ! $end            [ reduce using rule 166 (operandos_log -> bool .) ]
  ! RPARENT         [ reduce using rule 166 (operandos_log -> bool .) ]
  ! AS              [ reduce using rule 166 (operandos_log -> bool .) ]
  ! DOSPUNTOS       [ reduce using rule 166 (operandos_log -> bool .) ]
  ! LLAVER          [ reduce using rule 166 (operandos_log -> bool .) ]
  ! CORCH_IZQ       [ reduce using rule 166 (operandos_log -> bool .) ]


state 15

    (207) operaciones -> operacion_mat .
    (125) operando_comp_eq -> operacion_mat .
    (94) operando_comp_orden -> operacion_mat .

    COMA            reduce using rule 207 (operaciones -> operacion_mat .)
    $end            reduce using rule 207 (operaciones -> operacion_mat .)
    DOSPUNTOS       reduce using rule 207 (operaciones -> operacion_mat .)
    LLAVER          reduce using rule 207 (operaciones -> operacion_mat .)
    RPARENT         reduce using rule 207 (operaciones -> operacion_mat .)
    CORCH_IZQ       reduce using rule 207 (operaciones -> operacion_mat .)
    AS              reduce using rule 207 (operaciones -> operacion_mat .)
    IGUAL           reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    NO_IGUAL        reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    MAYOR_QUE       reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    MENOR_QUE       reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    MENOR_O_IGUAL   reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    MAYOR_O_IGUAL   reduce using rule 94 (operando_comp_orden -> operacion_mat .)


state 16

    (208) operaciones -> operacion_log .

    COMA            reduce using rule 208 (operaciones -> operacion_log .)
    $end            reduce using rule 208 (operaciones -> operacion_log .)
    AS              reduce using rule 208 (operaciones -> operacion_log .)
    DOSPUNTOS       reduce using rule 208 (operaciones -> operacion_log .)
    LLAVER          reduce using rule 208 (operaciones -> operacion_log .)
    RPARENT         reduce using rule 208 (operaciones -> operacion_log .)
    CORCH_IZQ       reduce using rule 208 (operaciones -> operacion_log .)


state 17

    (209) operaciones -> operacion_unaria .

    COMA            reduce using rule 209 (operaciones -> operacion_unaria .)
    $end            reduce using rule 209 (operaciones -> operacion_unaria .)
    AS              reduce using rule 209 (operaciones -> operacion_unaria .)
    DOSPUNTOS       reduce using rule 209 (operaciones -> operacion_unaria .)
    LLAVER          reduce using rule 209 (operaciones -> operacion_unaria .)
    RPARENT         reduce using rule 209 (operaciones -> operacion_unaria .)
    CORCH_IZQ       reduce using rule 209 (operaciones -> operacion_unaria .)


state 18

    (210) operaciones -> operacion_autoasig .

    COMA            reduce using rule 210 (operaciones -> operacion_autoasig .)
    $end            reduce using rule 210 (operaciones -> operacion_autoasig .)
    AS              reduce using rule 210 (operaciones -> operacion_autoasig .)
    DOSPUNTOS       reduce using rule 210 (operaciones -> operacion_autoasig .)
    LLAVER          reduce using rule 210 (operaciones -> operacion_autoasig .)
    RPARENT         reduce using rule 210 (operaciones -> operacion_autoasig .)
    CORCH_IZQ       reduce using rule 210 (operaciones -> operacion_autoasig .)


state 19

    (107) estructura_dato -> lista .

    COMA            reduce using rule 107 (estructura_dato -> lista .)
    $end            reduce using rule 107 (estructura_dato -> lista .)
    AS              reduce using rule 107 (estructura_dato -> lista .)
    DOSPUNTOS       reduce using rule 107 (estructura_dato -> lista .)
    LLAVER          reduce using rule 107 (estructura_dato -> lista .)
    RPARENT         reduce using rule 107 (estructura_dato -> lista .)
    CORCH_IZQ       reduce using rule 107 (estructura_dato -> lista .)


state 20

    (108) estructura_dato -> conjunto .

    COMA            reduce using rule 108 (estructura_dato -> conjunto .)
    $end            reduce using rule 108 (estructura_dato -> conjunto .)
    AS              reduce using rule 108 (estructura_dato -> conjunto .)
    DOSPUNTOS       reduce using rule 108 (estructura_dato -> conjunto .)
    LLAVER          reduce using rule 108 (estructura_dato -> conjunto .)
    RPARENT         reduce using rule 108 (estructura_dato -> conjunto .)
    CORCH_IZQ       reduce using rule 108 (estructura_dato -> conjunto .)


state 21

    (109) estructura_dato -> mapa .

    COMA            reduce using rule 109 (estructura_dato -> mapa .)
    $end            reduce using rule 109 (estructura_dato -> mapa .)
    AS              reduce using rule 109 (estructura_dato -> mapa .)
    DOSPUNTOS       reduce using rule 109 (estructura_dato -> mapa .)
    LLAVER          reduce using rule 109 (estructura_dato -> mapa .)
    RPARENT         reduce using rule 109 (estructura_dato -> mapa .)
    CORCH_IZQ       reduce using rule 109 (estructura_dato -> mapa .)


state 22

    (186) read -> STDIN . PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA

    PUNTO           shift and go to state 67


state 23

    (215) casting -> LPARENT . valor AS tipo_dato RPARENT
    (173) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (185) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (133) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 75
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 68
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39

    valor                          shift and go to state 69
    operacion_log_sin_par          shift and go to state 70
    operacion_mat_sin_par          shift and go to state 71
    operacion_comp_sin_par         shift and go to state 73
    operacion_comp_orden_sin_par   shift and go to state 74
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 76
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 77
    negativo                       shift and go to state 78
    casting                        shift and go to state 11
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_orden            shift and go to state 55
    numero                         shift and go to state 82
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_comp                 shift and go to state 45
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 46
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 54
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 48
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_mat_con_par          shift and go to state 40

state 24

    (189) read -> STDOUT . PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA

    PUNTO           shift and go to state 84


state 25

    (103) negativo -> RESTA . numero
    (104) negativo -> RESTA . VARIABLE
    (105) negativo -> RESTA . indexacion
    (106) negativo -> RESTA . ejecutar_funcion
    (50) operacion_mat_pos -> RESTA . operacion_mat_con_par
    (64) operacion_mat_neg -> RESTA . operacion_mat_con_par
    (65) operacion_mat_neg -> RESTA . operacion_mat_con_par operador_mat operacion_mat_pos
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    VARIABLE        shift and go to state 86
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91
    LPARENT         shift and go to state 92

    numero                         shift and go to state 85
    indexacion                     shift and go to state 87
    ejecutar_funcion               shift and go to state 88
    operacion_mat_con_par          shift and go to state 89

state 26

    (81) casting -> INTEGER . PUNTO TOSTRING LPARENT RPARENT
    (62) numero -> INTEGER .

    PUNTO           shift and go to state 93
    COMA            reduce using rule 62 (numero -> INTEGER .)
    $end            reduce using rule 62 (numero -> INTEGER .)
    MAS             reduce using rule 62 (numero -> INTEGER .)
    RESTA           reduce using rule 62 (numero -> INTEGER .)
    MULTIPL         reduce using rule 62 (numero -> INTEGER .)
    DIVISION        reduce using rule 62 (numero -> INTEGER .)
    IGUAL           reduce using rule 62 (numero -> INTEGER .)
    NO_IGUAL        reduce using rule 62 (numero -> INTEGER .)
    MAYOR_QUE       reduce using rule 62 (numero -> INTEGER .)
    MENOR_QUE       reduce using rule 62 (numero -> INTEGER .)
    MENOR_O_IGUAL   reduce using rule 62 (numero -> INTEGER .)
    MAYOR_O_IGUAL   reduce using rule 62 (numero -> INTEGER .)
    AS              reduce using rule 62 (numero -> INTEGER .)
    DOSPUNTOS       reduce using rule 62 (numero -> INTEGER .)
    LLAVER          reduce using rule 62 (numero -> INTEGER .)
    RPARENT         reduce using rule 62 (numero -> INTEGER .)
    CORCH_IZQ       reduce using rule 62 (numero -> INTEGER .)


state 27

    (82) casting -> FLOAT . PUNTO TOSTRING LPARENT RPARENT
    (63) numero -> FLOAT .

    PUNTO           shift and go to state 94
    COMA            reduce using rule 63 (numero -> FLOAT .)
    $end            reduce using rule 63 (numero -> FLOAT .)
    MAS             reduce using rule 63 (numero -> FLOAT .)
    RESTA           reduce using rule 63 (numero -> FLOAT .)
    MULTIPL         reduce using rule 63 (numero -> FLOAT .)
    DIVISION        reduce using rule 63 (numero -> FLOAT .)
    IGUAL           reduce using rule 63 (numero -> FLOAT .)
    NO_IGUAL        reduce using rule 63 (numero -> FLOAT .)
    MAYOR_QUE       reduce using rule 63 (numero -> FLOAT .)
    MENOR_QUE       reduce using rule 63 (numero -> FLOAT .)
    MENOR_O_IGUAL   reduce using rule 63 (numero -> FLOAT .)
    MAYOR_O_IGUAL   reduce using rule 63 (numero -> FLOAT .)
    AS              reduce using rule 63 (numero -> FLOAT .)
    DOSPUNTOS       reduce using rule 63 (numero -> FLOAT .)
    LLAVER          reduce using rule 63 (numero -> FLOAT .)
    RPARENT         reduce using rule 63 (numero -> FLOAT .)
    CORCH_IZQ       reduce using rule 63 (numero -> FLOAT .)


state 28

    (67) bool -> TRUE .

    COMA            reduce using rule 67 (bool -> TRUE .)
    $end            reduce using rule 67 (bool -> TRUE .)
    AND             reduce using rule 67 (bool -> TRUE .)
    OR              reduce using rule 67 (bool -> TRUE .)
    IGUAL           reduce using rule 67 (bool -> TRUE .)
    NO_IGUAL        reduce using rule 67 (bool -> TRUE .)
    AS              reduce using rule 67 (bool -> TRUE .)
    RPARENT         reduce using rule 67 (bool -> TRUE .)
    DOSPUNTOS       reduce using rule 67 (bool -> TRUE .)
    LLAVER          reduce using rule 67 (bool -> TRUE .)
    CORCH_IZQ       reduce using rule 67 (bool -> TRUE .)
    MAYOR_QUE       reduce using rule 67 (bool -> TRUE .)
    CORCH_DER       reduce using rule 67 (bool -> TRUE .)


state 29

    (68) bool -> FALSE .

    COMA            reduce using rule 68 (bool -> FALSE .)
    $end            reduce using rule 68 (bool -> FALSE .)
    AND             reduce using rule 68 (bool -> FALSE .)
    OR              reduce using rule 68 (bool -> FALSE .)
    IGUAL           reduce using rule 68 (bool -> FALSE .)
    NO_IGUAL        reduce using rule 68 (bool -> FALSE .)
    AS              reduce using rule 68 (bool -> FALSE .)
    RPARENT         reduce using rule 68 (bool -> FALSE .)
    DOSPUNTOS       reduce using rule 68 (bool -> FALSE .)
    LLAVER          reduce using rule 68 (bool -> FALSE .)
    CORCH_IZQ       reduce using rule 68 (bool -> FALSE .)
    MAYOR_QUE       reduce using rule 68 (bool -> FALSE .)
    CORCH_DER       reduce using rule 68 (bool -> FALSE .)


state 30

    (69) operacion_mat -> operacion_mat_pos .

    COMA            reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    $end            reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    IGUAL           reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    NO_IGUAL        reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    MAYOR_QUE       reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    MENOR_QUE       reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    MENOR_O_IGUAL   reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    MAYOR_O_IGUAL   reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    AS              reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    DOSPUNTOS       reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    LLAVER          reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    RPARENT         reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    CORCH_IZQ       reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    AND             reduce using rule 69 (operacion_mat -> operacion_mat_pos .)
    OR              reduce using rule 69 (operacion_mat -> operacion_mat_pos .)


state 31

    (70) operacion_mat -> operacion_mat_neg .

    COMA            reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    $end            reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    IGUAL           reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    NO_IGUAL        reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    MAYOR_QUE       reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    MENOR_QUE       reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    MENOR_O_IGUAL   reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    MAYOR_O_IGUAL   reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    AS              reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    DOSPUNTOS       reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    LLAVER          reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    RPARENT         reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    CORCH_IZQ       reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    AND             reduce using rule 70 (operacion_mat -> operacion_mat_neg .)
    OR              reduce using rule 70 (operacion_mat -> operacion_mat_neg .)


state 32

    (190) operacion_log -> operacion_log_con_par .
    (191) operacion_log -> operacion_log_con_par . operadores_log operacion_log
    (131) operando_comp_eq -> operacion_log_con_par .
    (157) operadores_log -> . AND
    (158) operadores_log -> . OR

    COMA            reduce using rule 190 (operacion_log -> operacion_log_con_par .)
    $end            reduce using rule 190 (operacion_log -> operacion_log_con_par .)
    AS              reduce using rule 190 (operacion_log -> operacion_log_con_par .)
    DOSPUNTOS       reduce using rule 190 (operacion_log -> operacion_log_con_par .)
    LLAVER          reduce using rule 190 (operacion_log -> operacion_log_con_par .)
    RPARENT         reduce using rule 190 (operacion_log -> operacion_log_con_par .)
    CORCH_IZQ       reduce using rule 190 (operacion_log -> operacion_log_con_par .)
    IGUAL           reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    NO_IGUAL        reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    AND             shift and go to state 96
    OR              shift and go to state 97

    operadores_log                 shift and go to state 95

state 33

    (192) operacion_log -> operacion_log_sin_par .

    COMA            reduce using rule 192 (operacion_log -> operacion_log_sin_par .)
    $end            reduce using rule 192 (operacion_log -> operacion_log_sin_par .)
    DOSPUNTOS       reduce using rule 192 (operacion_log -> operacion_log_sin_par .)
    LLAVER          reduce using rule 192 (operacion_log -> operacion_log_sin_par .)
    RPARENT         reduce using rule 192 (operacion_log -> operacion_log_sin_par .)
    CORCH_IZQ       reduce using rule 192 (operacion_log -> operacion_log_sin_par .)
    AS              reduce using rule 192 (operacion_log -> operacion_log_sin_par .)


state 34

    (193) operacion_log -> operacion_log_not .
    (164) operandos_log -> operacion_log_not .

  ! reduce/reduce conflict for COMA resolved using rule 164 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for $end resolved using rule 164 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 164 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for LLAVER resolved using rule 164 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for RPARENT resolved using rule 164 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 164 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for AS resolved using rule 164 (operandos_log -> operacion_log_not .)
    AND             reduce using rule 164 (operandos_log -> operacion_log_not .)
    OR              reduce using rule 164 (operandos_log -> operacion_log_not .)
    COMA            reduce using rule 164 (operandos_log -> operacion_log_not .)
    $end            reduce using rule 164 (operandos_log -> operacion_log_not .)
    DOSPUNTOS       reduce using rule 164 (operandos_log -> operacion_log_not .)
    LLAVER          reduce using rule 164 (operandos_log -> operacion_log_not .)
    RPARENT         reduce using rule 164 (operandos_log -> operacion_log_not .)
    CORCH_IZQ       reduce using rule 164 (operandos_log -> operacion_log_not .)
    AS              reduce using rule 164 (operandos_log -> operacion_log_not .)

  ! COMA            [ reduce using rule 193 (operacion_log -> operacion_log_not .) ]
  ! $end            [ reduce using rule 193 (operacion_log -> operacion_log_not .) ]
  ! DOSPUNTOS       [ reduce using rule 193 (operacion_log -> operacion_log_not .) ]
  ! LLAVER          [ reduce using rule 193 (operacion_log -> operacion_log_not .) ]
  ! RPARENT         [ reduce using rule 193 (operacion_log -> operacion_log_not .) ]
  ! CORCH_IZQ       [ reduce using rule 193 (operacion_log -> operacion_log_not .) ]
  ! AS              [ reduce using rule 193 (operacion_log -> operacion_log_not .) ]


state 35

    (194) operacion_log -> operandos_log .
    (170) operacion_log_sin_par -> operandos_log . operadores_log operacion_log
    (171) operacion_log_sin_par -> operandos_log .
    (157) operadores_log -> . AND
    (158) operadores_log -> . OR

  ! reduce/reduce conflict for COMA resolved using rule 171 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for $end resolved using rule 171 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 171 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for LLAVER resolved using rule 171 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for RPARENT resolved using rule 171 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 171 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for AS resolved using rule 171 (operacion_log_sin_par -> operandos_log .)
    COMA            reduce using rule 171 (operacion_log_sin_par -> operandos_log .)
    $end            reduce using rule 171 (operacion_log_sin_par -> operandos_log .)
    DOSPUNTOS       reduce using rule 171 (operacion_log_sin_par -> operandos_log .)
    LLAVER          reduce using rule 171 (operacion_log_sin_par -> operandos_log .)
    RPARENT         reduce using rule 171 (operacion_log_sin_par -> operandos_log .)
    CORCH_IZQ       reduce using rule 171 (operacion_log_sin_par -> operandos_log .)
    AS              reduce using rule 171 (operacion_log_sin_par -> operandos_log .)
    AND             shift and go to state 96
    OR              shift and go to state 97

  ! COMA            [ reduce using rule 194 (operacion_log -> operandos_log .) ]
  ! $end            [ reduce using rule 194 (operacion_log -> operandos_log .) ]
  ! DOSPUNTOS       [ reduce using rule 194 (operacion_log -> operandos_log .) ]
  ! LLAVER          [ reduce using rule 194 (operacion_log -> operandos_log .) ]
  ! RPARENT         [ reduce using rule 194 (operacion_log -> operandos_log .) ]
  ! CORCH_IZQ       [ reduce using rule 194 (operacion_log -> operandos_log .) ]
  ! AS              [ reduce using rule 194 (operacion_log -> operandos_log .) ]

    operadores_log                 shift and go to state 98

state 36

    (202) operacion_unaria -> AUTOINCREMENTO . VARIABLE

    VARIABLE        shift and go to state 99


state 37

    (203) operacion_unaria -> AUTODECREMENTO . VARIABLE

    VARIABLE        shift and go to state 100


state 38

    (57) lista -> LIST . MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> LIST . MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> LIST . MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> LIST . MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> LIST . MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA

    MENOR_QUE       shift and go to state 101


state 39

    (83) conjunto -> LLAVEL . valores LLAVER
    (84) conjunto -> LLAVEL . LLAVER
    (100) mapa -> LLAVEL . claves_valores LLAVER
    (101) mapa -> LLAVEL . LLAVER
    (1) valores -> . valor
    (2) valores -> . valor COMA valores
    (17) claves_valores -> . clave_valor
    (18) claves_valores -> . clave_valor COMA claves_valores
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (8) clave_valor -> . valor DOSPUNTOS valor
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo

    LLAVER          shift and go to state 103
    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 23
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39
    NEGACION        shift and go to state 47

    valores                        shift and go to state 102
    claves_valores                 shift and go to state 104
    valor                          shift and go to state 105
    clave_valor                    shift and go to state 106
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    casting_num                    shift and go to state 46
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    operando_comp_orden            shift and go to state 55

state 40

    (49) operacion_mat_pos -> operacion_mat_con_par .
    (51) operacion_mat_pos -> operacion_mat_con_par . operador_mat operacion_mat_pos
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

    COMA            reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    $end            reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    IGUAL           reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    NO_IGUAL        reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    MAYOR_QUE       reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    MENOR_QUE       reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    MENOR_O_IGUAL   reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    MAYOR_O_IGUAL   reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    AS              reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    DOSPUNTOS       reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    LLAVER          reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    RPARENT         reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    CORCH_IZQ       reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    AND             reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    OR              reduce using rule 49 (operacion_mat_pos -> operacion_mat_con_par .)
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

    operador_mat                   shift and go to state 107

state 41

    (52) operacion_mat_pos -> operacion_mat_sin_par .

    COMA            reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    $end            reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    IGUAL           reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    NO_IGUAL        reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    MAYOR_QUE       reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    MENOR_QUE       reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    MENOR_O_IGUAL   reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    MAYOR_O_IGUAL   reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    DOSPUNTOS       reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    LLAVER          reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    RPARENT         reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    CORCH_IZQ       reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    AS              reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    AND             reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    OR              reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)


state 42

    (53) operacion_mat_pos -> operando_mat .
    (31) operacion_mat_sin_par -> operando_mat . operador_mat operacion_mat
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

    COMA            reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    $end            reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    IGUAL           reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    NO_IGUAL        reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    MAYOR_QUE       reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    MENOR_QUE       reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    MENOR_O_IGUAL   reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    MAYOR_O_IGUAL   reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    DOSPUNTOS       reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    LLAVER          reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    RPARENT         reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    CORCH_IZQ       reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    AS              reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    AND             reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    OR              reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

    operador_mat                   shift and go to state 108

state 43

    (187) operacion_log_not -> operacion_log_not_sin_par .

    COMA            reduce using rule 187 (operacion_log_not -> operacion_log_not_sin_par .)
    $end            reduce using rule 187 (operacion_log_not -> operacion_log_not_sin_par .)
    AND             reduce using rule 187 (operacion_log_not -> operacion_log_not_sin_par .)
    OR              reduce using rule 187 (operacion_log_not -> operacion_log_not_sin_par .)
    RPARENT         reduce using rule 187 (operacion_log_not -> operacion_log_not_sin_par .)
    AS              reduce using rule 187 (operacion_log_not -> operacion_log_not_sin_par .)
    DOSPUNTOS       reduce using rule 187 (operacion_log_not -> operacion_log_not_sin_par .)
    LLAVER          reduce using rule 187 (operacion_log_not -> operacion_log_not_sin_par .)
    CORCH_IZQ       reduce using rule 187 (operacion_log_not -> operacion_log_not_sin_par .)


state 44

    (188) operacion_log_not -> operacion_log_not_con_par .

    COMA            reduce using rule 188 (operacion_log_not -> operacion_log_not_con_par .)
    $end            reduce using rule 188 (operacion_log_not -> operacion_log_not_con_par .)
    AND             reduce using rule 188 (operacion_log_not -> operacion_log_not_con_par .)
    OR              reduce using rule 188 (operacion_log_not -> operacion_log_not_con_par .)
    RPARENT         reduce using rule 188 (operacion_log_not -> operacion_log_not_con_par .)
    AS              reduce using rule 188 (operacion_log_not -> operacion_log_not_con_par .)
    DOSPUNTOS       reduce using rule 188 (operacion_log_not -> operacion_log_not_con_par .)
    LLAVER          reduce using rule 188 (operacion_log_not -> operacion_log_not_con_par .)
    CORCH_IZQ       reduce using rule 188 (operacion_log_not -> operacion_log_not_con_par .)


state 45

    (163) operandos_log -> operacion_comp .

    AND             reduce using rule 163 (operandos_log -> operacion_comp .)
    OR              reduce using rule 163 (operandos_log -> operacion_comp .)
    COMA            reduce using rule 163 (operandos_log -> operacion_comp .)
    $end            reduce using rule 163 (operandos_log -> operacion_comp .)
    RPARENT         reduce using rule 163 (operandos_log -> operacion_comp .)
    AS              reduce using rule 163 (operandos_log -> operacion_comp .)
    DOSPUNTOS       reduce using rule 163 (operandos_log -> operacion_comp .)
    LLAVER          reduce using rule 163 (operandos_log -> operacion_comp .)
    CORCH_IZQ       reduce using rule 163 (operandos_log -> operacion_comp .)


state 46

    (16) operando_mat -> casting_num .

    MAS             reduce using rule 16 (operando_mat -> casting_num .)
    RESTA           reduce using rule 16 (operando_mat -> casting_num .)
    MULTIPL         reduce using rule 16 (operando_mat -> casting_num .)
    DIVISION        reduce using rule 16 (operando_mat -> casting_num .)
    COMA            reduce using rule 16 (operando_mat -> casting_num .)
    $end            reduce using rule 16 (operando_mat -> casting_num .)
    IGUAL           reduce using rule 16 (operando_mat -> casting_num .)
    NO_IGUAL        reduce using rule 16 (operando_mat -> casting_num .)
    MAYOR_QUE       reduce using rule 16 (operando_mat -> casting_num .)
    MENOR_QUE       reduce using rule 16 (operando_mat -> casting_num .)
    MENOR_O_IGUAL   reduce using rule 16 (operando_mat -> casting_num .)
    MAYOR_O_IGUAL   reduce using rule 16 (operando_mat -> casting_num .)
    AS              reduce using rule 16 (operando_mat -> casting_num .)
    DOSPUNTOS       reduce using rule 16 (operando_mat -> casting_num .)
    LLAVER          reduce using rule 16 (operando_mat -> casting_num .)
    RPARENT         reduce using rule 16 (operando_mat -> casting_num .)
    CORCH_IZQ       reduce using rule 16 (operando_mat -> casting_num .)
    AND             reduce using rule 16 (operando_mat -> casting_num .)
    OR              reduce using rule 16 (operando_mat -> casting_num .)


state 47

    (182) operacion_log_not_sin_par -> NEGACION . operando_log_not
    (175) operando_log_not -> . bool
    (176) operando_log_not -> . operacion_log_con_par
    (177) operando_log_not -> . VARIABLE
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT

    VARIABLE        shift and go to state 112
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LPARENT         shift and go to state 113

    operando_log_not               shift and go to state 109
    bool                           shift and go to state 110
    operacion_log_con_par          shift and go to state 111

state 48

    (153) operacion_comp -> operacion_comp_con_par .
    (127) operando_comp_eq -> operacion_comp_con_par .

    AND             reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    OR              reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    COMA            reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    $end            reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    RPARENT         reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    AS              reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    DOSPUNTOS       reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    LLAVER          reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    CORCH_IZQ       reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    IGUAL           reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    NO_IGUAL        reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)


state 49

    (154) operacion_comp -> operacion_comp_sin_par .

    AND             reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)
    OR              reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)
    COMA            reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)
    $end            reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)
    DOSPUNTOS       reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)
    LLAVER          reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)
    RPARENT         reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)
    CORCH_IZQ       reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)
    AS              reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)


state 50

    (145) operacion_comp_sin_par -> operacion_comp_eq .

    AND             reduce using rule 145 (operacion_comp_sin_par -> operacion_comp_eq .)
    OR              reduce using rule 145 (operacion_comp_sin_par -> operacion_comp_eq .)
    COMA            reduce using rule 145 (operacion_comp_sin_par -> operacion_comp_eq .)
    $end            reduce using rule 145 (operacion_comp_sin_par -> operacion_comp_eq .)
    RPARENT         reduce using rule 145 (operacion_comp_sin_par -> operacion_comp_eq .)
    AS              reduce using rule 145 (operacion_comp_sin_par -> operacion_comp_eq .)
    DOSPUNTOS       reduce using rule 145 (operacion_comp_sin_par -> operacion_comp_eq .)
    LLAVER          reduce using rule 145 (operacion_comp_sin_par -> operacion_comp_eq .)
    CORCH_IZQ       reduce using rule 145 (operacion_comp_sin_par -> operacion_comp_eq .)


state 51

    (146) operacion_comp_sin_par -> operacion_comp_orden .
    (126) operando_comp_eq -> operacion_comp_orden .

    AND             reduce using rule 146 (operacion_comp_sin_par -> operacion_comp_orden .)
    OR              reduce using rule 146 (operacion_comp_sin_par -> operacion_comp_orden .)
    COMA            reduce using rule 146 (operacion_comp_sin_par -> operacion_comp_orden .)
    $end            reduce using rule 146 (operacion_comp_sin_par -> operacion_comp_orden .)
    RPARENT         reduce using rule 146 (operacion_comp_sin_par -> operacion_comp_orden .)
    AS              reduce using rule 146 (operacion_comp_sin_par -> operacion_comp_orden .)
    DOSPUNTOS       reduce using rule 146 (operacion_comp_sin_par -> operacion_comp_orden .)
    LLAVER          reduce using rule 146 (operacion_comp_sin_par -> operacion_comp_orden .)
    CORCH_IZQ       reduce using rule 146 (operacion_comp_sin_par -> operacion_comp_orden .)
    IGUAL           reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)
    NO_IGUAL        reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)


state 52

    (144) operacion_comp_eq -> operando_comp_eq . operador_comp_eq operando_comp_eq
    (138) operador_comp_eq -> . IGUAL
    (139) operador_comp_eq -> . NO_IGUAL

    IGUAL           shift and go to state 115
    NO_IGUAL        shift and go to state 116

    operador_comp_eq               shift and go to state 114

state 53

    (112) operacion_comp_orden -> operacion_comp_orden_sin_par .

    AND             reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    OR              reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    COMA            reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    $end            reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    IGUAL           reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    NO_IGUAL        reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    DOSPUNTOS       reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    LLAVER          reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    RPARENT         reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    CORCH_IZQ       reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    AS              reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)


state 54

    (113) operacion_comp_orden -> operacion_comp_orden_con_par .

    AND             reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    OR              reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    COMA            reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    $end            reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    IGUAL           reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    NO_IGUAL        reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    RPARENT         reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    AS              reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    DOSPUNTOS       reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    LLAVER          reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    CORCH_IZQ       reduce using rule 113 (operacion_comp_orden -> operacion_comp_orden_con_par .)


state 55

    (102) operacion_comp_orden_sin_par -> operando_comp_orden . operador_comp_orden operando_comp_orden
    (77) operador_comp_orden -> . MAYOR_QUE
    (78) operador_comp_orden -> . MENOR_QUE
    (79) operador_comp_orden -> . MENOR_O_IGUAL
    (80) operador_comp_orden -> . MAYOR_O_IGUAL

    MAYOR_QUE       shift and go to state 118
    MENOR_QUE       shift and go to state 119
    MENOR_O_IGUAL   shift and go to state 120
    MAYOR_O_IGUAL   shift and go to state 121

    operador_comp_orden            shift and go to state 117

state 56

    (2) valores -> valor COMA . valores
    (1) valores -> . valor
    (2) valores -> . valor COMA valores
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 23
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39
    NEGACION        shift and go to state 47

    valor                          shift and go to state 2
    valores                        shift and go to state 122
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    casting_num                    shift and go to state 46
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    operando_comp_orden            shift and go to state 55

state 57

    (111) indexacion -> VARIABLE CORCH_IZQ . valor CORCH_IZQ
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 23
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39
    NEGACION        shift and go to state 47

    valor                          shift and go to state 123
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    casting_num                    shift and go to state 46
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    operando_comp_orden            shift and go to state 55

state 58

    (213) ejecutar_funcion -> VARIABLE LPARENT . valores RPARENT
    (214) ejecutar_funcion -> VARIABLE LPARENT . RPARENT
    (1) valores -> . valor
    (2) valores -> . valor COMA valores
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo

    RPARENT         shift and go to state 125
    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 23
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39
    NEGACION        shift and go to state 47

    valores                        shift and go to state 124
    valor                          shift and go to state 2
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    casting_num                    shift and go to state 46
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    operando_comp_orden            shift and go to state 55

state 59

    (200) operacion_unaria -> VARIABLE AUTOINCREMENTO .

    COMA            reduce using rule 200 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    $end            reduce using rule 200 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    AS              reduce using rule 200 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    DOSPUNTOS       reduce using rule 200 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    LLAVER          reduce using rule 200 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    RPARENT         reduce using rule 200 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    CORCH_IZQ       reduce using rule 200 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)


state 60

    (201) operacion_unaria -> VARIABLE AUTODECREMENTO .

    COMA            reduce using rule 201 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    $end            reduce using rule 201 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    AS              reduce using rule 201 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    DOSPUNTOS       reduce using rule 201 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    LLAVER          reduce using rule 201 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    RPARENT         reduce using rule 201 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    CORCH_IZQ       reduce using rule 201 (operacion_unaria -> VARIABLE AUTODECREMENTO .)


state 61

    (212) operacion_autoasig -> VARIABLE operador_mat . IGUAL operacion_mat
    (32) operacion_mat_sin_par -> VARIABLE operador_mat . operacion_mat
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    IGUAL           shift and go to state 127
    RESTA           shift and go to state 129
    LPARENT         shift and go to state 130
    VARIABLE        shift and go to state 126
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91

    operacion_mat                  shift and go to state 128
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    numero                         shift and go to state 131
    indexacion                     shift and go to state 132
    negativo                       shift and go to state 133
    ejecutar_funcion               shift and go to state 134
    casting_num                    shift and go to state 46

state 62

    (3) operador_mat -> MAS .

    IGUAL           reduce using rule 3 (operador_mat -> MAS .)
    RESTA           reduce using rule 3 (operador_mat -> MAS .)
    LPARENT         reduce using rule 3 (operador_mat -> MAS .)
    VARIABLE        reduce using rule 3 (operador_mat -> MAS .)
    INTEGER         reduce using rule 3 (operador_mat -> MAS .)
    FLOAT           reduce using rule 3 (operador_mat -> MAS .)


state 63

    (4) operador_mat -> RESTA .

    IGUAL           reduce using rule 4 (operador_mat -> RESTA .)
    RESTA           reduce using rule 4 (operador_mat -> RESTA .)
    LPARENT         reduce using rule 4 (operador_mat -> RESTA .)
    VARIABLE        reduce using rule 4 (operador_mat -> RESTA .)
    INTEGER         reduce using rule 4 (operador_mat -> RESTA .)
    FLOAT           reduce using rule 4 (operador_mat -> RESTA .)


state 64

    (5) operador_mat -> MULTIPL .

    IGUAL           reduce using rule 5 (operador_mat -> MULTIPL .)
    RESTA           reduce using rule 5 (operador_mat -> MULTIPL .)
    LPARENT         reduce using rule 5 (operador_mat -> MULTIPL .)
    VARIABLE        reduce using rule 5 (operador_mat -> MULTIPL .)
    INTEGER         reduce using rule 5 (operador_mat -> MULTIPL .)
    FLOAT           reduce using rule 5 (operador_mat -> MULTIPL .)


state 65

    (6) operador_mat -> DIVISION .

    IGUAL           reduce using rule 6 (operador_mat -> DIVISION .)
    RESTA           reduce using rule 6 (operador_mat -> DIVISION .)
    LPARENT         reduce using rule 6 (operador_mat -> DIVISION .)
    VARIABLE        reduce using rule 6 (operador_mat -> DIVISION .)
    INTEGER         reduce using rule 6 (operador_mat -> DIVISION .)
    FLOAT           reduce using rule 6 (operador_mat -> DIVISION .)


state 66

    (72) casting -> CADENA PUNTO . TOINT LPARENT RPARENT
    (73) casting -> CADENA PUNTO . TODOUBLE LPARENT RPARENT

    TOINT           shift and go to state 135
    TODOUBLE        shift and go to state 136


state 67

    (186) read -> STDIN PUNTO . READLINESYNC LPARENT RPARENT PUNTOCOMA

    READLINESYNC    shift and go to state 137


state 68

    (215) casting -> LPARENT . valor AS tipo_dato RPARENT
    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (133) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (173) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (151) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (185) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 139
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 138
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39

    valor                          shift and go to state 69
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_log_sin_par          shift and go to state 70
    operacion_comp_sin_par         shift and go to state 73
    operacion_mat_sin_par          shift and go to state 71
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 140
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 141
    negativo                       shift and go to state 142
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 55
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    numero                         shift and go to state 143
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_comp                 shift and go to state 45
    operacion_log_not              shift and go to state 83
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 54
    casting_num                    shift and go to state 46
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 48
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_mat_con_par          shift and go to state 40

state 69

    (215) casting -> LPARENT valor . AS tipo_dato RPARENT
    (25) casting_num -> LPARENT valor . AS INT RPARENT
    (26) casting_num -> LPARENT valor . AS DOUBLE RPARENT
    (133) operando_comp_eq -> LPARENT valor . AS BOOL RPARENT

    AS              shift and go to state 144


state 70

    (173) operacion_log_con_par -> LPARENT operacion_log_sin_par . RPARENT
    (192) operacion_log -> operacion_log_sin_par .

    RPARENT         shift and go to state 145
    AS              reduce using rule 192 (operacion_log -> operacion_log_sin_par .)


state 71

    (45) operacion_mat_con_par -> LPARENT operacion_mat_sin_par . RPARENT
    (52) operacion_mat_pos -> operacion_mat_sin_par .

    RPARENT         shift and go to state 146
    AS              reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    MAYOR_QUE       reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    MENOR_QUE       reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    MENOR_O_IGUAL   reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    MAYOR_O_IGUAL   reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    IGUAL           reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)
    NO_IGUAL        reduce using rule 52 (operacion_mat_pos -> operacion_mat_sin_par .)


state 72

    (185) operacion_log_not_con_par -> LPARENT NEGACION . operando_log_not RPARENT
    (182) operacion_log_not_sin_par -> NEGACION . operando_log_not
    (175) operando_log_not -> . bool
    (176) operando_log_not -> . operacion_log_con_par
    (177) operando_log_not -> . VARIABLE
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT

    VARIABLE        shift and go to state 112
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LPARENT         shift and go to state 113

    operando_log_not               shift and go to state 147
    bool                           shift and go to state 110
    operacion_log_con_par          shift and go to state 111

state 73

    (151) operacion_comp_con_par -> LPARENT operacion_comp_sin_par . RPARENT
    (154) operacion_comp -> operacion_comp_sin_par .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 148
    AND             reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)
    OR              reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)
    AS              reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .)

  ! RPARENT         [ reduce using rule 154 (operacion_comp -> operacion_comp_sin_par .) ]


state 74

    (110) operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par . RPARENT
    (112) operacion_comp_orden -> operacion_comp_orden_sin_par .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 149
    AND             reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    OR              reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    AS              reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    IGUAL           reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    NO_IGUAL        reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .)

  ! RPARENT         [ reduce using rule 112 (operacion_comp_orden -> operacion_comp_orden_sin_par .) ]


state 75

    (87) valor -> VARIABLE .
    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (165) operandos_log -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (96) operando_comp_orden -> VARIABLE .
    (200) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (201) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (212) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (130) operando_comp_eq -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 87 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58
    AND             reduce using rule 165 (operandos_log -> VARIABLE .)
    OR              reduce using rule 165 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 165 (operandos_log -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    AUTOINCREMENTO  shift and go to state 59
    AUTODECREMENTO  shift and go to state 60
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! AS              [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! AS              [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]

    operador_mat                   shift and go to state 150

state 76

    (89) valor -> indexacion .
    (168) operandos_log -> indexacion .
    (13) operando_mat -> indexacion .
    (97) operando_comp_orden -> indexacion .
    (128) operando_comp_eq -> indexacion .

  ! reduce/reduce conflict for AS resolved using rule 89 (valor -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 168 (operandos_log -> indexacion .)
    OR              reduce using rule 168 (operandos_log -> indexacion .)
    RPARENT         reduce using rule 168 (operandos_log -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)

  ! AS              [ reduce using rule 89 (valor -> indexacion .) ]
  ! AS              [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! IGUAL           [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]


state 77

    (91) valor -> ejecutar_funcion .
    (167) operandos_log -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (98) operando_comp_orden -> ejecutar_funcion .
    (129) operando_comp_eq -> ejecutar_funcion .

  ! reduce/reduce conflict for AS resolved using rule 91 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    RPARENT         reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! AS              [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]


state 78

    (92) valor -> negativo .
    (14) operando_mat -> negativo .
    (99) operando_comp_orden -> negativo .
    (132) operando_comp_eq -> negativo .

  ! reduce/reduce conflict for AS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)

  ! AS              [ reduce using rule 92 (valor -> negativo .) ]
  ! MAYOR_QUE       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MENOR_QUE       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! IGUAL           [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! NO_IGUAL        [ reduce using rule 132 (operando_comp_eq -> negativo .) ]


state 79

    (170) operacion_log_sin_par -> operandos_log . operadores_log operacion_log
    (171) operacion_log_sin_par -> operandos_log .
    (194) operacion_log -> operandos_log .
    (157) operadores_log -> . AND
    (158) operadores_log -> . OR

  ! reduce/reduce conflict for AS resolved using rule 171 (operacion_log_sin_par -> operandos_log .)
    RPARENT         reduce using rule 171 (operacion_log_sin_par -> operandos_log .)
    AS              reduce using rule 171 (operacion_log_sin_par -> operandos_log .)
    AND             shift and go to state 96
    OR              shift and go to state 97

  ! AS              [ reduce using rule 194 (operacion_log -> operandos_log .) ]

    operadores_log                 shift and go to state 98

state 80

    (31) operacion_mat_sin_par -> operando_mat . operador_mat operacion_mat
    (53) operacion_mat_pos -> operando_mat .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

    AS              reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    MAYOR_QUE       reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    MENOR_QUE       reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    MENOR_O_IGUAL   reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    MAYOR_O_IGUAL   reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    IGUAL           reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    NO_IGUAL        reduce using rule 53 (operacion_mat_pos -> operando_mat .)
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

    operador_mat                   shift and go to state 108

state 81

    (207) operaciones -> operacion_mat .
    (94) operando_comp_orden -> operacion_mat .
    (125) operando_comp_eq -> operacion_mat .

    AS              reduce using rule 207 (operaciones -> operacion_mat .)
    MAYOR_QUE       reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    MENOR_QUE       reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    MENOR_O_IGUAL   reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    MAYOR_O_IGUAL   reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    IGUAL           reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    NO_IGUAL        reduce using rule 125 (operando_comp_eq -> operacion_mat .)


state 82

    (74) datos -> numero .
    (11) operando_mat -> numero .
    (95) operando_comp_orden -> numero .
    (122) operando_comp_eq -> numero .

  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)

  ! AS              [ reduce using rule 74 (datos -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! IGUAL           [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 122 (operando_comp_eq -> numero .) ]


state 83

    (164) operandos_log -> operacion_log_not .
    (193) operacion_log -> operacion_log_not .

  ! reduce/reduce conflict for AS resolved using rule 164 (operandos_log -> operacion_log_not .)
    AND             reduce using rule 164 (operandos_log -> operacion_log_not .)
    OR              reduce using rule 164 (operandos_log -> operacion_log_not .)
    RPARENT         reduce using rule 164 (operandos_log -> operacion_log_not .)
    AS              reduce using rule 164 (operandos_log -> operacion_log_not .)

  ! AS              [ reduce using rule 193 (operacion_log -> operacion_log_not .) ]


state 84

    (189) read -> STDOUT PUNTO . WRITE LPARENT CADENA RPARENT PUNTOCOMA

    WRITE           shift and go to state 151


state 85

    (103) negativo -> RESTA numero .

    COMA            reduce using rule 103 (negativo -> RESTA numero .)
    $end            reduce using rule 103 (negativo -> RESTA numero .)
    MAS             reduce using rule 103 (negativo -> RESTA numero .)
    RESTA           reduce using rule 103 (negativo -> RESTA numero .)
    MULTIPL         reduce using rule 103 (negativo -> RESTA numero .)
    DIVISION        reduce using rule 103 (negativo -> RESTA numero .)
    IGUAL           reduce using rule 103 (negativo -> RESTA numero .)
    NO_IGUAL        reduce using rule 103 (negativo -> RESTA numero .)
    MAYOR_QUE       reduce using rule 103 (negativo -> RESTA numero .)
    MENOR_QUE       reduce using rule 103 (negativo -> RESTA numero .)
    MENOR_O_IGUAL   reduce using rule 103 (negativo -> RESTA numero .)
    MAYOR_O_IGUAL   reduce using rule 103 (negativo -> RESTA numero .)
    AS              reduce using rule 103 (negativo -> RESTA numero .)
    DOSPUNTOS       reduce using rule 103 (negativo -> RESTA numero .)
    LLAVER          reduce using rule 103 (negativo -> RESTA numero .)
    RPARENT         reduce using rule 103 (negativo -> RESTA numero .)
    CORCH_IZQ       reduce using rule 103 (negativo -> RESTA numero .)
    AND             reduce using rule 103 (negativo -> RESTA numero .)
    OR              reduce using rule 103 (negativo -> RESTA numero .)


state 86

    (104) negativo -> RESTA VARIABLE .
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
    COMA            reduce using rule 104 (negativo -> RESTA VARIABLE .)
    $end            reduce using rule 104 (negativo -> RESTA VARIABLE .)
    MAS             reduce using rule 104 (negativo -> RESTA VARIABLE .)
    RESTA           reduce using rule 104 (negativo -> RESTA VARIABLE .)
    MULTIPL         reduce using rule 104 (negativo -> RESTA VARIABLE .)
    DIVISION        reduce using rule 104 (negativo -> RESTA VARIABLE .)
    IGUAL           reduce using rule 104 (negativo -> RESTA VARIABLE .)
    NO_IGUAL        reduce using rule 104 (negativo -> RESTA VARIABLE .)
    MAYOR_QUE       reduce using rule 104 (negativo -> RESTA VARIABLE .)
    MENOR_QUE       reduce using rule 104 (negativo -> RESTA VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 104 (negativo -> RESTA VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 104 (negativo -> RESTA VARIABLE .)
    AS              reduce using rule 104 (negativo -> RESTA VARIABLE .)
    DOSPUNTOS       reduce using rule 104 (negativo -> RESTA VARIABLE .)
    LLAVER          reduce using rule 104 (negativo -> RESTA VARIABLE .)
    RPARENT         reduce using rule 104 (negativo -> RESTA VARIABLE .)
    AND             reduce using rule 104 (negativo -> RESTA VARIABLE .)
    OR              reduce using rule 104 (negativo -> RESTA VARIABLE .)
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58

  ! CORCH_IZQ       [ reduce using rule 104 (negativo -> RESTA VARIABLE .) ]


state 87

    (105) negativo -> RESTA indexacion .

    COMA            reduce using rule 105 (negativo -> RESTA indexacion .)
    $end            reduce using rule 105 (negativo -> RESTA indexacion .)
    MAS             reduce using rule 105 (negativo -> RESTA indexacion .)
    RESTA           reduce using rule 105 (negativo -> RESTA indexacion .)
    MULTIPL         reduce using rule 105 (negativo -> RESTA indexacion .)
    DIVISION        reduce using rule 105 (negativo -> RESTA indexacion .)
    IGUAL           reduce using rule 105 (negativo -> RESTA indexacion .)
    NO_IGUAL        reduce using rule 105 (negativo -> RESTA indexacion .)
    MAYOR_QUE       reduce using rule 105 (negativo -> RESTA indexacion .)
    MENOR_QUE       reduce using rule 105 (negativo -> RESTA indexacion .)
    MENOR_O_IGUAL   reduce using rule 105 (negativo -> RESTA indexacion .)
    MAYOR_O_IGUAL   reduce using rule 105 (negativo -> RESTA indexacion .)
    AS              reduce using rule 105 (negativo -> RESTA indexacion .)
    DOSPUNTOS       reduce using rule 105 (negativo -> RESTA indexacion .)
    LLAVER          reduce using rule 105 (negativo -> RESTA indexacion .)
    RPARENT         reduce using rule 105 (negativo -> RESTA indexacion .)
    CORCH_IZQ       reduce using rule 105 (negativo -> RESTA indexacion .)
    AND             reduce using rule 105 (negativo -> RESTA indexacion .)
    OR              reduce using rule 105 (negativo -> RESTA indexacion .)


state 88

    (106) negativo -> RESTA ejecutar_funcion .

    COMA            reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    $end            reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    MAS             reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    RESTA           reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    MULTIPL         reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    DIVISION        reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    IGUAL           reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    NO_IGUAL        reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    MENOR_QUE       reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    AS              reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    LLAVER          reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    RPARENT         reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    AND             reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)
    OR              reduce using rule 106 (negativo -> RESTA ejecutar_funcion .)


state 89

    (50) operacion_mat_pos -> RESTA operacion_mat_con_par .
    (64) operacion_mat_neg -> RESTA operacion_mat_con_par .
    (65) operacion_mat_neg -> RESTA operacion_mat_con_par . operador_mat operacion_mat_pos
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for COMA resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for $end resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for IGUAL resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for AS resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for LLAVER resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for RPARENT resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for AND resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for OR resolved using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    COMA            reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    $end            reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    IGUAL           reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    NO_IGUAL        reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MAYOR_QUE       reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MENOR_QUE       reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MENOR_O_IGUAL   reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MAYOR_O_IGUAL   reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    AS              reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    DOSPUNTOS       reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    LLAVER          reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    RPARENT         reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    CORCH_IZQ       reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    AND             reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    OR              reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! COMA            [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! $end            [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! IGUAL           [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! NO_IGUAL        [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! MAYOR_QUE       [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! MENOR_QUE       [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! AS              [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! DOSPUNTOS       [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! LLAVER          [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! RPARENT         [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! CORCH_IZQ       [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! AND             [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! OR              [ reduce using rule 64 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]

    operador_mat                   shift and go to state 152

state 90

    (62) numero -> INTEGER .

    COMA            reduce using rule 62 (numero -> INTEGER .)
    $end            reduce using rule 62 (numero -> INTEGER .)
    MAS             reduce using rule 62 (numero -> INTEGER .)
    RESTA           reduce using rule 62 (numero -> INTEGER .)
    MULTIPL         reduce using rule 62 (numero -> INTEGER .)
    DIVISION        reduce using rule 62 (numero -> INTEGER .)
    IGUAL           reduce using rule 62 (numero -> INTEGER .)
    NO_IGUAL        reduce using rule 62 (numero -> INTEGER .)
    MAYOR_QUE       reduce using rule 62 (numero -> INTEGER .)
    MENOR_QUE       reduce using rule 62 (numero -> INTEGER .)
    MENOR_O_IGUAL   reduce using rule 62 (numero -> INTEGER .)
    MAYOR_O_IGUAL   reduce using rule 62 (numero -> INTEGER .)
    AS              reduce using rule 62 (numero -> INTEGER .)
    DOSPUNTOS       reduce using rule 62 (numero -> INTEGER .)
    LLAVER          reduce using rule 62 (numero -> INTEGER .)
    RPARENT         reduce using rule 62 (numero -> INTEGER .)
    CORCH_IZQ       reduce using rule 62 (numero -> INTEGER .)
    AND             reduce using rule 62 (numero -> INTEGER .)
    OR              reduce using rule 62 (numero -> INTEGER .)


state 91

    (63) numero -> FLOAT .

    COMA            reduce using rule 63 (numero -> FLOAT .)
    $end            reduce using rule 63 (numero -> FLOAT .)
    MAS             reduce using rule 63 (numero -> FLOAT .)
    RESTA           reduce using rule 63 (numero -> FLOAT .)
    MULTIPL         reduce using rule 63 (numero -> FLOAT .)
    DIVISION        reduce using rule 63 (numero -> FLOAT .)
    IGUAL           reduce using rule 63 (numero -> FLOAT .)
    NO_IGUAL        reduce using rule 63 (numero -> FLOAT .)
    MAYOR_QUE       reduce using rule 63 (numero -> FLOAT .)
    MENOR_QUE       reduce using rule 63 (numero -> FLOAT .)
    MENOR_O_IGUAL   reduce using rule 63 (numero -> FLOAT .)
    MAYOR_O_IGUAL   reduce using rule 63 (numero -> FLOAT .)
    AS              reduce using rule 63 (numero -> FLOAT .)
    DOSPUNTOS       reduce using rule 63 (numero -> FLOAT .)
    LLAVER          reduce using rule 63 (numero -> FLOAT .)
    RPARENT         reduce using rule 63 (numero -> FLOAT .)
    CORCH_IZQ       reduce using rule 63 (numero -> FLOAT .)
    AND             reduce using rule 63 (numero -> FLOAT .)
    OR              reduce using rule 63 (numero -> FLOAT .)


state 92

    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    VARIABLE        shift and go to state 126
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91
    RESTA           shift and go to state 156
    LPARENT         shift and go to state 153

    operacion_mat_sin_par          shift and go to state 154
    operando_mat                   shift and go to state 155
    numero                         shift and go to state 131
    indexacion                     shift and go to state 132
    negativo                       shift and go to state 133
    ejecutar_funcion               shift and go to state 134
    casting_num                    shift and go to state 46

state 93

    (81) casting -> INTEGER PUNTO . TOSTRING LPARENT RPARENT

    TOSTRING        shift and go to state 157


state 94

    (82) casting -> FLOAT PUNTO . TOSTRING LPARENT RPARENT

    TOSTRING        shift and go to state 158


state 95

    (191) operacion_log -> operacion_log_con_par operadores_log . operacion_log
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    LPARENT         shift and go to state 160
    VARIABLE        shift and go to state 161
    NEGACION        shift and go to state 47
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 166
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91
    RESTA           shift and go to state 25

    operacion_log_con_par          shift and go to state 32
    operacion_log                  shift and go to state 159
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    bool                           shift and go to state 162
    ejecutar_funcion               shift and go to state 163
    indexacion                     shift and go to state 164
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    numero                         shift and go to state 165
    operacion_mat                  shift and go to state 167
    negativo                       shift and go to state 168
    operando_comp_orden            shift and go to state 55
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    casting_num                    shift and go to state 46

state 96

    (157) operadores_log -> AND .

    LPARENT         reduce using rule 157 (operadores_log -> AND .)
    VARIABLE        reduce using rule 157 (operadores_log -> AND .)
    NEGACION        reduce using rule 157 (operadores_log -> AND .)
    TRUE            reduce using rule 157 (operadores_log -> AND .)
    FALSE           reduce using rule 157 (operadores_log -> AND .)
    CADENA          reduce using rule 157 (operadores_log -> AND .)
    INTEGER         reduce using rule 157 (operadores_log -> AND .)
    FLOAT           reduce using rule 157 (operadores_log -> AND .)
    RESTA           reduce using rule 157 (operadores_log -> AND .)


state 97

    (158) operadores_log -> OR .

    LPARENT         reduce using rule 158 (operadores_log -> OR .)
    VARIABLE        reduce using rule 158 (operadores_log -> OR .)
    NEGACION        reduce using rule 158 (operadores_log -> OR .)
    TRUE            reduce using rule 158 (operadores_log -> OR .)
    FALSE           reduce using rule 158 (operadores_log -> OR .)
    CADENA          reduce using rule 158 (operadores_log -> OR .)
    INTEGER         reduce using rule 158 (operadores_log -> OR .)
    FLOAT           reduce using rule 158 (operadores_log -> OR .)
    RESTA           reduce using rule 158 (operadores_log -> OR .)


state 98

    (170) operacion_log_sin_par -> operandos_log operadores_log . operacion_log
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    LPARENT         shift and go to state 160
    VARIABLE        shift and go to state 161
    NEGACION        shift and go to state 47
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 166
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91
    RESTA           shift and go to state 25

    operandos_log                  shift and go to state 35
    operacion_log                  shift and go to state 169
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    bool                           shift and go to state 162
    ejecutar_funcion               shift and go to state 163
    indexacion                     shift and go to state 164
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    numero                         shift and go to state 165
    operacion_mat                  shift and go to state 167
    negativo                       shift and go to state 168
    operando_comp_orden            shift and go to state 55
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    casting_num                    shift and go to state 46

state 99

    (202) operacion_unaria -> AUTOINCREMENTO VARIABLE .

    COMA            reduce using rule 202 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    $end            reduce using rule 202 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    AS              reduce using rule 202 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    DOSPUNTOS       reduce using rule 202 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    LLAVER          reduce using rule 202 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    RPARENT         reduce using rule 202 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    CORCH_IZQ       reduce using rule 202 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)


state 100

    (203) operacion_unaria -> AUTODECREMENTO VARIABLE .

    COMA            reduce using rule 203 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    $end            reduce using rule 203 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    AS              reduce using rule 203 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    DOSPUNTOS       reduce using rule 203 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    LLAVER          reduce using rule 203 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    RPARENT         reduce using rule 203 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    CORCH_IZQ       reduce using rule 203 (operacion_unaria -> AUTODECREMENTO VARIABLE .)


state 101

    (57) lista -> LIST MENOR_QUE . datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> LIST MENOR_QUE . STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> LIST MENOR_QUE . INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> LIST MENOR_QUE . DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> LIST MENOR_QUE . BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    STRING          shift and go to state 171
    INT             shift and go to state 172
    DOUBLE          shift and go to state 173
    BOOL            shift and go to state 174
    CADENA          shift and go to state 176
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    datos                          shift and go to state 170
    numero                         shift and go to state 175
    bool                           shift and go to state 177

state 102

    (83) conjunto -> LLAVEL valores . LLAVER

    LLAVER          shift and go to state 178


state 103

    (84) conjunto -> LLAVEL LLAVER .
    (101) mapa -> LLAVEL LLAVER .

  ! reduce/reduce conflict for COMA resolved using rule 84 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for $end resolved using rule 84 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for AS resolved using rule 84 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 84 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for LLAVER resolved using rule 84 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for RPARENT resolved using rule 84 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 84 (conjunto -> LLAVEL LLAVER .)
    COMA            reduce using rule 84 (conjunto -> LLAVEL LLAVER .)
    $end            reduce using rule 84 (conjunto -> LLAVEL LLAVER .)
    AS              reduce using rule 84 (conjunto -> LLAVEL LLAVER .)
    DOSPUNTOS       reduce using rule 84 (conjunto -> LLAVEL LLAVER .)
    LLAVER          reduce using rule 84 (conjunto -> LLAVEL LLAVER .)
    RPARENT         reduce using rule 84 (conjunto -> LLAVEL LLAVER .)
    CORCH_IZQ       reduce using rule 84 (conjunto -> LLAVEL LLAVER .)

  ! COMA            [ reduce using rule 101 (mapa -> LLAVEL LLAVER .) ]
  ! $end            [ reduce using rule 101 (mapa -> LLAVEL LLAVER .) ]
  ! AS              [ reduce using rule 101 (mapa -> LLAVEL LLAVER .) ]
  ! DOSPUNTOS       [ reduce using rule 101 (mapa -> LLAVEL LLAVER .) ]
  ! LLAVER          [ reduce using rule 101 (mapa -> LLAVEL LLAVER .) ]
  ! RPARENT         [ reduce using rule 101 (mapa -> LLAVEL LLAVER .) ]
  ! CORCH_IZQ       [ reduce using rule 101 (mapa -> LLAVEL LLAVER .) ]


state 104

    (100) mapa -> LLAVEL claves_valores . LLAVER

    LLAVER          shift and go to state 179


state 105

    (1) valores -> valor .
    (2) valores -> valor . COMA valores
    (8) clave_valor -> valor . DOSPUNTOS valor

    LLAVER          reduce using rule 1 (valores -> valor .)
    COMA            shift and go to state 56
    DOSPUNTOS       shift and go to state 180


state 106

    (17) claves_valores -> clave_valor .
    (18) claves_valores -> clave_valor . COMA claves_valores

    LLAVER          reduce using rule 17 (claves_valores -> clave_valor .)
    COMA            shift and go to state 181


state 107

    (51) operacion_mat_pos -> operacion_mat_con_par operador_mat . operacion_mat_pos
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    RESTA           shift and go to state 183
    LPARENT         shift and go to state 130
    VARIABLE        shift and go to state 126
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91

    operacion_mat_con_par          shift and go to state 40
    operacion_mat_pos              shift and go to state 182
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    numero                         shift and go to state 131
    indexacion                     shift and go to state 132
    negativo                       shift and go to state 133
    ejecutar_funcion               shift and go to state 134
    casting_num                    shift and go to state 46

state 108

    (31) operacion_mat_sin_par -> operando_mat operador_mat . operacion_mat
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    RESTA           shift and go to state 129
    LPARENT         shift and go to state 130
    VARIABLE        shift and go to state 126
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91

    operando_mat                   shift and go to state 42
    operacion_mat                  shift and go to state 184
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    numero                         shift and go to state 131
    indexacion                     shift and go to state 132
    negativo                       shift and go to state 133
    ejecutar_funcion               shift and go to state 134
    casting_num                    shift and go to state 46

state 109

    (182) operacion_log_not_sin_par -> NEGACION operando_log_not .

    COMA            reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    $end            reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    AND             reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    OR              reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    DOSPUNTOS       reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    LLAVER          reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    RPARENT         reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    CORCH_IZQ       reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    AS              reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)


state 110

    (175) operando_log_not -> bool .

    COMA            reduce using rule 175 (operando_log_not -> bool .)
    $end            reduce using rule 175 (operando_log_not -> bool .)
    AND             reduce using rule 175 (operando_log_not -> bool .)
    OR              reduce using rule 175 (operando_log_not -> bool .)
    DOSPUNTOS       reduce using rule 175 (operando_log_not -> bool .)
    LLAVER          reduce using rule 175 (operando_log_not -> bool .)
    RPARENT         reduce using rule 175 (operando_log_not -> bool .)
    CORCH_IZQ       reduce using rule 175 (operando_log_not -> bool .)
    AS              reduce using rule 175 (operando_log_not -> bool .)


state 111

    (176) operando_log_not -> operacion_log_con_par .

    COMA            reduce using rule 176 (operando_log_not -> operacion_log_con_par .)
    $end            reduce using rule 176 (operando_log_not -> operacion_log_con_par .)
    AND             reduce using rule 176 (operando_log_not -> operacion_log_con_par .)
    OR              reduce using rule 176 (operando_log_not -> operacion_log_con_par .)
    DOSPUNTOS       reduce using rule 176 (operando_log_not -> operacion_log_con_par .)
    LLAVER          reduce using rule 176 (operando_log_not -> operacion_log_con_par .)
    RPARENT         reduce using rule 176 (operando_log_not -> operacion_log_con_par .)
    CORCH_IZQ       reduce using rule 176 (operando_log_not -> operacion_log_con_par .)
    AS              reduce using rule 176 (operando_log_not -> operacion_log_con_par .)


state 112

    (177) operando_log_not -> VARIABLE .

    COMA            reduce using rule 177 (operando_log_not -> VARIABLE .)
    $end            reduce using rule 177 (operando_log_not -> VARIABLE .)
    AND             reduce using rule 177 (operando_log_not -> VARIABLE .)
    OR              reduce using rule 177 (operando_log_not -> VARIABLE .)
    DOSPUNTOS       reduce using rule 177 (operando_log_not -> VARIABLE .)
    LLAVER          reduce using rule 177 (operando_log_not -> VARIABLE .)
    RPARENT         reduce using rule 177 (operando_log_not -> VARIABLE .)
    CORCH_IZQ       reduce using rule 177 (operando_log_not -> VARIABLE .)
    AS              reduce using rule 177 (operando_log_not -> VARIABLE .)


state 113

    (173) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    VARIABLE        shift and go to state 161
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LPARENT         shift and go to state 185
    NEGACION        shift and go to state 47
    CADENA          shift and go to state 166
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91
    RESTA           shift and go to state 25

    operacion_log_sin_par          shift and go to state 186
    operandos_log                  shift and go to state 187
    operacion_comp                 shift and go to state 45
    operacion_log_not              shift and go to state 188
    bool                           shift and go to state 162
    ejecutar_funcion               shift and go to state 163
    indexacion                     shift and go to state 164
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    numero                         shift and go to state 165
    operacion_mat                  shift and go to state 167
    operacion_log_con_par          shift and go to state 189
    negativo                       shift and go to state 168
    operando_comp_orden            shift and go to state 55
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    casting_num                    shift and go to state 46

state 114

    (144) operacion_comp_eq -> operando_comp_eq operador_comp_eq . operando_comp_eq
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    CADENA          shift and go to state 166
    VARIABLE        shift and go to state 197
    LPARENT         shift and go to state 199
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    RESTA           shift and go to state 25

    operando_comp_eq               shift and go to state 190
    numero                         shift and go to state 191
    bool                           shift and go to state 192
    operacion_mat                  shift and go to state 167
    operacion_comp_orden           shift and go to state 193
    operacion_comp_con_par         shift and go to state 194
    indexacion                     shift and go to state 195
    ejecutar_funcion               shift and go to state 196
    operacion_log_con_par          shift and go to state 189
    negativo                       shift and go to state 198
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    operando_comp_orden            shift and go to state 55
    casting_num                    shift and go to state 46

state 115

    (138) operador_comp_eq -> IGUAL .

    CADENA          reduce using rule 138 (operador_comp_eq -> IGUAL .)
    VARIABLE        reduce using rule 138 (operador_comp_eq -> IGUAL .)
    LPARENT         reduce using rule 138 (operador_comp_eq -> IGUAL .)
    INTEGER         reduce using rule 138 (operador_comp_eq -> IGUAL .)
    FLOAT           reduce using rule 138 (operador_comp_eq -> IGUAL .)
    TRUE            reduce using rule 138 (operador_comp_eq -> IGUAL .)
    FALSE           reduce using rule 138 (operador_comp_eq -> IGUAL .)
    RESTA           reduce using rule 138 (operador_comp_eq -> IGUAL .)


state 116

    (139) operador_comp_eq -> NO_IGUAL .

    CADENA          reduce using rule 139 (operador_comp_eq -> NO_IGUAL .)
    VARIABLE        reduce using rule 139 (operador_comp_eq -> NO_IGUAL .)
    LPARENT         reduce using rule 139 (operador_comp_eq -> NO_IGUAL .)
    INTEGER         reduce using rule 139 (operador_comp_eq -> NO_IGUAL .)
    FLOAT           reduce using rule 139 (operador_comp_eq -> NO_IGUAL .)
    TRUE            reduce using rule 139 (operador_comp_eq -> NO_IGUAL .)
    FALSE           reduce using rule 139 (operador_comp_eq -> NO_IGUAL .)
    RESTA           reduce using rule 139 (operador_comp_eq -> NO_IGUAL .)


state 117

    (102) operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden . operando_comp_orden
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    VARIABLE        shift and go to state 203
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 130

    operando_comp_orden            shift and go to state 200
    operacion_mat                  shift and go to state 201
    numero                         shift and go to state 202
    indexacion                     shift and go to state 204
    ejecutar_funcion               shift and go to state 205
    negativo                       shift and go to state 206
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    casting_num                    shift and go to state 46

state 118

    (77) operador_comp_orden -> MAYOR_QUE .

    VARIABLE        reduce using rule 77 (operador_comp_orden -> MAYOR_QUE .)
    INTEGER         reduce using rule 77 (operador_comp_orden -> MAYOR_QUE .)
    FLOAT           reduce using rule 77 (operador_comp_orden -> MAYOR_QUE .)
    RESTA           reduce using rule 77 (operador_comp_orden -> MAYOR_QUE .)
    LPARENT         reduce using rule 77 (operador_comp_orden -> MAYOR_QUE .)


state 119

    (78) operador_comp_orden -> MENOR_QUE .

    VARIABLE        reduce using rule 78 (operador_comp_orden -> MENOR_QUE .)
    INTEGER         reduce using rule 78 (operador_comp_orden -> MENOR_QUE .)
    FLOAT           reduce using rule 78 (operador_comp_orden -> MENOR_QUE .)
    RESTA           reduce using rule 78 (operador_comp_orden -> MENOR_QUE .)
    LPARENT         reduce using rule 78 (operador_comp_orden -> MENOR_QUE .)


state 120

    (79) operador_comp_orden -> MENOR_O_IGUAL .

    VARIABLE        reduce using rule 79 (operador_comp_orden -> MENOR_O_IGUAL .)
    INTEGER         reduce using rule 79 (operador_comp_orden -> MENOR_O_IGUAL .)
    FLOAT           reduce using rule 79 (operador_comp_orden -> MENOR_O_IGUAL .)
    RESTA           reduce using rule 79 (operador_comp_orden -> MENOR_O_IGUAL .)
    LPARENT         reduce using rule 79 (operador_comp_orden -> MENOR_O_IGUAL .)


state 121

    (80) operador_comp_orden -> MAYOR_O_IGUAL .

    VARIABLE        reduce using rule 80 (operador_comp_orden -> MAYOR_O_IGUAL .)
    INTEGER         reduce using rule 80 (operador_comp_orden -> MAYOR_O_IGUAL .)
    FLOAT           reduce using rule 80 (operador_comp_orden -> MAYOR_O_IGUAL .)
    RESTA           reduce using rule 80 (operador_comp_orden -> MAYOR_O_IGUAL .)
    LPARENT         reduce using rule 80 (operador_comp_orden -> MAYOR_O_IGUAL .)


state 122

    (2) valores -> valor COMA valores .

    $end            reduce using rule 2 (valores -> valor COMA valores .)
    LLAVER          reduce using rule 2 (valores -> valor COMA valores .)
    RPARENT         reduce using rule 2 (valores -> valor COMA valores .)


state 123

    (111) indexacion -> VARIABLE CORCH_IZQ valor . CORCH_IZQ

    CORCH_IZQ       shift and go to state 207


state 124

    (213) ejecutar_funcion -> VARIABLE LPARENT valores . RPARENT

    RPARENT         shift and go to state 208


state 125

    (214) ejecutar_funcion -> VARIABLE LPARENT RPARENT .

    COMA            reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    $end            reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    AND             reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    OR              reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MAS             reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    RESTA           reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MULTIPL         reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    DIVISION        reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    IGUAL           reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    NO_IGUAL        reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MAYOR_QUE       reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MENOR_QUE       reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MENOR_O_IGUAL   reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MAYOR_O_IGUAL   reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    AS              reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    RPARENT         reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    DOSPUNTOS       reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    LLAVER          reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    CORCH_IZQ       reduce using rule 214 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)


state 126

    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (12) operando_mat -> VARIABLE .
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    COMA            reduce using rule 12 (operando_mat -> VARIABLE .)
    $end            reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    DOSPUNTOS       reduce using rule 12 (operando_mat -> VARIABLE .)
    LLAVER          reduce using rule 12 (operando_mat -> VARIABLE .)
    RPARENT         reduce using rule 12 (operando_mat -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    AND             reduce using rule 12 (operando_mat -> VARIABLE .)
    OR              reduce using rule 12 (operando_mat -> VARIABLE .)
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 12 (operando_mat -> VARIABLE .) ]

    operador_mat                   shift and go to state 209

state 127

    (212) operacion_autoasig -> VARIABLE operador_mat IGUAL . operacion_mat
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    RESTA           shift and go to state 129
    LPARENT         shift and go to state 130
    VARIABLE        shift and go to state 126
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91

    operacion_mat                  shift and go to state 210
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    numero                         shift and go to state 131
    indexacion                     shift and go to state 132
    negativo                       shift and go to state 133
    ejecutar_funcion               shift and go to state 134
    casting_num                    shift and go to state 46

state 128

    (32) operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .

    COMA            reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    $end            reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    IGUAL           reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    NO_IGUAL        reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    MAYOR_QUE       reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    MENOR_QUE       reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    MENOR_O_IGUAL   reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    MAYOR_O_IGUAL   reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    RPARENT         reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    AS              reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    DOSPUNTOS       reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    LLAVER          reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    CORCH_IZQ       reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    AND             reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    OR              reduce using rule 32 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)


state 129

    (50) operacion_mat_pos -> RESTA . operacion_mat_con_par
    (64) operacion_mat_neg -> RESTA . operacion_mat_con_par
    (65) operacion_mat_neg -> RESTA . operacion_mat_con_par operador_mat operacion_mat_pos
    (103) negativo -> RESTA . numero
    (104) negativo -> RESTA . VARIABLE
    (105) negativo -> RESTA . indexacion
    (106) negativo -> RESTA . ejecutar_funcion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT

    VARIABLE        shift and go to state 86
    LPARENT         shift and go to state 92
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91

    operacion_mat_con_par          shift and go to state 89
    numero                         shift and go to state 85
    indexacion                     shift and go to state 87
    ejecutar_funcion               shift and go to state 88

state 130

    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 213
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 211
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39
    NEGACION        shift and go to state 47

    operacion_mat_sin_par          shift and go to state 71
    valor                          shift and go to state 212
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 15
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 214
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 215
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 216
    casting_num                    shift and go to state 46
    bool                           shift and go to state 14
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 40
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    operando_comp_orden            shift and go to state 55

state 131

    (11) operando_mat -> numero .

    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    COMA            reduce using rule 11 (operando_mat -> numero .)
    $end            reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    DOSPUNTOS       reduce using rule 11 (operando_mat -> numero .)
    LLAVER          reduce using rule 11 (operando_mat -> numero .)
    RPARENT         reduce using rule 11 (operando_mat -> numero .)
    CORCH_IZQ       reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    AND             reduce using rule 11 (operando_mat -> numero .)
    OR              reduce using rule 11 (operando_mat -> numero .)


state 132

    (13) operando_mat -> indexacion .

    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    COMA            reduce using rule 13 (operando_mat -> indexacion .)
    $end            reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    DOSPUNTOS       reduce using rule 13 (operando_mat -> indexacion .)
    LLAVER          reduce using rule 13 (operando_mat -> indexacion .)
    RPARENT         reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_IZQ       reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 13 (operando_mat -> indexacion .)
    OR              reduce using rule 13 (operando_mat -> indexacion .)


state 133

    (14) operando_mat -> negativo .

    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    COMA            reduce using rule 14 (operando_mat -> negativo .)
    $end            reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    DOSPUNTOS       reduce using rule 14 (operando_mat -> negativo .)
    LLAVER          reduce using rule 14 (operando_mat -> negativo .)
    RPARENT         reduce using rule 14 (operando_mat -> negativo .)
    CORCH_IZQ       reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)
    AND             reduce using rule 14 (operando_mat -> negativo .)
    OR              reduce using rule 14 (operando_mat -> negativo .)


state 134

    (15) operando_mat -> ejecutar_funcion .

    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    COMA            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    $end            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    LLAVER          reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RPARENT         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    OR              reduce using rule 15 (operando_mat -> ejecutar_funcion .)


state 135

    (72) casting -> CADENA PUNTO TOINT . LPARENT RPARENT

    LPARENT         shift and go to state 217


state 136

    (73) casting -> CADENA PUNTO TODOUBLE . LPARENT RPARENT

    LPARENT         shift and go to state 218


state 137

    (186) read -> STDIN PUNTO READLINESYNC . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 219


state 138

    (215) casting -> LPARENT . valor AS tipo_dato RPARENT
    (133) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (173) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (151) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (185) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 139
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 138
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39

    valor                          shift and go to state 220
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_log_sin_par          shift and go to state 70
    operacion_comp_sin_par         shift and go to state 73
    operacion_mat_sin_par          shift and go to state 71
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 140
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 141
    negativo                       shift and go to state 142
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 55
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    numero                         shift and go to state 143
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_comp                 shift and go to state 45
    operacion_log_not              shift and go to state 83
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 54
    casting_num                    shift and go to state 46
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 48
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_mat_con_par          shift and go to state 40

state 139

    (87) valor -> VARIABLE .
    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (96) operando_comp_orden -> VARIABLE .
    (165) operandos_log -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (200) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (201) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (212) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (130) operando_comp_eq -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 87 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58
    AND             reduce using rule 165 (operandos_log -> VARIABLE .)
    OR              reduce using rule 165 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 165 (operandos_log -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    AUTOINCREMENTO  shift and go to state 59
    AUTODECREMENTO  shift and go to state 60
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! AS              [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! AS              [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]

    operador_mat                   shift and go to state 150

state 140

    (89) valor -> indexacion .
    (97) operando_comp_orden -> indexacion .
    (168) operandos_log -> indexacion .
    (13) operando_mat -> indexacion .
    (128) operando_comp_eq -> indexacion .

  ! reduce/reduce conflict for AS resolved using rule 89 (valor -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 168 (operandos_log -> indexacion .)
    OR              reduce using rule 168 (operandos_log -> indexacion .)
    RPARENT         reduce using rule 168 (operandos_log -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)

  ! AS              [ reduce using rule 89 (valor -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! AS              [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! IGUAL           [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]


state 141

    (91) valor -> ejecutar_funcion .
    (98) operando_comp_orden -> ejecutar_funcion .
    (167) operandos_log -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (129) operando_comp_eq -> ejecutar_funcion .

  ! reduce/reduce conflict for AS resolved using rule 91 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    RPARENT         reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! AS              [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]


state 142

    (92) valor -> negativo .
    (99) operando_comp_orden -> negativo .
    (14) operando_mat -> negativo .
    (132) operando_comp_eq -> negativo .

  ! reduce/reduce conflict for AS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)

  ! AS              [ reduce using rule 92 (valor -> negativo .) ]
  ! MAYOR_QUE       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MENOR_QUE       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! IGUAL           [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! NO_IGUAL        [ reduce using rule 132 (operando_comp_eq -> negativo .) ]


state 143

    (74) datos -> numero .
    (95) operando_comp_orden -> numero .
    (11) operando_mat -> numero .
    (122) operando_comp_eq -> numero .

  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)

  ! AS              [ reduce using rule 74 (datos -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! IGUAL           [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 122 (operando_comp_eq -> numero .) ]


state 144

    (215) casting -> LPARENT valor AS . tipo_dato RPARENT
    (25) casting_num -> LPARENT valor AS . INT RPARENT
    (26) casting_num -> LPARENT valor AS . DOUBLE RPARENT
    (133) operando_comp_eq -> LPARENT valor AS . BOOL RPARENT
    (114) tipo_dato -> . BOOL
    (115) tipo_dato -> . DOUBLE
    (116) tipo_dato -> . INT
    (117) tipo_dato -> . STRING
    (118) tipo_dato -> . VOID
    (119) tipo_dato -> . LIST
    (120) tipo_dato -> . SET
    (121) tipo_dato -> . MAP

    INT             shift and go to state 222
    DOUBLE          shift and go to state 223
    BOOL            shift and go to state 224
    STRING          shift and go to state 225
    VOID            shift and go to state 226
    LIST            shift and go to state 227
    SET             shift and go to state 228
    MAP             shift and go to state 229

    tipo_dato                      shift and go to state 221

state 145

    (173) operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .

    AND             reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    OR              reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    COMA            reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    $end            reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    IGUAL           reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    NO_IGUAL        reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    AS              reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    DOSPUNTOS       reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    LLAVER          reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    RPARENT         reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    CORCH_IZQ       reduce using rule 173 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)


state 146

    (45) operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .

    MAS             reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    RESTA           reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    MULTIPL         reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    DIVISION        reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    COMA            reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    $end            reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    IGUAL           reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    NO_IGUAL        reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    MAYOR_QUE       reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    MENOR_QUE       reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    MENOR_O_IGUAL   reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    MAYOR_O_IGUAL   reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    AS              reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    DOSPUNTOS       reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    LLAVER          reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    RPARENT         reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    CORCH_IZQ       reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    AND             reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    OR              reduce using rule 45 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)


state 147

    (185) operacion_log_not_con_par -> LPARENT NEGACION operando_log_not . RPARENT
    (182) operacion_log_not_sin_par -> NEGACION operando_log_not .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 230
    AND             reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    OR              reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    AS              reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .)

  ! RPARENT         [ reduce using rule 182 (operacion_log_not_sin_par -> NEGACION operando_log_not .) ]


state 148

    (151) operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .

    AND             reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    OR              reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    COMA            reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    $end            reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    IGUAL           reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    NO_IGUAL        reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    RPARENT         reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    AS              reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    DOSPUNTOS       reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    LLAVER          reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    CORCH_IZQ       reduce using rule 151 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)


state 149

    (110) operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .

    AND             reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    OR              reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    COMA            reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    $end            reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    IGUAL           reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    NO_IGUAL        reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    RPARENT         reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    AS              reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    DOSPUNTOS       reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    LLAVER          reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    CORCH_IZQ       reduce using rule 110 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)


state 150

    (32) operacion_mat_sin_par -> VARIABLE operador_mat . operacion_mat
    (212) operacion_autoasig -> VARIABLE operador_mat . IGUAL operacion_mat
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    IGUAL           shift and go to state 127
    RESTA           shift and go to state 129
    LPARENT         shift and go to state 130
    VARIABLE        shift and go to state 126
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91

    operacion_mat                  shift and go to state 128
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    numero                         shift and go to state 131
    indexacion                     shift and go to state 132
    negativo                       shift and go to state 133
    ejecutar_funcion               shift and go to state 134
    casting_num                    shift and go to state 46

state 151

    (189) read -> STDOUT PUNTO WRITE . LPARENT CADENA RPARENT PUNTOCOMA

    LPARENT         shift and go to state 231


state 152

    (65) operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat . operacion_mat_pos
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    RESTA           shift and go to state 183
    LPARENT         shift and go to state 130
    VARIABLE        shift and go to state 126
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91

    operacion_mat_con_par          shift and go to state 40
    operacion_mat_pos              shift and go to state 232
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    numero                         shift and go to state 131
    indexacion                     shift and go to state 132
    negativo                       shift and go to state 133
    ejecutar_funcion               shift and go to state 134
    casting_num                    shift and go to state 46

state 153

    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 23
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39
    NEGACION        shift and go to state 47

    valor                          shift and go to state 212
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    casting_num                    shift and go to state 46
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    operando_comp_orden            shift and go to state 55

state 154

    (45) operacion_mat_con_par -> LPARENT operacion_mat_sin_par . RPARENT

    RPARENT         shift and go to state 146


state 155

    (31) operacion_mat_sin_par -> operando_mat . operador_mat operacion_mat
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

    operador_mat                   shift and go to state 108

state 156

    (103) negativo -> RESTA . numero
    (104) negativo -> RESTA . VARIABLE
    (105) negativo -> RESTA . indexacion
    (106) negativo -> RESTA . ejecutar_funcion
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT

    VARIABLE        shift and go to state 86
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91

    numero                         shift and go to state 85
    indexacion                     shift and go to state 87
    ejecutar_funcion               shift and go to state 88

state 157

    (81) casting -> INTEGER PUNTO TOSTRING . LPARENT RPARENT

    LPARENT         shift and go to state 233


state 158

    (82) casting -> FLOAT PUNTO TOSTRING . LPARENT RPARENT

    LPARENT         shift and go to state 234


state 159

    (191) operacion_log -> operacion_log_con_par operadores_log operacion_log .

    COMA            reduce using rule 191 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    $end            reduce using rule 191 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    AS              reduce using rule 191 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    DOSPUNTOS       reduce using rule 191 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    LLAVER          reduce using rule 191 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    RPARENT         reduce using rule 191 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    CORCH_IZQ       reduce using rule 191 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)


state 160

    (173) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (185) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (151) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (133) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 237
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 235
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39

    operacion_log_sin_par          shift and go to state 70
    operacion_comp_sin_par         shift and go to state 73
    valor                          shift and go to state 236
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_mat_sin_par          shift and go to state 71
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 238
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 239
    negativo                       shift and go to state 142
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 55
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    operacion_comp                 shift and go to state 45
    operacion_log_not              shift and go to state 83
    bool                           shift and go to state 240
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 54
    numero                         shift and go to state 143
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    casting_num                    shift and go to state 46
    operacion_comp_con_par         shift and go to state 48
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_log_con_par          shift and go to state 241
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 40

state 161

    (165) operandos_log -> VARIABLE .
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (130) operando_comp_eq -> VARIABLE .
    (96) operando_comp_orden -> VARIABLE .
    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (12) operando_mat -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    AND             reduce using rule 165 (operandos_log -> VARIABLE .)
    OR              reduce using rule 165 (operandos_log -> VARIABLE .)
    COMA            reduce using rule 165 (operandos_log -> VARIABLE .)
    $end            reduce using rule 165 (operandos_log -> VARIABLE .)
    AS              reduce using rule 165 (operandos_log -> VARIABLE .)
    DOSPUNTOS       reduce using rule 165 (operandos_log -> VARIABLE .)
    LLAVER          reduce using rule 165 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 165 (operandos_log -> VARIABLE .)
    LPARENT         shift and go to state 58
    CORCH_IZQ       shift and go to state 57
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! CORCH_IZQ       [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]

    operador_mat                   shift and go to state 209

state 162

    (166) operandos_log -> bool .
    (123) operando_comp_eq -> bool .

    AND             reduce using rule 166 (operandos_log -> bool .)
    OR              reduce using rule 166 (operandos_log -> bool .)
    COMA            reduce using rule 166 (operandos_log -> bool .)
    $end            reduce using rule 166 (operandos_log -> bool .)
    AS              reduce using rule 166 (operandos_log -> bool .)
    DOSPUNTOS       reduce using rule 166 (operandos_log -> bool .)
    LLAVER          reduce using rule 166 (operandos_log -> bool .)
    RPARENT         reduce using rule 166 (operandos_log -> bool .)
    CORCH_IZQ       reduce using rule 166 (operandos_log -> bool .)
    IGUAL           reduce using rule 123 (operando_comp_eq -> bool .)
    NO_IGUAL        reduce using rule 123 (operando_comp_eq -> bool .)


state 163

    (167) operandos_log -> ejecutar_funcion .
    (129) operando_comp_eq -> ejecutar_funcion .
    (98) operando_comp_orden -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .

  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    COMA            reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    $end            reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    AS              reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    LLAVER          reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    RPARENT         reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! IGUAL           [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]


state 164

    (168) operandos_log -> indexacion .
    (128) operando_comp_eq -> indexacion .
    (97) operando_comp_orden -> indexacion .
    (13) operando_mat -> indexacion .

  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 168 (operandos_log -> indexacion .)
    OR              reduce using rule 168 (operandos_log -> indexacion .)
    COMA            reduce using rule 168 (operandos_log -> indexacion .)
    $end            reduce using rule 168 (operandos_log -> indexacion .)
    AS              reduce using rule 168 (operandos_log -> indexacion .)
    DOSPUNTOS       reduce using rule 168 (operandos_log -> indexacion .)
    LLAVER          reduce using rule 168 (operandos_log -> indexacion .)
    RPARENT         reduce using rule 168 (operandos_log -> indexacion .)
    CORCH_IZQ       reduce using rule 168 (operandos_log -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)

  ! IGUAL           [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]


state 165

    (122) operando_comp_eq -> numero .
    (95) operando_comp_orden -> numero .
    (11) operando_mat -> numero .

  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)

  ! IGUAL           [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]


state 166

    (124) operando_comp_eq -> CADENA .

    IGUAL           reduce using rule 124 (operando_comp_eq -> CADENA .)
    NO_IGUAL        reduce using rule 124 (operando_comp_eq -> CADENA .)
    AND             reduce using rule 124 (operando_comp_eq -> CADENA .)
    OR              reduce using rule 124 (operando_comp_eq -> CADENA .)
    COMA            reduce using rule 124 (operando_comp_eq -> CADENA .)
    $end            reduce using rule 124 (operando_comp_eq -> CADENA .)
    RPARENT         reduce using rule 124 (operando_comp_eq -> CADENA .)
    AS              reduce using rule 124 (operando_comp_eq -> CADENA .)
    DOSPUNTOS       reduce using rule 124 (operando_comp_eq -> CADENA .)
    LLAVER          reduce using rule 124 (operando_comp_eq -> CADENA .)
    CORCH_IZQ       reduce using rule 124 (operando_comp_eq -> CADENA .)


state 167

    (125) operando_comp_eq -> operacion_mat .
    (94) operando_comp_orden -> operacion_mat .

    IGUAL           reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    NO_IGUAL        reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    AND             reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    OR              reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    COMA            reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    $end            reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    RPARENT         reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    AS              reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    DOSPUNTOS       reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    LLAVER          reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    CORCH_IZQ       reduce using rule 125 (operando_comp_eq -> operacion_mat .)
    MAYOR_QUE       reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    MENOR_QUE       reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    MENOR_O_IGUAL   reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    MAYOR_O_IGUAL   reduce using rule 94 (operando_comp_orden -> operacion_mat .)


state 168

    (132) operando_comp_eq -> negativo .
    (99) operando_comp_orden -> negativo .
    (14) operando_mat -> negativo .

  ! reduce/reduce conflict for IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)

  ! IGUAL           [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! NO_IGUAL        [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! MAYOR_QUE       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MENOR_QUE       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 99 (operando_comp_orden -> negativo .) ]


state 169

    (170) operacion_log_sin_par -> operandos_log operadores_log operacion_log .

    COMA            reduce using rule 170 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    $end            reduce using rule 170 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    RPARENT         reduce using rule 170 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    AS              reduce using rule 170 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    DOSPUNTOS       reduce using rule 170 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    LLAVER          reduce using rule 170 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    CORCH_IZQ       reduce using rule 170 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)


state 170

    (57) lista -> LIST MENOR_QUE datos . MAYOR_QUE VARIABLE PUNTOCOMA

    MAYOR_QUE       shift and go to state 242


state 171

    (58) lista -> LIST MENOR_QUE STRING . MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA

    MAYOR_QUE       shift and go to state 243


state 172

    (59) lista -> LIST MENOR_QUE INT . MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA

    MAYOR_QUE       shift and go to state 244


state 173

    (60) lista -> LIST MENOR_QUE DOUBLE . MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA

    MAYOR_QUE       shift and go to state 245


state 174

    (61) lista -> LIST MENOR_QUE BOOL . MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA

    MAYOR_QUE       shift and go to state 246


state 175

    (74) datos -> numero .

    MAYOR_QUE       reduce using rule 74 (datos -> numero .)


state 176

    (75) datos -> CADENA .

    MAYOR_QUE       reduce using rule 75 (datos -> CADENA .)


state 177

    (76) datos -> bool .

    MAYOR_QUE       reduce using rule 76 (datos -> bool .)


state 178

    (83) conjunto -> LLAVEL valores LLAVER .

    COMA            reduce using rule 83 (conjunto -> LLAVEL valores LLAVER .)
    $end            reduce using rule 83 (conjunto -> LLAVEL valores LLAVER .)
    AS              reduce using rule 83 (conjunto -> LLAVEL valores LLAVER .)
    DOSPUNTOS       reduce using rule 83 (conjunto -> LLAVEL valores LLAVER .)
    LLAVER          reduce using rule 83 (conjunto -> LLAVEL valores LLAVER .)
    RPARENT         reduce using rule 83 (conjunto -> LLAVEL valores LLAVER .)
    CORCH_IZQ       reduce using rule 83 (conjunto -> LLAVEL valores LLAVER .)


state 179

    (100) mapa -> LLAVEL claves_valores LLAVER .

    COMA            reduce using rule 100 (mapa -> LLAVEL claves_valores LLAVER .)
    $end            reduce using rule 100 (mapa -> LLAVEL claves_valores LLAVER .)
    AS              reduce using rule 100 (mapa -> LLAVEL claves_valores LLAVER .)
    DOSPUNTOS       reduce using rule 100 (mapa -> LLAVEL claves_valores LLAVER .)
    LLAVER          reduce using rule 100 (mapa -> LLAVEL claves_valores LLAVER .)
    RPARENT         reduce using rule 100 (mapa -> LLAVEL claves_valores LLAVER .)
    CORCH_IZQ       reduce using rule 100 (mapa -> LLAVEL claves_valores LLAVER .)


state 180

    (8) clave_valor -> valor DOSPUNTOS . valor
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 23
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39
    NEGACION        shift and go to state 47

    valor                          shift and go to state 247
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    casting_num                    shift and go to state 46
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    operando_comp_orden            shift and go to state 55

state 181

    (18) claves_valores -> clave_valor COMA . claves_valores
    (17) claves_valores -> . clave_valor
    (18) claves_valores -> . clave_valor COMA claves_valores
    (8) clave_valor -> . valor DOSPUNTOS valor
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 23
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39
    NEGACION        shift and go to state 47

    clave_valor                    shift and go to state 106
    claves_valores                 shift and go to state 248
    valor                          shift and go to state 249
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_comp                 shift and go to state 45
    casting_num                    shift and go to state 46
    operacion_comp_con_par         shift and go to state 48
    operacion_comp_sin_par         shift and go to state 49
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_sin_par   shift and go to state 53
    operacion_comp_orden_con_par   shift and go to state 54
    operando_comp_orden            shift and go to state 55

state 182

    (51) operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .

    COMA            reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    $end            reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    IGUAL           reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    NO_IGUAL        reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    MAYOR_QUE       reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    MENOR_QUE       reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    MENOR_O_IGUAL   reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    MAYOR_O_IGUAL   reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    AS              reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    DOSPUNTOS       reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    LLAVER          reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    RPARENT         reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    CORCH_IZQ       reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    AND             reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    OR              reduce using rule 51 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)


state 183

    (50) operacion_mat_pos -> RESTA . operacion_mat_con_par
    (103) negativo -> RESTA . numero
    (104) negativo -> RESTA . VARIABLE
    (105) negativo -> RESTA . indexacion
    (106) negativo -> RESTA . ejecutar_funcion
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT

    VARIABLE        shift and go to state 86
    LPARENT         shift and go to state 92
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91

    operacion_mat_con_par          shift and go to state 250
    numero                         shift and go to state 85
    indexacion                     shift and go to state 87
    ejecutar_funcion               shift and go to state 88

state 184

    (31) operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .

    COMA            reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    $end            reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    IGUAL           reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    NO_IGUAL        reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    MAYOR_QUE       reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    MENOR_QUE       reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    MENOR_O_IGUAL   reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    MAYOR_O_IGUAL   reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    RPARENT         reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    AS              reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    DOSPUNTOS       reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    LLAVER          reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    CORCH_IZQ       reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    AND             reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    OR              reduce using rule 31 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)


state 185

    (151) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (185) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (133) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (173) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 252
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 251
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39

    operacion_comp_sin_par         shift and go to state 73
    valor                          shift and go to state 236
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_log_sin_par          shift and go to state 70
    operacion_mat_sin_par          shift and go to state 71
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 140
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 141
    negativo                       shift and go to state 142
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 55
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 54
    numero                         shift and go to state 143
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_comp                 shift and go to state 45
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 46
    operacion_comp_con_par         shift and go to state 253
    operacion_log_con_par          shift and go to state 241
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_mat_con_par          shift and go to state 40

state 186

    (173) operacion_log_con_par -> LPARENT operacion_log_sin_par . RPARENT

    RPARENT         shift and go to state 145


state 187

    (170) operacion_log_sin_par -> operandos_log . operadores_log operacion_log
    (171) operacion_log_sin_par -> operandos_log .
    (157) operadores_log -> . AND
    (158) operadores_log -> . OR

    RPARENT         reduce using rule 171 (operacion_log_sin_par -> operandos_log .)
    AND             shift and go to state 96
    OR              shift and go to state 97

    operadores_log                 shift and go to state 98

state 188

    (164) operandos_log -> operacion_log_not .

    AND             reduce using rule 164 (operandos_log -> operacion_log_not .)
    OR              reduce using rule 164 (operandos_log -> operacion_log_not .)
    RPARENT         reduce using rule 164 (operandos_log -> operacion_log_not .)


state 189

    (131) operando_comp_eq -> operacion_log_con_par .

    IGUAL           reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    NO_IGUAL        reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    AND             reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    OR              reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    COMA            reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    $end            reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    RPARENT         reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    AS              reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    DOSPUNTOS       reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    LLAVER          reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    CORCH_IZQ       reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)


state 190

    (144) operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .

    AND             reduce using rule 144 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    OR              reduce using rule 144 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    COMA            reduce using rule 144 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    $end            reduce using rule 144 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    RPARENT         reduce using rule 144 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    AS              reduce using rule 144 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    DOSPUNTOS       reduce using rule 144 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    LLAVER          reduce using rule 144 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    CORCH_IZQ       reduce using rule 144 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)


state 191

    (122) operando_comp_eq -> numero .
    (11) operando_mat -> numero .
    (95) operando_comp_orden -> numero .

  ! reduce/reduce conflict for AND resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for OR resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for COMA resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for $end resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for RPARENT resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for LLAVER resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    AND             reduce using rule 11 (operando_mat -> numero .)
    OR              reduce using rule 11 (operando_mat -> numero .)
    COMA            reduce using rule 11 (operando_mat -> numero .)
    $end            reduce using rule 11 (operando_mat -> numero .)
    RPARENT         reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    DOSPUNTOS       reduce using rule 11 (operando_mat -> numero .)
    LLAVER          reduce using rule 11 (operando_mat -> numero .)
    CORCH_IZQ       reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)

  ! AND             [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! OR              [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! COMA            [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! $end            [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! RPARENT         [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! AS              [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! DOSPUNTOS       [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! LLAVER          [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! CORCH_IZQ       [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]


state 192

    (123) operando_comp_eq -> bool .

    AND             reduce using rule 123 (operando_comp_eq -> bool .)
    OR              reduce using rule 123 (operando_comp_eq -> bool .)
    COMA            reduce using rule 123 (operando_comp_eq -> bool .)
    $end            reduce using rule 123 (operando_comp_eq -> bool .)
    RPARENT         reduce using rule 123 (operando_comp_eq -> bool .)
    AS              reduce using rule 123 (operando_comp_eq -> bool .)
    DOSPUNTOS       reduce using rule 123 (operando_comp_eq -> bool .)
    LLAVER          reduce using rule 123 (operando_comp_eq -> bool .)
    CORCH_IZQ       reduce using rule 123 (operando_comp_eq -> bool .)


state 193

    (126) operando_comp_eq -> operacion_comp_orden .

    AND             reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)
    OR              reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)
    COMA            reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)
    $end            reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)
    RPARENT         reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)
    AS              reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)
    DOSPUNTOS       reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)
    LLAVER          reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)
    CORCH_IZQ       reduce using rule 126 (operando_comp_eq -> operacion_comp_orden .)


state 194

    (127) operando_comp_eq -> operacion_comp_con_par .

    AND             reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    OR              reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    COMA            reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    $end            reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    RPARENT         reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    AS              reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    DOSPUNTOS       reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    LLAVER          reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    CORCH_IZQ       reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)


state 195

    (128) operando_comp_eq -> indexacion .
    (13) operando_mat -> indexacion .
    (97) operando_comp_orden -> indexacion .

  ! reduce/reduce conflict for AND resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for OR resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for COMA resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for $end resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 13 (operando_mat -> indexacion .)
    OR              reduce using rule 13 (operando_mat -> indexacion .)
    COMA            reduce using rule 13 (operando_mat -> indexacion .)
    $end            reduce using rule 13 (operando_mat -> indexacion .)
    RPARENT         reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    DOSPUNTOS       reduce using rule 13 (operando_mat -> indexacion .)
    LLAVER          reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_IZQ       reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)

  ! AND             [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! OR              [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! COMA            [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! $end            [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! RPARENT         [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! AS              [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! DOSPUNTOS       [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! LLAVER          [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! CORCH_IZQ       [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]


state 196

    (129) operando_comp_eq -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (98) operando_comp_orden -> ejecutar_funcion .

  ! reduce/reduce conflict for AND resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for OR resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for COMA resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for $end resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    OR              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    COMA            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    $end            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RPARENT         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    LLAVER          reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! AND             [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! OR              [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! COMA            [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! $end            [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! RPARENT         [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! DOSPUNTOS       [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! LLAVER          [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! CORCH_IZQ       [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]


state 197

    (130) operando_comp_eq -> VARIABLE .
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (12) operando_mat -> VARIABLE .
    (96) operando_comp_orden -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for LLAVER resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58
    AND             reduce using rule 12 (operando_mat -> VARIABLE .)
    OR              reduce using rule 12 (operando_mat -> VARIABLE .)
    COMA            reduce using rule 12 (operando_mat -> VARIABLE .)
    $end            reduce using rule 12 (operando_mat -> VARIABLE .)
    RPARENT         reduce using rule 12 (operando_mat -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    DOSPUNTOS       reduce using rule 12 (operando_mat -> VARIABLE .)
    LLAVER          reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! AND             [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! OR              [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! COMA            [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! $end            [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! AS              [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! DOSPUNTOS       [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! LLAVER          [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]

    operador_mat                   shift and go to state 209

state 198

    (132) operando_comp_eq -> negativo .
    (14) operando_mat -> negativo .
    (99) operando_comp_orden -> negativo .

  ! reduce/reduce conflict for AND resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for OR resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for COMA resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for $end resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for RPARENT resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for AS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for LLAVER resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    AND             reduce using rule 14 (operando_mat -> negativo .)
    OR              reduce using rule 14 (operando_mat -> negativo .)
    COMA            reduce using rule 14 (operando_mat -> negativo .)
    $end            reduce using rule 14 (operando_mat -> negativo .)
    RPARENT         reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)
    DOSPUNTOS       reduce using rule 14 (operando_mat -> negativo .)
    LLAVER          reduce using rule 14 (operando_mat -> negativo .)
    CORCH_IZQ       reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)

  ! AND             [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! OR              [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! COMA            [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! $end            [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! RPARENT         [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! AS              [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! DOSPUNTOS       [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! LLAVER          [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! CORCH_IZQ       [ reduce using rule 132 (operando_comp_eq -> negativo .) ]
  ! MAYOR_QUE       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MENOR_QUE       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 99 (operando_comp_orden -> negativo .) ]


state 199

    (133) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (151) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (173) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (110) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    VARIABLE        shift and go to state 254
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 138
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39
    NEGACION        shift and go to state 47

    valor                          shift and go to state 236
    operacion_comp_sin_par         shift and go to state 73
    operacion_log_sin_par          shift and go to state 70
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_mat_sin_par          shift and go to state 71
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 238
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 239
    negativo                       shift and go to state 142
    casting                        shift and go to state 11
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_comp_orden            shift and go to state 55
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    numero                         shift and go to state 143
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 54
    operacion_comp                 shift and go to state 45
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 46
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 253
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_mat_con_par          shift and go to state 40

state 200

    (102) operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .

    AND             reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    OR              reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    COMA            reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    $end            reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    IGUAL           reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    NO_IGUAL        reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    RPARENT         reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    AS              reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    DOSPUNTOS       reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    LLAVER          reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    CORCH_IZQ       reduce using rule 102 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)


state 201

    (94) operando_comp_orden -> operacion_mat .

    AND             reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    OR              reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    COMA            reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    $end            reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    IGUAL           reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    NO_IGUAL        reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    RPARENT         reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    AS              reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    DOSPUNTOS       reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    LLAVER          reduce using rule 94 (operando_comp_orden -> operacion_mat .)
    CORCH_IZQ       reduce using rule 94 (operando_comp_orden -> operacion_mat .)


state 202

    (95) operando_comp_orden -> numero .
    (11) operando_mat -> numero .

  ! reduce/reduce conflict for AND resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for OR resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for COMA resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for $end resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for RPARENT resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for LLAVER resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    AND             reduce using rule 11 (operando_mat -> numero .)
    OR              reduce using rule 11 (operando_mat -> numero .)
    COMA            reduce using rule 11 (operando_mat -> numero .)
    $end            reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)
    RPARENT         reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    DOSPUNTOS       reduce using rule 11 (operando_mat -> numero .)
    LLAVER          reduce using rule 11 (operando_mat -> numero .)
    CORCH_IZQ       reduce using rule 11 (operando_mat -> numero .)

  ! AND             [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! OR              [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! COMA            [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! $end            [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! IGUAL           [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! RPARENT         [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! AS              [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! DOSPUNTOS       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! LLAVER          [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! CORCH_IZQ       [ reduce using rule 95 (operando_comp_orden -> numero .) ]


state 203

    (96) operando_comp_orden -> VARIABLE .
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (12) operando_mat -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for LLAVER resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58
    AND             reduce using rule 12 (operando_mat -> VARIABLE .)
    OR              reduce using rule 12 (operando_mat -> VARIABLE .)
    COMA            reduce using rule 12 (operando_mat -> VARIABLE .)
    $end            reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    RPARENT         reduce using rule 12 (operando_mat -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    DOSPUNTOS       reduce using rule 12 (operando_mat -> VARIABLE .)
    LLAVER          reduce using rule 12 (operando_mat -> VARIABLE .)
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! AND             [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! OR              [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! COMA            [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! $end            [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! AS              [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! DOSPUNTOS       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! LLAVER          [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 12 (operando_mat -> VARIABLE .) ]

    operador_mat                   shift and go to state 209

state 204

    (97) operando_comp_orden -> indexacion .
    (13) operando_mat -> indexacion .

  ! reduce/reduce conflict for AND resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for OR resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for COMA resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for $end resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 13 (operando_mat -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 13 (operando_mat -> indexacion .)
    OR              reduce using rule 13 (operando_mat -> indexacion .)
    COMA            reduce using rule 13 (operando_mat -> indexacion .)
    $end            reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)
    RPARENT         reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    DOSPUNTOS       reduce using rule 13 (operando_mat -> indexacion .)
    LLAVER          reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_IZQ       reduce using rule 13 (operando_mat -> indexacion .)

  ! AND             [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! OR              [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! COMA            [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! $end            [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! IGUAL           [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! RPARENT         [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! AS              [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! DOSPUNTOS       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! LLAVER          [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! CORCH_IZQ       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]


state 205

    (98) operando_comp_orden -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .

  ! reduce/reduce conflict for AND resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for OR resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for COMA resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for $end resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    OR              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    COMA            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    $end            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RPARENT         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    LLAVER          reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! AND             [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! OR              [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! COMA            [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! $end            [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! RPARENT         [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! DOSPUNTOS       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! LLAVER          [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! CORCH_IZQ       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]


state 206

    (99) operando_comp_orden -> negativo .
    (14) operando_mat -> negativo .

  ! reduce/reduce conflict for AND resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for OR resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for COMA resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for $end resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for RPARENT resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for AS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for LLAVER resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    AND             reduce using rule 14 (operando_mat -> negativo .)
    OR              reduce using rule 14 (operando_mat -> negativo .)
    COMA            reduce using rule 14 (operando_mat -> negativo .)
    $end            reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)
    RPARENT         reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)
    DOSPUNTOS       reduce using rule 14 (operando_mat -> negativo .)
    LLAVER          reduce using rule 14 (operando_mat -> negativo .)
    CORCH_IZQ       reduce using rule 14 (operando_mat -> negativo .)

  ! AND             [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! OR              [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! COMA            [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! $end            [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! IGUAL           [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! NO_IGUAL        [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! RPARENT         [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! AS              [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! DOSPUNTOS       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! LLAVER          [ reduce using rule 99 (operando_comp_orden -> negativo .) ]
  ! CORCH_IZQ       [ reduce using rule 99 (operando_comp_orden -> negativo .) ]


state 207

    (111) indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .

    COMA            reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    $end            reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    AND             reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    OR              reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MAS             reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    RESTA           reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MULTIPL         reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    DIVISION        reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    IGUAL           reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    NO_IGUAL        reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MAYOR_QUE       reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MENOR_QUE       reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MENOR_O_IGUAL   reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MAYOR_O_IGUAL   reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    AS              reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    RPARENT         reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    DOSPUNTOS       reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    LLAVER          reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    CORCH_IZQ       reduce using rule 111 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)


state 208

    (213) ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .

    COMA            reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    $end            reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    AND             reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    OR              reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MAS             reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    RESTA           reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MULTIPL         reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    DIVISION        reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    IGUAL           reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    NO_IGUAL        reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MAYOR_QUE       reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MENOR_QUE       reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MENOR_O_IGUAL   reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MAYOR_O_IGUAL   reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    AS              reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    RPARENT         reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    DOSPUNTOS       reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    LLAVER          reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    CORCH_IZQ       reduce using rule 213 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)


state 209

    (32) operacion_mat_sin_par -> VARIABLE operador_mat . operacion_mat
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    RESTA           shift and go to state 129
    LPARENT         shift and go to state 130
    VARIABLE        shift and go to state 126
    INTEGER         shift and go to state 90
    FLOAT           shift and go to state 91

    operacion_mat                  shift and go to state 128
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 40
    operacion_mat_sin_par          shift and go to state 41
    operando_mat                   shift and go to state 42
    numero                         shift and go to state 131
    indexacion                     shift and go to state 132
    negativo                       shift and go to state 133
    ejecutar_funcion               shift and go to state 134
    casting_num                    shift and go to state 46

state 210

    (212) operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .

    COMA            reduce using rule 212 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    $end            reduce using rule 212 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    AS              reduce using rule 212 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    DOSPUNTOS       reduce using rule 212 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    LLAVER          reduce using rule 212 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    RPARENT         reduce using rule 212 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    CORCH_IZQ       reduce using rule 212 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)


state 211

    (215) casting -> LPARENT . valor AS tipo_dato RPARENT
    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (173) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (185) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (151) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (133) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 75
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 68
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39

    valor                          shift and go to state 69
    operacion_log_sin_par          shift and go to state 70
    operacion_mat_sin_par          shift and go to state 71
    operacion_comp_sin_par         shift and go to state 73
    operacion_comp_orden_sin_par   shift and go to state 74
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 76
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 77
    negativo                       shift and go to state 78
    casting                        shift and go to state 11
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operando_comp_orden            shift and go to state 55
    numero                         shift and go to state 82
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_comp                 shift and go to state 45
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 46
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 54
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 48
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_mat_con_par          shift and go to state 40

state 212

    (25) casting_num -> LPARENT valor . AS INT RPARENT
    (26) casting_num -> LPARENT valor . AS DOUBLE RPARENT

    AS              shift and go to state 255


state 213

    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (87) valor -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (200) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (201) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (212) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (165) operandos_log -> VARIABLE .
    (130) operando_comp_eq -> VARIABLE .
    (96) operando_comp_orden -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58
    AUTOINCREMENTO  shift and go to state 59
    AUTODECREMENTO  shift and go to state 60
    AND             reduce using rule 165 (operandos_log -> VARIABLE .)
    OR              reduce using rule 165 (operandos_log -> VARIABLE .)
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! AS              [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! AS              [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]

    operador_mat                   shift and go to state 150

state 214

    (89) valor -> indexacion .
    (13) operando_mat -> indexacion .
    (168) operandos_log -> indexacion .
    (128) operando_comp_eq -> indexacion .
    (97) operando_comp_orden -> indexacion .

  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 168 (operandos_log -> indexacion .)
    OR              reduce using rule 168 (operandos_log -> indexacion .)

  ! AS              [ reduce using rule 89 (valor -> indexacion .) ]
  ! AS              [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! IGUAL           [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]


state 215

    (91) valor -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (167) operandos_log -> ejecutar_funcion .
    (129) operando_comp_eq -> ejecutar_funcion .
    (98) operando_comp_orden -> ejecutar_funcion .

  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 167 (operandos_log -> ejecutar_funcion .)

  ! AS              [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]


state 216

    (11) operando_mat -> numero .
    (74) datos -> numero .
    (122) operando_comp_eq -> numero .
    (95) operando_comp_orden -> numero .

  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)

  ! AS              [ reduce using rule 74 (datos -> numero .) ]
  ! IGUAL           [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 122 (operando_comp_eq -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 95 (operando_comp_orden -> numero .) ]


state 217

    (72) casting -> CADENA PUNTO TOINT LPARENT . RPARENT

    RPARENT         shift and go to state 256


state 218

    (73) casting -> CADENA PUNTO TODOUBLE LPARENT . RPARENT

    RPARENT         shift and go to state 257


state 219

    (186) read -> STDIN PUNTO READLINESYNC LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 258


state 220

    (215) casting -> LPARENT valor . AS tipo_dato RPARENT
    (133) operando_comp_eq -> LPARENT valor . AS BOOL RPARENT
    (25) casting_num -> LPARENT valor . AS INT RPARENT
    (26) casting_num -> LPARENT valor . AS DOUBLE RPARENT

    AS              shift and go to state 259


state 221

    (215) casting -> LPARENT valor AS tipo_dato . RPARENT

    RPARENT         shift and go to state 260


state 222

    (25) casting_num -> LPARENT valor AS INT . RPARENT
    (116) tipo_dato -> INT .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 261

  ! RPARENT         [ reduce using rule 116 (tipo_dato -> INT .) ]


state 223

    (26) casting_num -> LPARENT valor AS DOUBLE . RPARENT
    (115) tipo_dato -> DOUBLE .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 262

  ! RPARENT         [ reduce using rule 115 (tipo_dato -> DOUBLE .) ]


state 224

    (133) operando_comp_eq -> LPARENT valor AS BOOL . RPARENT
    (114) tipo_dato -> BOOL .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 263

  ! RPARENT         [ reduce using rule 114 (tipo_dato -> BOOL .) ]


state 225

    (117) tipo_dato -> STRING .

    RPARENT         reduce using rule 117 (tipo_dato -> STRING .)


state 226

    (118) tipo_dato -> VOID .

    RPARENT         reduce using rule 118 (tipo_dato -> VOID .)


state 227

    (119) tipo_dato -> LIST .

    RPARENT         reduce using rule 119 (tipo_dato -> LIST .)


state 228

    (120) tipo_dato -> SET .

    RPARENT         reduce using rule 120 (tipo_dato -> SET .)


state 229

    (121) tipo_dato -> MAP .

    RPARENT         reduce using rule 121 (tipo_dato -> MAP .)


state 230

    (185) operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .

    COMA            reduce using rule 185 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    $end            reduce using rule 185 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    AND             reduce using rule 185 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    OR              reduce using rule 185 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    RPARENT         reduce using rule 185 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    AS              reduce using rule 185 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    DOSPUNTOS       reduce using rule 185 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    LLAVER          reduce using rule 185 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    CORCH_IZQ       reduce using rule 185 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)


state 231

    (189) read -> STDOUT PUNTO WRITE LPARENT . CADENA RPARENT PUNTOCOMA

    CADENA          shift and go to state 264


state 232

    (65) operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .

    COMA            reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    $end            reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    IGUAL           reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    NO_IGUAL        reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    MAYOR_QUE       reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    MENOR_QUE       reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    MENOR_O_IGUAL   reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    MAYOR_O_IGUAL   reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    AS              reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    DOSPUNTOS       reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    LLAVER          reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    RPARENT         reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    CORCH_IZQ       reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    AND             reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    OR              reduce using rule 65 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)


state 233

    (81) casting -> INTEGER PUNTO TOSTRING LPARENT . RPARENT

    RPARENT         shift and go to state 265


state 234

    (82) casting -> FLOAT PUNTO TOSTRING LPARENT . RPARENT

    RPARENT         shift and go to state 266


state 235

    (215) casting -> LPARENT . valor AS tipo_dato RPARENT
    (133) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (185) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (173) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 139
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 138
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39

    valor                          shift and go to state 220
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_comp_sin_par         shift and go to state 73
    operacion_log_sin_par          shift and go to state 70
    operacion_mat_sin_par          shift and go to state 71
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 140
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 141
    negativo                       shift and go to state 142
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 55
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    numero                         shift and go to state 143
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 54
    operacion_comp                 shift and go to state 45
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 46
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 253
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_mat_con_par          shift and go to state 40

state 236

    (133) operando_comp_eq -> LPARENT valor . AS BOOL RPARENT
    (25) casting_num -> LPARENT valor . AS INT RPARENT
    (26) casting_num -> LPARENT valor . AS DOUBLE RPARENT

    AS              shift and go to state 267


state 237

    (87) valor -> VARIABLE .
    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (165) operandos_log -> VARIABLE .
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (96) operando_comp_orden -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (130) operando_comp_eq -> VARIABLE .
    (200) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (201) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (212) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 87 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    AND             reduce using rule 165 (operandos_log -> VARIABLE .)
    OR              reduce using rule 165 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 165 (operandos_log -> VARIABLE .)
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    AUTOINCREMENTO  shift and go to state 59
    AUTODECREMENTO  shift and go to state 60
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! AS              [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! AS              [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]

    operador_mat                   shift and go to state 150

state 238

    (89) valor -> indexacion .
    (168) operandos_log -> indexacion .
    (97) operando_comp_orden -> indexacion .
    (13) operando_mat -> indexacion .
    (128) operando_comp_eq -> indexacion .

  ! reduce/reduce conflict for AS resolved using rule 89 (valor -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 168 (operandos_log -> indexacion .)
    OR              reduce using rule 168 (operandos_log -> indexacion .)
    RPARENT         reduce using rule 168 (operandos_log -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)

  ! AS              [ reduce using rule 89 (valor -> indexacion .) ]
  ! AS              [ reduce using rule 168 (operandos_log -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 97 (operando_comp_orden -> indexacion .) ]
  ! IGUAL           [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 128 (operando_comp_eq -> indexacion .) ]


state 239

    (91) valor -> ejecutar_funcion .
    (167) operandos_log -> ejecutar_funcion .
    (98) operando_comp_orden -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (129) operando_comp_eq -> ejecutar_funcion .

  ! reduce/reduce conflict for AS resolved using rule 91 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    RPARENT         reduce using rule 167 (operandos_log -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! AS              [ reduce using rule 91 (valor -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 167 (operandos_log -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 98 (operando_comp_orden -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 129 (operando_comp_eq -> ejecutar_funcion .) ]


state 240

    (166) operandos_log -> bool .
    (76) datos -> bool .
    (123) operando_comp_eq -> bool .

  ! reduce/reduce conflict for AS resolved using rule 76 (datos -> bool .)
    AND             reduce using rule 166 (operandos_log -> bool .)
    OR              reduce using rule 166 (operandos_log -> bool .)
    RPARENT         reduce using rule 166 (operandos_log -> bool .)
    AS              reduce using rule 76 (datos -> bool .)
    IGUAL           reduce using rule 123 (operando_comp_eq -> bool .)
    NO_IGUAL        reduce using rule 123 (operando_comp_eq -> bool .)

  ! AS              [ reduce using rule 166 (operandos_log -> bool .) ]


state 241

    (131) operando_comp_eq -> operacion_log_con_par .
    (190) operacion_log -> operacion_log_con_par .
    (191) operacion_log -> operacion_log_con_par . operadores_log operacion_log
    (157) operadores_log -> . AND
    (158) operadores_log -> . OR

    IGUAL           reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    NO_IGUAL        reduce using rule 131 (operando_comp_eq -> operacion_log_con_par .)
    AS              reduce using rule 190 (operacion_log -> operacion_log_con_par .)
    AND             shift and go to state 96
    OR              shift and go to state 97

    operadores_log                 shift and go to state 95

state 242

    (57) lista -> LIST MENOR_QUE datos MAYOR_QUE . VARIABLE PUNTOCOMA

    VARIABLE        shift and go to state 268


state 243

    (58) lista -> LIST MENOR_QUE STRING MAYOR_QUE . VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA

    VARIABLE        shift and go to state 269


state 244

    (59) lista -> LIST MENOR_QUE INT MAYOR_QUE . VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA

    VARIABLE        shift and go to state 270


state 245

    (60) lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE . VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA

    VARIABLE        shift and go to state 271


state 246

    (61) lista -> LIST MENOR_QUE BOOL MAYOR_QUE . VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA

    VARIABLE        shift and go to state 272


state 247

    (8) clave_valor -> valor DOSPUNTOS valor .

    COMA            reduce using rule 8 (clave_valor -> valor DOSPUNTOS valor .)
    LLAVER          reduce using rule 8 (clave_valor -> valor DOSPUNTOS valor .)


state 248

    (18) claves_valores -> clave_valor COMA claves_valores .

    LLAVER          reduce using rule 18 (claves_valores -> clave_valor COMA claves_valores .)


state 249

    (8) clave_valor -> valor . DOSPUNTOS valor

    DOSPUNTOS       shift and go to state 180


state 250

    (50) operacion_mat_pos -> RESTA operacion_mat_con_par .

    COMA            reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    $end            reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    IGUAL           reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    NO_IGUAL        reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MAYOR_QUE       reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MENOR_QUE       reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MENOR_O_IGUAL   reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MAYOR_O_IGUAL   reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    AS              reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    DOSPUNTOS       reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    LLAVER          reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    RPARENT         reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    CORCH_IZQ       reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    AND             reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    OR              reduce using rule 50 (operacion_mat_pos -> RESTA operacion_mat_con_par .)


state 251

    (215) casting -> LPARENT . valor AS tipo_dato RPARENT
    (133) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (25) casting_num -> LPARENT . valor AS INT RPARENT
    (26) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (151) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (173) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (185) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (85) valor -> . datos
    (86) valor -> . operaciones
    (87) valor -> . VARIABLE
    (88) valor -> . estructura_dato
    (89) valor -> . indexacion
    (90) valor -> . read
    (91) valor -> . ejecutar_funcion
    (92) valor -> . negativo
    (93) valor -> . casting
    (102) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (145) operacion_comp_sin_par -> . operacion_comp_eq
    (146) operacion_comp_sin_par -> . operacion_comp_orden
    (170) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (171) operacion_log_sin_par -> . operandos_log
    (31) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (32) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (74) datos -> . numero
    (75) datos -> . CADENA
    (76) datos -> . bool
    (207) operaciones -> . operacion_mat
    (208) operaciones -> . operacion_log
    (209) operaciones -> . operacion_unaria
    (210) operaciones -> . operacion_autoasig
    (107) estructura_dato -> . lista
    (108) estructura_dato -> . conjunto
    (109) estructura_dato -> . mapa
    (111) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (186) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA
    (189) read -> . STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA
    (213) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (214) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (103) negativo -> . RESTA numero
    (104) negativo -> . RESTA VARIABLE
    (105) negativo -> . RESTA indexacion
    (106) negativo -> . RESTA ejecutar_funcion
    (72) casting -> . CADENA PUNTO TOINT LPARENT RPARENT
    (73) casting -> . CADENA PUNTO TODOUBLE LPARENT RPARENT
    (81) casting -> . INTEGER PUNTO TOSTRING LPARENT RPARENT
    (82) casting -> . FLOAT PUNTO TOSTRING LPARENT RPARENT
    (215) casting -> . LPARENT valor AS tipo_dato RPARENT
    (94) operando_comp_orden -> . operacion_mat
    (95) operando_comp_orden -> . numero
    (96) operando_comp_orden -> . VARIABLE
    (97) operando_comp_orden -> . indexacion
    (98) operando_comp_orden -> . ejecutar_funcion
    (99) operando_comp_orden -> . negativo
    (144) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (112) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (113) operacion_comp_orden -> . operacion_comp_orden_con_par
    (163) operandos_log -> . operacion_comp
    (164) operandos_log -> . operacion_log_not
    (165) operandos_log -> . VARIABLE
    (166) operandos_log -> . bool
    (167) operandos_log -> . ejecutar_funcion
    (168) operandos_log -> . indexacion
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) numero -> . INTEGER
    (63) numero -> . FLOAT
    (67) bool -> . TRUE
    (68) bool -> . FALSE
    (69) operacion_mat -> . operacion_mat_pos
    (70) operacion_mat -> . operacion_mat_neg
    (190) operacion_log -> . operacion_log_con_par
    (191) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (192) operacion_log -> . operacion_log_sin_par
    (193) operacion_log -> . operacion_log_not
    (194) operacion_log -> . operandos_log
    (200) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (201) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (202) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (203) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (212) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (57) lista -> . LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA
    (58) lista -> . LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA
    (59) lista -> . LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (60) lista -> . LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA
    (61) lista -> . LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (83) conjunto -> . LLAVEL valores LLAVER
    (84) conjunto -> . LLAVEL LLAVER
    (100) mapa -> . LLAVEL claves_valores LLAVER
    (101) mapa -> . LLAVEL LLAVER
    (122) operando_comp_eq -> . numero
    (123) operando_comp_eq -> . bool
    (124) operando_comp_eq -> . CADENA
    (125) operando_comp_eq -> . operacion_mat
    (126) operando_comp_eq -> . operacion_comp_orden
    (127) operando_comp_eq -> . operacion_comp_con_par
    (128) operando_comp_eq -> . indexacion
    (129) operando_comp_eq -> . ejecutar_funcion
    (130) operando_comp_eq -> . VARIABLE
    (131) operando_comp_eq -> . operacion_log_con_par
    (132) operando_comp_eq -> . negativo
    (133) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (110) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (153) operacion_comp -> . operacion_comp_con_par
    (154) operacion_comp -> . operacion_comp_sin_par
    (187) operacion_log_not -> . operacion_log_not_sin_par
    (188) operacion_log_not -> . operacion_log_not_con_par
    (25) casting_num -> . LPARENT valor AS INT RPARENT
    (26) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (49) operacion_mat_pos -> . operacion_mat_con_par
    (50) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (51) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (52) operacion_mat_pos -> . operacion_mat_sin_par
    (53) operacion_mat_pos -> . operando_mat
    (64) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (65) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (173) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (151) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (182) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (185) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (45) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 139
    CADENA          shift and go to state 13
    STDIN           shift and go to state 22
    STDOUT          shift and go to state 24
    RESTA           shift and go to state 25
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 138
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    LIST            shift and go to state 38
    LLAVEL          shift and go to state 39

    valor                          shift and go to state 220
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_comp_sin_par         shift and go to state 73
    operacion_log_sin_par          shift and go to state 70
    operacion_mat_sin_par          shift and go to state 71
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 140
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 141
    negativo                       shift and go to state 142
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 55
    operacion_comp_eq              shift and go to state 50
    operacion_comp_orden           shift and go to state 51
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    numero                         shift and go to state 143
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operando_comp_eq               shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 54
    operacion_comp                 shift and go to state 45
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 46
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 253
    operacion_log_not_sin_par      shift and go to state 43
    operacion_log_not_con_par      shift and go to state 44
    operacion_mat_con_par          shift and go to state 40

state 252

    (87) valor -> VARIABLE .
    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (96) operando_comp_orden -> VARIABLE .
    (165) operandos_log -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (130) operando_comp_eq -> VARIABLE .
    (200) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (201) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (212) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 87 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58
    AND             reduce using rule 165 (operandos_log -> VARIABLE .)
    OR              reduce using rule 165 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 165 (operandos_log -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    AUTOINCREMENTO  shift and go to state 59
    AUTODECREMENTO  shift and go to state 60
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! AS              [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! AS              [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]

    operador_mat                   shift and go to state 150

state 253

    (127) operando_comp_eq -> operacion_comp_con_par .
    (153) operacion_comp -> operacion_comp_con_par .

    IGUAL           reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    NO_IGUAL        reduce using rule 127 (operando_comp_eq -> operacion_comp_con_par .)
    AND             reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    OR              reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    RPARENT         reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)
    AS              reduce using rule 153 (operacion_comp -> operacion_comp_con_par .)


state 254

    (87) valor -> VARIABLE .
    (32) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (111) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (213) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (214) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (165) operandos_log -> VARIABLE .
    (96) operando_comp_orden -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (200) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (201) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (212) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (130) operando_comp_eq -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 87 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 57
    LPARENT         shift and go to state 58
    AND             reduce using rule 165 (operandos_log -> VARIABLE .)
    OR              reduce using rule 165 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 165 (operandos_log -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    AUTOINCREMENTO  shift and go to state 59
    AUTODECREMENTO  shift and go to state 60
    MAS             shift and go to state 62
    RESTA           shift and go to state 63
    MULTIPL         shift and go to state 64
    DIVISION        shift and go to state 65

  ! AS              [ reduce using rule 87 (valor -> VARIABLE .) ]
  ! AS              [ reduce using rule 165 (operandos_log -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 96 (operando_comp_orden -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 130 (operando_comp_eq -> VARIABLE .) ]

    operador_mat                   shift and go to state 150

state 255

    (25) casting_num -> LPARENT valor AS . INT RPARENT
    (26) casting_num -> LPARENT valor AS . DOUBLE RPARENT

    INT             shift and go to state 273
    DOUBLE          shift and go to state 274


state 256

    (72) casting -> CADENA PUNTO TOINT LPARENT RPARENT .

    COMA            reduce using rule 72 (casting -> CADENA PUNTO TOINT LPARENT RPARENT .)
    $end            reduce using rule 72 (casting -> CADENA PUNTO TOINT LPARENT RPARENT .)
    AS              reduce using rule 72 (casting -> CADENA PUNTO TOINT LPARENT RPARENT .)
    DOSPUNTOS       reduce using rule 72 (casting -> CADENA PUNTO TOINT LPARENT RPARENT .)
    LLAVER          reduce using rule 72 (casting -> CADENA PUNTO TOINT LPARENT RPARENT .)
    RPARENT         reduce using rule 72 (casting -> CADENA PUNTO TOINT LPARENT RPARENT .)
    CORCH_IZQ       reduce using rule 72 (casting -> CADENA PUNTO TOINT LPARENT RPARENT .)


state 257

    (73) casting -> CADENA PUNTO TODOUBLE LPARENT RPARENT .

    COMA            reduce using rule 73 (casting -> CADENA PUNTO TODOUBLE LPARENT RPARENT .)
    $end            reduce using rule 73 (casting -> CADENA PUNTO TODOUBLE LPARENT RPARENT .)
    AS              reduce using rule 73 (casting -> CADENA PUNTO TODOUBLE LPARENT RPARENT .)
    DOSPUNTOS       reduce using rule 73 (casting -> CADENA PUNTO TODOUBLE LPARENT RPARENT .)
    LLAVER          reduce using rule 73 (casting -> CADENA PUNTO TODOUBLE LPARENT RPARENT .)
    RPARENT         reduce using rule 73 (casting -> CADENA PUNTO TODOUBLE LPARENT RPARENT .)
    CORCH_IZQ       reduce using rule 73 (casting -> CADENA PUNTO TODOUBLE LPARENT RPARENT .)


state 258

    (186) read -> STDIN PUNTO READLINESYNC LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 275


state 259

    (215) casting -> LPARENT valor AS . tipo_dato RPARENT
    (133) operando_comp_eq -> LPARENT valor AS . BOOL RPARENT
    (25) casting_num -> LPARENT valor AS . INT RPARENT
    (26) casting_num -> LPARENT valor AS . DOUBLE RPARENT
    (114) tipo_dato -> . BOOL
    (115) tipo_dato -> . DOUBLE
    (116) tipo_dato -> . INT
    (117) tipo_dato -> . STRING
    (118) tipo_dato -> . VOID
    (119) tipo_dato -> . LIST
    (120) tipo_dato -> . SET
    (121) tipo_dato -> . MAP

    BOOL            shift and go to state 224
    INT             shift and go to state 222
    DOUBLE          shift and go to state 223
    STRING          shift and go to state 225
    VOID            shift and go to state 226
    LIST            shift and go to state 227
    SET             shift and go to state 228
    MAP             shift and go to state 229

    tipo_dato                      shift and go to state 221

state 260

    (215) casting -> LPARENT valor AS tipo_dato RPARENT .

    COMA            reduce using rule 215 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    $end            reduce using rule 215 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    AS              reduce using rule 215 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    DOSPUNTOS       reduce using rule 215 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    LLAVER          reduce using rule 215 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    RPARENT         reduce using rule 215 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    CORCH_IZQ       reduce using rule 215 (casting -> LPARENT valor AS tipo_dato RPARENT .)


state 261

    (25) casting_num -> LPARENT valor AS INT RPARENT .

    MAS             reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    RESTA           reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    MULTIPL         reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    DIVISION        reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    COMA            reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    $end            reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    IGUAL           reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    NO_IGUAL        reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    MAYOR_QUE       reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    MENOR_QUE       reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    MENOR_O_IGUAL   reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    MAYOR_O_IGUAL   reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    AS              reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    DOSPUNTOS       reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    LLAVER          reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    RPARENT         reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    CORCH_IZQ       reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    AND             reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)
    OR              reduce using rule 25 (casting_num -> LPARENT valor AS INT RPARENT .)


state 262

    (26) casting_num -> LPARENT valor AS DOUBLE RPARENT .

    MAS             reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    RESTA           reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    MULTIPL         reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    DIVISION        reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    COMA            reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    $end            reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    IGUAL           reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    NO_IGUAL        reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    MAYOR_QUE       reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    MENOR_QUE       reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    MENOR_O_IGUAL   reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    MAYOR_O_IGUAL   reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    AS              reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    DOSPUNTOS       reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    LLAVER          reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    RPARENT         reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    CORCH_IZQ       reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    AND             reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    OR              reduce using rule 26 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)


state 263

    (133) operando_comp_eq -> LPARENT valor AS BOOL RPARENT .

    IGUAL           reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    NO_IGUAL        reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    AND             reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    OR              reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    COMA            reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    $end            reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    RPARENT         reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    AS              reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    DOSPUNTOS       reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    LLAVER          reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    CORCH_IZQ       reduce using rule 133 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)


state 264

    (189) read -> STDOUT PUNTO WRITE LPARENT CADENA . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 276


state 265

    (81) casting -> INTEGER PUNTO TOSTRING LPARENT RPARENT .

    COMA            reduce using rule 81 (casting -> INTEGER PUNTO TOSTRING LPARENT RPARENT .)
    $end            reduce using rule 81 (casting -> INTEGER PUNTO TOSTRING LPARENT RPARENT .)
    AS              reduce using rule 81 (casting -> INTEGER PUNTO TOSTRING LPARENT RPARENT .)
    DOSPUNTOS       reduce using rule 81 (casting -> INTEGER PUNTO TOSTRING LPARENT RPARENT .)
    LLAVER          reduce using rule 81 (casting -> INTEGER PUNTO TOSTRING LPARENT RPARENT .)
    RPARENT         reduce using rule 81 (casting -> INTEGER PUNTO TOSTRING LPARENT RPARENT .)
    CORCH_IZQ       reduce using rule 81 (casting -> INTEGER PUNTO TOSTRING LPARENT RPARENT .)


state 266

    (82) casting -> FLOAT PUNTO TOSTRING LPARENT RPARENT .

    COMA            reduce using rule 82 (casting -> FLOAT PUNTO TOSTRING LPARENT RPARENT .)
    $end            reduce using rule 82 (casting -> FLOAT PUNTO TOSTRING LPARENT RPARENT .)
    AS              reduce using rule 82 (casting -> FLOAT PUNTO TOSTRING LPARENT RPARENT .)
    DOSPUNTOS       reduce using rule 82 (casting -> FLOAT PUNTO TOSTRING LPARENT RPARENT .)
    LLAVER          reduce using rule 82 (casting -> FLOAT PUNTO TOSTRING LPARENT RPARENT .)
    RPARENT         reduce using rule 82 (casting -> FLOAT PUNTO TOSTRING LPARENT RPARENT .)
    CORCH_IZQ       reduce using rule 82 (casting -> FLOAT PUNTO TOSTRING LPARENT RPARENT .)


state 267

    (133) operando_comp_eq -> LPARENT valor AS . BOOL RPARENT
    (25) casting_num -> LPARENT valor AS . INT RPARENT
    (26) casting_num -> LPARENT valor AS . DOUBLE RPARENT

    BOOL            shift and go to state 277
    INT             shift and go to state 273
    DOUBLE          shift and go to state 274


state 268

    (57) lista -> LIST MENOR_QUE datos MAYOR_QUE VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 278


state 269

    (58) lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE . IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA

    IGUAL           shift and go to state 279


state 270

    (59) lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE . IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA

    IGUAL           shift and go to state 280


state 271

    (60) lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE . IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA

    IGUAL           shift and go to state 281


state 272

    (61) lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE . IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA

    IGUAL           shift and go to state 282


state 273

    (25) casting_num -> LPARENT valor AS INT . RPARENT

    RPARENT         shift and go to state 261


state 274

    (26) casting_num -> LPARENT valor AS DOUBLE . RPARENT

    RPARENT         shift and go to state 262


state 275

    (186) read -> STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA .

    COMA            reduce using rule 186 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA .)
    $end            reduce using rule 186 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA .)
    AS              reduce using rule 186 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA .)
    DOSPUNTOS       reduce using rule 186 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA .)
    LLAVER          reduce using rule 186 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA .)
    RPARENT         reduce using rule 186 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA .)
    CORCH_IZQ       reduce using rule 186 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT PUNTOCOMA .)


state 276

    (189) read -> STDOUT PUNTO WRITE LPARENT CADENA RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 283


state 277

    (133) operando_comp_eq -> LPARENT valor AS BOOL . RPARENT

    RPARENT         shift and go to state 263


state 278

    (57) lista -> LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA .

    COMA            reduce using rule 57 (lista -> LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA .)
    $end            reduce using rule 57 (lista -> LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA .)
    AS              reduce using rule 57 (lista -> LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA .)
    DOSPUNTOS       reduce using rule 57 (lista -> LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA .)
    LLAVER          reduce using rule 57 (lista -> LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA .)
    RPARENT         reduce using rule 57 (lista -> LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA .)
    CORCH_IZQ       reduce using rule 57 (lista -> LIST MENOR_QUE datos MAYOR_QUE VARIABLE PUNTOCOMA .)


state 279

    (58) lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL . CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA

    CORCH_IZQ       shift and go to state 284


state 280

    (59) lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL . CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA

    CORCH_IZQ       shift and go to state 285


state 281

    (60) lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL . CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA

    CORCH_IZQ       shift and go to state 286


state 282

    (61) lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL . CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA

    CORCH_IZQ       shift and go to state 287


state 283

    (189) read -> STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA .

    COMA            reduce using rule 189 (read -> STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA .)
    $end            reduce using rule 189 (read -> STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA .)
    AS              reduce using rule 189 (read -> STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA .)
    DOSPUNTOS       reduce using rule 189 (read -> STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA .)
    LLAVER          reduce using rule 189 (read -> STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA .)
    RPARENT         reduce using rule 189 (read -> STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA .)
    CORCH_IZQ       reduce using rule 189 (read -> STDOUT PUNTO WRITE LPARENT CADENA RPARENT PUNTOCOMA .)


state 284

    (58) lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ . cuerpo_lista_string CORCH_DER PUNTOCOMA
    (22) cuerpo_lista_string -> . CADENA
    (23) cuerpo_lista_string -> . CADENA COMA CADENA
    (24) cuerpo_lista_string -> . CADENA COMA CADENA COMA cuerpo_lista_string

    CADENA          shift and go to state 289

    cuerpo_lista_string            shift and go to state 288

state 285

    (59) lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ . cuerpo_lista_integer CORCH_DER PUNTOCOMA
    (28) cuerpo_lista_integer -> . INTEGER
    (29) cuerpo_lista_integer -> . INTEGER COMA INTEGER
    (30) cuerpo_lista_integer -> . INTEGER COMA INTEGER COMA cuerpo_lista_integer

    INTEGER         shift and go to state 291

    cuerpo_lista_integer           shift and go to state 290

state 286

    (60) lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ . cuerpo_lista_double CORCH_DER PUNTOCOMA
    (42) cuerpo_lista_double -> . FLOAT
    (43) cuerpo_lista_double -> . FLOAT COMA FLOAT
    (44) cuerpo_lista_double -> . FLOAT COMA FLOAT COMA cuerpo_lista_double

    FLOAT           shift and go to state 293

    cuerpo_lista_double            shift and go to state 292

state 287

    (61) lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ . cuerpo_lista_boolean CORCH_DER PUNTOCOMA
    (46) cuerpo_lista_boolean -> . bool
    (47) cuerpo_lista_boolean -> . bool COMA bool
    (48) cuerpo_lista_boolean -> . bool COMA bool COMA cuerpo_lista_boolean
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    cuerpo_lista_boolean           shift and go to state 294
    bool                           shift and go to state 295

state 288

    (58) lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string . CORCH_DER PUNTOCOMA

    CORCH_DER       shift and go to state 296


state 289

    (22) cuerpo_lista_string -> CADENA .
    (23) cuerpo_lista_string -> CADENA . COMA CADENA
    (24) cuerpo_lista_string -> CADENA . COMA CADENA COMA cuerpo_lista_string

    CORCH_DER       reduce using rule 22 (cuerpo_lista_string -> CADENA .)
    COMA            shift and go to state 297


state 290

    (59) lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer . CORCH_DER PUNTOCOMA

    CORCH_DER       shift and go to state 298


state 291

    (28) cuerpo_lista_integer -> INTEGER .
    (29) cuerpo_lista_integer -> INTEGER . COMA INTEGER
    (30) cuerpo_lista_integer -> INTEGER . COMA INTEGER COMA cuerpo_lista_integer

    CORCH_DER       reduce using rule 28 (cuerpo_lista_integer -> INTEGER .)
    COMA            shift and go to state 299


state 292

    (60) lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double . CORCH_DER PUNTOCOMA

    CORCH_DER       shift and go to state 300


state 293

    (42) cuerpo_lista_double -> FLOAT .
    (43) cuerpo_lista_double -> FLOAT . COMA FLOAT
    (44) cuerpo_lista_double -> FLOAT . COMA FLOAT COMA cuerpo_lista_double

    CORCH_DER       reduce using rule 42 (cuerpo_lista_double -> FLOAT .)
    COMA            shift and go to state 301


state 294

    (61) lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean . CORCH_DER PUNTOCOMA

    CORCH_DER       shift and go to state 302


state 295

    (46) cuerpo_lista_boolean -> bool .
    (47) cuerpo_lista_boolean -> bool . COMA bool
    (48) cuerpo_lista_boolean -> bool . COMA bool COMA cuerpo_lista_boolean

    CORCH_DER       reduce using rule 46 (cuerpo_lista_boolean -> bool .)
    COMA            shift and go to state 303


state 296

    (58) lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 304


state 297

    (23) cuerpo_lista_string -> CADENA COMA . CADENA
    (24) cuerpo_lista_string -> CADENA COMA . CADENA COMA cuerpo_lista_string

    CADENA          shift and go to state 305


state 298

    (59) lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 306


state 299

    (29) cuerpo_lista_integer -> INTEGER COMA . INTEGER
    (30) cuerpo_lista_integer -> INTEGER COMA . INTEGER COMA cuerpo_lista_integer

    INTEGER         shift and go to state 307


state 300

    (60) lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 308


state 301

    (43) cuerpo_lista_double -> FLOAT COMA . FLOAT
    (44) cuerpo_lista_double -> FLOAT COMA . FLOAT COMA cuerpo_lista_double

    FLOAT           shift and go to state 309


state 302

    (61) lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 310


state 303

    (47) cuerpo_lista_boolean -> bool COMA . bool
    (48) cuerpo_lista_boolean -> bool COMA . bool COMA cuerpo_lista_boolean
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    bool                           shift and go to state 311

state 304

    (58) lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA .

    COMA            reduce using rule 58 (lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA .)
    $end            reduce using rule 58 (lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA .)
    AS              reduce using rule 58 (lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA .)
    DOSPUNTOS       reduce using rule 58 (lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA .)
    LLAVER          reduce using rule 58 (lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA .)
    RPARENT         reduce using rule 58 (lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA .)
    CORCH_IZQ       reduce using rule 58 (lista -> LIST MENOR_QUE STRING MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_string CORCH_DER PUNTOCOMA .)


state 305

    (23) cuerpo_lista_string -> CADENA COMA CADENA .
    (24) cuerpo_lista_string -> CADENA COMA CADENA . COMA cuerpo_lista_string

    CORCH_DER       reduce using rule 23 (cuerpo_lista_string -> CADENA COMA CADENA .)
    COMA            shift and go to state 312


state 306

    (59) lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA .

    COMA            reduce using rule 59 (lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA .)
    $end            reduce using rule 59 (lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA .)
    AS              reduce using rule 59 (lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA .)
    DOSPUNTOS       reduce using rule 59 (lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA .)
    LLAVER          reduce using rule 59 (lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA .)
    RPARENT         reduce using rule 59 (lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA .)
    CORCH_IZQ       reduce using rule 59 (lista -> LIST MENOR_QUE INT MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_integer CORCH_DER PUNTOCOMA .)


state 307

    (29) cuerpo_lista_integer -> INTEGER COMA INTEGER .
    (30) cuerpo_lista_integer -> INTEGER COMA INTEGER . COMA cuerpo_lista_integer

    CORCH_DER       reduce using rule 29 (cuerpo_lista_integer -> INTEGER COMA INTEGER .)
    COMA            shift and go to state 313


state 308

    (60) lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA .

    COMA            reduce using rule 60 (lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA .)
    $end            reduce using rule 60 (lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA .)
    AS              reduce using rule 60 (lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA .)
    DOSPUNTOS       reduce using rule 60 (lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA .)
    LLAVER          reduce using rule 60 (lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA .)
    RPARENT         reduce using rule 60 (lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA .)
    CORCH_IZQ       reduce using rule 60 (lista -> LIST MENOR_QUE DOUBLE MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_double CORCH_DER PUNTOCOMA .)


state 309

    (43) cuerpo_lista_double -> FLOAT COMA FLOAT .
    (44) cuerpo_lista_double -> FLOAT COMA FLOAT . COMA cuerpo_lista_double

    CORCH_DER       reduce using rule 43 (cuerpo_lista_double -> FLOAT COMA FLOAT .)
    COMA            shift and go to state 314


state 310

    (61) lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA .

    COMA            reduce using rule 61 (lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA .)
    $end            reduce using rule 61 (lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA .)
    AS              reduce using rule 61 (lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA .)
    DOSPUNTOS       reduce using rule 61 (lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA .)
    LLAVER          reduce using rule 61 (lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA .)
    RPARENT         reduce using rule 61 (lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA .)
    CORCH_IZQ       reduce using rule 61 (lista -> LIST MENOR_QUE BOOL MAYOR_QUE VARIABLE IGUAL CORCH_IZQ cuerpo_lista_boolean CORCH_DER PUNTOCOMA .)


state 311

    (47) cuerpo_lista_boolean -> bool COMA bool .
    (48) cuerpo_lista_boolean -> bool COMA bool . COMA cuerpo_lista_boolean

    CORCH_DER       reduce using rule 47 (cuerpo_lista_boolean -> bool COMA bool .)
    COMA            shift and go to state 315


state 312

    (24) cuerpo_lista_string -> CADENA COMA CADENA COMA . cuerpo_lista_string
    (22) cuerpo_lista_string -> . CADENA
    (23) cuerpo_lista_string -> . CADENA COMA CADENA
    (24) cuerpo_lista_string -> . CADENA COMA CADENA COMA cuerpo_lista_string

    CADENA          shift and go to state 289

    cuerpo_lista_string            shift and go to state 316

state 313

    (30) cuerpo_lista_integer -> INTEGER COMA INTEGER COMA . cuerpo_lista_integer
    (28) cuerpo_lista_integer -> . INTEGER
    (29) cuerpo_lista_integer -> . INTEGER COMA INTEGER
    (30) cuerpo_lista_integer -> . INTEGER COMA INTEGER COMA cuerpo_lista_integer

    INTEGER         shift and go to state 291

    cuerpo_lista_integer           shift and go to state 317

state 314

    (44) cuerpo_lista_double -> FLOAT COMA FLOAT COMA . cuerpo_lista_double
    (42) cuerpo_lista_double -> . FLOAT
    (43) cuerpo_lista_double -> . FLOAT COMA FLOAT
    (44) cuerpo_lista_double -> . FLOAT COMA FLOAT COMA cuerpo_lista_double

    FLOAT           shift and go to state 293

    cuerpo_lista_double            shift and go to state 318

state 315

    (48) cuerpo_lista_boolean -> bool COMA bool COMA . cuerpo_lista_boolean
    (46) cuerpo_lista_boolean -> . bool
    (47) cuerpo_lista_boolean -> . bool COMA bool
    (48) cuerpo_lista_boolean -> . bool COMA bool COMA cuerpo_lista_boolean
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    TRUE            shift and go to state 28
    FALSE           shift and go to state 29

    bool                           shift and go to state 295
    cuerpo_lista_boolean           shift and go to state 319

state 316

    (24) cuerpo_lista_string -> CADENA COMA CADENA COMA cuerpo_lista_string .

    CORCH_DER       reduce using rule 24 (cuerpo_lista_string -> CADENA COMA CADENA COMA cuerpo_lista_string .)


state 317

    (30) cuerpo_lista_integer -> INTEGER COMA INTEGER COMA cuerpo_lista_integer .

    CORCH_DER       reduce using rule 30 (cuerpo_lista_integer -> INTEGER COMA INTEGER COMA cuerpo_lista_integer .)


state 318

    (44) cuerpo_lista_double -> FLOAT COMA FLOAT COMA cuerpo_lista_double .

    CORCH_DER       reduce using rule 44 (cuerpo_lista_double -> FLOAT COMA FLOAT COMA cuerpo_lista_double .)


state 319

    (48) cuerpo_lista_boolean -> bool COMA bool COMA cuerpo_lista_boolean .

    CORCH_DER       reduce using rule 48 (cuerpo_lista_boolean -> bool COMA bool COMA cuerpo_lista_boolean .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CORCH_IZQ in state 5 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 5 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 5 resolved as shift
WARNING: shift/reduce conflict for MAS in state 5 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 5 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 5 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 5 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 73 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 74 resolved as shift
WARNING: shift/reduce conflict for MAS in state 75 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 75 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 75 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 86 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 126 resolved as shift
WARNING: shift/reduce conflict for MAS in state 126 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 126 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 126 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 126 resolved as shift
WARNING: shift/reduce conflict for MAS in state 139 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 139 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 139 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 139 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 147 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 161 resolved as shift
WARNING: shift/reduce conflict for MAS in state 161 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 161 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 161 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 161 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 197 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 197 resolved as shift
WARNING: shift/reduce conflict for MAS in state 197 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 197 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 197 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 197 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 203 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 203 resolved as shift
WARNING: shift/reduce conflict for MAS in state 203 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 203 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 203 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 203 resolved as shift
WARNING: shift/reduce conflict for MAS in state 213 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 213 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 213 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 213 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 222 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 223 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 224 resolved as shift
WARNING: shift/reduce conflict for MAS in state 237 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 237 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 237 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 237 resolved as shift
WARNING: shift/reduce conflict for MAS in state 252 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 252 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 252 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 252 resolved as shift
WARNING: shift/reduce conflict for MAS in state 254 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 254 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 254 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 254 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 5
WARNING: reduce/reduce conflict in state 5 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 5
WARNING: reduce/reduce conflict in state 5 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 5
WARNING: reduce/reduce conflict in state 5 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 5
WARNING: reduce/reduce conflict in state 7 resolved using rule (valor -> indexacion)
WARNING: rejected rule (operandos_log -> indexacion) in state 7
WARNING: reduce/reduce conflict in state 7 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (valor -> indexacion) in state 7
WARNING: reduce/reduce conflict in state 7 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 7
WARNING: reduce/reduce conflict in state 7 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 7
WARNING: reduce/reduce conflict in state 9 resolved using rule (valor -> ejecutar_funcion)
WARNING: rejected rule (operandos_log -> ejecutar_funcion) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (valor -> ejecutar_funcion) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (valor -> negativo) in state 10
WARNING: reduce/reduce conflict in state 10 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_eq -> negativo) in state 10
WARNING: reduce/reduce conflict in state 10 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 10
WARNING: reduce/reduce conflict in state 12 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (datos -> numero) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 12
WARNING: reduce/reduce conflict in state 14 resolved using rule (datos -> bool)
WARNING: rejected rule (operandos_log -> bool) in state 14
WARNING: reduce/reduce conflict in state 34 resolved using rule (operandos_log -> operacion_log_not)
WARNING: rejected rule (operacion_log -> operacion_log_not) in state 34
WARNING: reduce/reduce conflict in state 35 resolved using rule (operacion_log_sin_par -> operandos_log)
WARNING: rejected rule (operacion_log -> operandos_log) in state 35
WARNING: reduce/reduce conflict in state 75 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 76 resolved using rule (valor -> indexacion)
WARNING: rejected rule (operandos_log -> indexacion) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (valor -> indexacion) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 76
WARNING: reduce/reduce conflict in state 77 resolved using rule (valor -> ejecutar_funcion)
WARNING: rejected rule (operandos_log -> ejecutar_funcion) in state 77
WARNING: reduce/reduce conflict in state 77 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (valor -> ejecutar_funcion) in state 77
WARNING: reduce/reduce conflict in state 77 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 77
WARNING: reduce/reduce conflict in state 77 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 77
WARNING: reduce/reduce conflict in state 78 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (valor -> negativo) in state 78
WARNING: reduce/reduce conflict in state 78 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 78
WARNING: reduce/reduce conflict in state 78 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_eq -> negativo) in state 78
WARNING: reduce/reduce conflict in state 79 resolved using rule (operacion_log_sin_par -> operandos_log)
WARNING: rejected rule (operacion_log -> operandos_log) in state 79
WARNING: reduce/reduce conflict in state 82 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (datos -> numero) in state 82
WARNING: reduce/reduce conflict in state 82 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 82
WARNING: reduce/reduce conflict in state 82 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 82
WARNING: reduce/reduce conflict in state 83 resolved using rule (operandos_log -> operacion_log_not)
WARNING: rejected rule (operacion_log -> operacion_log_not) in state 83
WARNING: reduce/reduce conflict in state 89 resolved using rule (operacion_mat_pos -> RESTA operacion_mat_con_par)
WARNING: rejected rule (operacion_mat_neg -> RESTA operacion_mat_con_par) in state 89
WARNING: reduce/reduce conflict in state 103 resolved using rule (conjunto -> LLAVEL LLAVER)
WARNING: rejected rule (mapa -> LLAVEL LLAVER) in state 103
WARNING: reduce/reduce conflict in state 139 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 139
WARNING: reduce/reduce conflict in state 139 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 139
WARNING: reduce/reduce conflict in state 139 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 139
WARNING: reduce/reduce conflict in state 139 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 139
WARNING: reduce/reduce conflict in state 140 resolved using rule (valor -> indexacion)
WARNING: rejected rule (operandos_log -> indexacion) in state 140
WARNING: reduce/reduce conflict in state 140 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (valor -> indexacion) in state 140
WARNING: reduce/reduce conflict in state 140 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 140
WARNING: reduce/reduce conflict in state 140 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 140
WARNING: reduce/reduce conflict in state 141 resolved using rule (valor -> ejecutar_funcion)
WARNING: rejected rule (operandos_log -> ejecutar_funcion) in state 141
WARNING: reduce/reduce conflict in state 141 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (valor -> ejecutar_funcion) in state 141
WARNING: reduce/reduce conflict in state 141 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 141
WARNING: reduce/reduce conflict in state 141 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 141
WARNING: reduce/reduce conflict in state 142 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (valor -> negativo) in state 142
WARNING: reduce/reduce conflict in state 142 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 142
WARNING: reduce/reduce conflict in state 142 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_eq -> negativo) in state 142
WARNING: reduce/reduce conflict in state 143 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (datos -> numero) in state 143
WARNING: reduce/reduce conflict in state 143 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 143
WARNING: reduce/reduce conflict in state 143 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 143
WARNING: reduce/reduce conflict in state 161 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 161
WARNING: reduce/reduce conflict in state 161 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 161
WARNING: reduce/reduce conflict in state 163 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 163
WARNING: reduce/reduce conflict in state 163 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 163
WARNING: reduce/reduce conflict in state 164 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 164
WARNING: reduce/reduce conflict in state 164 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 164
WARNING: reduce/reduce conflict in state 165 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 165
WARNING: reduce/reduce conflict in state 165 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 165
WARNING: reduce/reduce conflict in state 168 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_eq -> negativo) in state 168
WARNING: reduce/reduce conflict in state 168 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 168
WARNING: reduce/reduce conflict in state 191 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 191
WARNING: reduce/reduce conflict in state 191 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 191
WARNING: reduce/reduce conflict in state 195 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 195
WARNING: reduce/reduce conflict in state 195 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 195
WARNING: reduce/reduce conflict in state 196 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 196
WARNING: reduce/reduce conflict in state 197 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 197
WARNING: reduce/reduce conflict in state 197 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 197
WARNING: reduce/reduce conflict in state 198 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_eq -> negativo) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 198
WARNING: reduce/reduce conflict in state 202 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 202
WARNING: reduce/reduce conflict in state 203 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 203
WARNING: reduce/reduce conflict in state 204 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 204
WARNING: reduce/reduce conflict in state 205 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 205
WARNING: reduce/reduce conflict in state 206 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 206
WARNING: reduce/reduce conflict in state 213 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 213
WARNING: reduce/reduce conflict in state 213 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 213
WARNING: reduce/reduce conflict in state 213 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 213
WARNING: reduce/reduce conflict in state 213 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 213
WARNING: reduce/reduce conflict in state 214 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (valor -> indexacion) in state 214
WARNING: reduce/reduce conflict in state 214 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operandos_log -> indexacion) in state 214
WARNING: reduce/reduce conflict in state 214 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 214
WARNING: reduce/reduce conflict in state 214 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 214
WARNING: reduce/reduce conflict in state 215 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (valor -> ejecutar_funcion) in state 215
WARNING: reduce/reduce conflict in state 215 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operandos_log -> ejecutar_funcion) in state 215
WARNING: reduce/reduce conflict in state 215 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 215
WARNING: reduce/reduce conflict in state 215 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 215
WARNING: reduce/reduce conflict in state 216 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (datos -> numero) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 216
WARNING: reduce/reduce conflict in state 237 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 237
WARNING: reduce/reduce conflict in state 237 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 237
WARNING: reduce/reduce conflict in state 237 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 237
WARNING: reduce/reduce conflict in state 237 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 237
WARNING: reduce/reduce conflict in state 238 resolved using rule (valor -> indexacion)
WARNING: rejected rule (operandos_log -> indexacion) in state 238
WARNING: reduce/reduce conflict in state 238 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (valor -> indexacion) in state 238
WARNING: reduce/reduce conflict in state 238 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 238
WARNING: reduce/reduce conflict in state 238 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 238
WARNING: reduce/reduce conflict in state 239 resolved using rule (valor -> ejecutar_funcion)
WARNING: rejected rule (operandos_log -> ejecutar_funcion) in state 239
WARNING: reduce/reduce conflict in state 239 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (valor -> ejecutar_funcion) in state 239
WARNING: reduce/reduce conflict in state 239 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 239
WARNING: reduce/reduce conflict in state 239 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 239
WARNING: reduce/reduce conflict in state 240 resolved using rule (datos -> bool)
WARNING: rejected rule (operandos_log -> bool) in state 240
WARNING: reduce/reduce conflict in state 252 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 252
WARNING: reduce/reduce conflict in state 252 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 252
WARNING: reduce/reduce conflict in state 252 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 252
WARNING: reduce/reduce conflict in state 252 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 252
WARNING: reduce/reduce conflict in state 254 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 254
WARNING: reduce/reduce conflict in state 254 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 254
WARNING: reduce/reduce conflict in state 254 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 254
WARNING: reduce/reduce conflict in state 254 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 254
WARNING: Rule (valor -> VARIABLE) is never reduced
WARNING: Rule (operando_comp_eq -> VARIABLE) is never reduced
WARNING: Rule (operando_comp_orden -> VARIABLE) is never reduced
WARNING: Rule (valor -> indexacion) is never reduced
WARNING: Rule (operando_comp_eq -> indexacion) is never reduced
WARNING: Rule (operando_comp_orden -> indexacion) is never reduced
WARNING: Rule (valor -> ejecutar_funcion) is never reduced
WARNING: Rule (operando_comp_eq -> ejecutar_funcion) is never reduced
WARNING: Rule (operando_comp_orden -> ejecutar_funcion) is never reduced
WARNING: Rule (valor -> negativo) is never reduced
WARNING: Rule (operando_comp_eq -> negativo) is never reduced
WARNING: Rule (operando_comp_orden -> negativo) is never reduced
WARNING: Rule (operando_comp_eq -> numero) is never reduced
WARNING: Rule (operando_comp_orden -> numero) is never reduced
WARNING: Rule (operacion_log -> operacion_log_not) is never reduced
WARNING: Rule (operacion_log -> operandos_log) is never reduced
WARNING: Rule (operacion_mat_neg -> RESTA operacion_mat_con_par) is never reduced
WARNING: Rule (mapa -> LLAVEL LLAVER) is never reduced
