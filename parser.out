Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ES_IGUAL
    FUNCION
    INCREMENTADOR
    JOIN
    MAIN
    PARSE
    SALTO_LINEA
    STDOUT
    TABULACION
    TODOUBLE
    TOINT
    TOSTRING
    WRITE

Grammar

Rule 0     S' -> valores
Rule 1     valores -> valor
Rule 2     valores -> valor COMA valores
Rule 3     operador_mat -> MAS
Rule 4     operador_mat -> RESTA
Rule 5     operador_mat -> MULTIPL
Rule 6     operador_mat -> DIVISION
Rule 7     all -> simbolos_globales
Rule 8     clave_valor -> valor DOSPUNTOS valor
Rule 9     simbolo_global -> declaracion_asign
Rule 10    simbolo_global -> funcion
Rule 11    operando_mat -> numero
Rule 12    operando_mat -> VARIABLE
Rule 13    operando_mat -> indexacion
Rule 14    operando_mat -> negativo
Rule 15    operando_mat -> ejecutar_funcion
Rule 16    operando_mat -> casting_num
Rule 17    claves_valores -> clave_valor
Rule 18    claves_valores -> clave_valor COMA claves_valores
Rule 19    simbolos_globales -> simbolo_global
Rule 20    simbolos_globales -> simbolo_global simbolos_globales
Rule 21    simbolos_globales -> empty
Rule 22    lista -> CORCH_IZQ valores CORCH_DER
Rule 23    lista -> CORCH_IZQ CORCH_DER
Rule 24    casting_num -> LPARENT valor AS INT RPARENT
Rule 25    casting_num -> LPARENT valor AS DOUBLE RPARENT
Rule 26    empty -> <empty>
Rule 27    operacion_mat_sin_par -> operando_mat operador_mat operacion_mat
Rule 28    operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat
Rule 29    conjunto -> LLAVEL valores LLAVER
Rule 30    conjunto -> LLAVEL LLAVER
Rule 31    sentencia -> declaracion_var
Rule 32    sentencia -> asignacion
Rule 33    sentencia -> declaracion_asign
Rule 34    sentencia -> operaciones PUNTOCOMA
Rule 35    sentencia -> print
Rule 36    sentencia -> estructura_control
Rule 37    sentencia -> return
Rule 38    sentencia -> continue
Rule 39    sentencia -> break
Rule 40    operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT
Rule 41    mapa -> LLAVEL claves_valores LLAVER
Rule 42    mapa -> LLAVEL LLAVER
Rule 43    operacion_mat_pos -> operacion_mat_con_par
Rule 44    operacion_mat_pos -> RESTA operacion_mat_con_par
Rule 45    operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos
Rule 46    operacion_mat_pos -> operacion_mat_sin_par
Rule 47    operacion_mat_pos -> operando_mat
Rule 48    sentencias -> sentencia
Rule 49    sentencias -> sentencia sentencias
Rule 50    sentencias -> empty
Rule 51    estructura_dato -> lista
Rule 52    estructura_dato -> conjunto
Rule 53    estructura_dato -> mapa
Rule 54    numero -> INTEGER
Rule 55    numero -> FLOAT
Rule 56    operacion_mat_neg -> RESTA operacion_mat_con_par
Rule 57    operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos
Rule 58    bool -> TRUE
Rule 59    bool -> FALSE
Rule 60    operacion_mat -> operacion_mat_pos
Rule 61    operacion_mat -> operacion_mat_neg
Rule 62    datos -> numero
Rule 63    datos -> CADENA
Rule 64    datos -> bool
Rule 65    operador_comp_orden -> MAYOR_QUE
Rule 66    operador_comp_orden -> MENOR_QUE
Rule 67    operador_comp_orden -> MENOR_O_IGUAL
Rule 68    operador_comp_orden -> MAYOR_O_IGUAL
Rule 69    valor -> datos
Rule 70    valor -> operaciones
Rule 71    valor -> VARIABLE
Rule 72    valor -> estructura_dato
Rule 73    valor -> indexacion
Rule 74    valor -> read
Rule 75    valor -> ejecutar_funcion
Rule 76    valor -> negativo
Rule 77    valor -> casting
Rule 78    operando_comp_orden -> operacion_mat
Rule 79    operando_comp_orden -> numero
Rule 80    operando_comp_orden -> VARIABLE
Rule 81    operando_comp_orden -> indexacion
Rule 82    operando_comp_orden -> ejecutar_funcion
Rule 83    operando_comp_orden -> negativo
Rule 84    operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden
Rule 85    negativo -> RESTA numero
Rule 86    negativo -> RESTA VARIABLE
Rule 87    negativo -> RESTA indexacion
Rule 88    negativo -> RESTA ejecutar_funcion
Rule 89    operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT
Rule 90    indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ
Rule 91    operacion_comp_orden -> operacion_comp_orden_sin_par
Rule 92    operacion_comp_orden -> operacion_comp_orden_con_par
Rule 93    tipo_dato -> BOOL
Rule 94    tipo_dato -> DOUBLE
Rule 95    tipo_dato -> INT
Rule 96    tipo_dato -> STRING
Rule 97    tipo_dato -> VOID
Rule 98    tipo_dato -> LIST
Rule 99    tipo_dato -> SET
Rule 100   tipo_dato -> MAP
Rule 101   operando_comp_eq -> numero
Rule 102   operando_comp_eq -> bool
Rule 103   operando_comp_eq -> CADENA
Rule 104   operando_comp_eq -> operacion_mat
Rule 105   operando_comp_eq -> operacion_comp_orden
Rule 106   operando_comp_eq -> operacion_comp_con_par
Rule 107   operando_comp_eq -> indexacion
Rule 108   operando_comp_eq -> ejecutar_funcion
Rule 109   operando_comp_eq -> VARIABLE
Rule 110   operando_comp_eq -> operacion_log_con_par
Rule 111   operando_comp_eq -> negativo
Rule 112   operando_comp_eq -> LPARENT valor AS BOOL RPARENT
Rule 113   declaradores -> tipo_dato
Rule 114   declaradores -> FINAL
Rule 115   declaradores -> VAR
Rule 116   declaracion_var -> declaradores VARIABLE PUNTOCOMA
Rule 117   operador_comp_eq -> IGUAL
Rule 118   operador_comp_eq -> NO_IGUAL
Rule 119   declaracion_asign -> tipo_dato VARIABLE IGUAL valor PUNTOCOMA
Rule 120   declaracion_asign -> FINAL VARIABLE IGUAL valor PUNTOCOMA
Rule 121   declaracion_asign -> VAR VARIABLE IGUAL valor PUNTOCOMA
Rule 122   declaracion_asign -> CONST VARIABLE IGUAL valor PUNTOCOMA
Rule 123   operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq
Rule 124   operacion_comp_sin_par -> operacion_comp_eq
Rule 125   operacion_comp_sin_par -> operacion_comp_orden
Rule 126   asignacion -> VARIABLE IGUAL valor PUNTOCOMA
Rule 127   asignacion -> VARIABLE CORCH_IZQ valor CORCH_DER IGUAL valor PUNTOCOMA
Rule 128   asignacion -> operacion_autoasig PUNTOCOMA
Rule 129   asignacion -> declaracion_asign
Rule 130   operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT
Rule 131   print -> PRINT LPARENT valor RPARENT PUNTOCOMA
Rule 132   operacion_comp -> operacion_comp_con_par
Rule 133   operacion_comp -> operacion_comp_sin_par
Rule 134   cuerpo_estruct -> LLAVEL sentencias LLAVER
Rule 135   cuerpo_estruct -> sentencia
Rule 136   operadores_log -> AND
Rule 137   operadores_log -> OR
Rule 138   for -> FOR LPARENT IGUAL operacion_log PUNTOCOMA operaciones RPARENT cuerpo_estruct
Rule 139   for -> FOR LPARENT VARIABLE IN VARIABLE RPARENT cuerpo_estruct
Rule 140   for -> FOR LPARENT tipo_dato VARIABLE IN VARIABLE RPARENT cuerpo_estruct
Rule 141   for -> FOR LPARENT VAR VARIABLE IN VARIABLE RPARENT cuerpo_estruct
Rule 142   operandos_log -> operacion_comp
Rule 143   operandos_log -> operacion_log_not
Rule 144   operandos_log -> VARIABLE
Rule 145   operandos_log -> bool
Rule 146   operandos_log -> ejecutar_funcion
Rule 147   operandos_log -> indexacion
Rule 148   if -> IF LPARENT operacion_log RPARENT cuerpo_estruct
Rule 149   operacion_log_sin_par -> operandos_log operadores_log operacion_log
Rule 150   operacion_log_sin_par -> operandos_log
Rule 151   if_else -> IF LPARENT operacion_log RPARENT cuerpo_estruct ELSE cuerpo_estruct
Rule 152   operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT
Rule 153   while -> WHILE LPARENT operacion_log RPARENT cuerpo_estruct
Rule 154   operando_log_not -> bool
Rule 155   operando_log_not -> operacion_log_con_par
Rule 156   operando_log_not -> VARIABLE
Rule 157   estructura_control -> if
Rule 158   estructura_control -> if_else
Rule 159   estructura_control -> while
Rule 160   estructura_control -> for
Rule 161   operacion_log_not_sin_par -> NEGACION operando_log_not
Rule 162   break -> BREAK PUNTOCOMA
Rule 163   continue -> CONTINUE PUNTOCOMA
Rule 164   operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT
Rule 165   read -> STDIN PUNTO READLINESYNC LPARENT RPARENT
Rule 166   operacion_log_not -> operacion_log_not_sin_par
Rule 167   operacion_log_not -> operacion_log_not_con_par
Rule 168   return -> RETURN valor PUNTOCOMA
Rule 169   return -> RETURN PUNTOCOMA
Rule 170   operacion_log -> operacion_log_con_par
Rule 171   operacion_log -> operacion_log_con_par operadores_log operacion_log
Rule 172   operacion_log -> operacion_log_sin_par
Rule 173   operacion_log -> operacion_log_not
Rule 174   operacion_log -> operandos_log
Rule 175   arg_funcion -> VARIABLE
Rule 176   arg_funcion -> VAR VARIABLE
Rule 177   arg_funcion -> tipo_dato VARIABLE
Rule 178   operacion_unaria -> VARIABLE AUTOINCREMENTO
Rule 179   operacion_unaria -> VARIABLE AUTODECREMENTO
Rule 180   operacion_unaria -> AUTOINCREMENTO VARIABLE
Rule 181   operacion_unaria -> AUTODECREMENTO VARIABLE
Rule 182   args_funcion -> arg_funcion COMA args_funcion
Rule 183   args_funcion -> arg_funcion
Rule 184   args_funcion -> empty
Rule 185   operaciones -> operacion_mat
Rule 186   operaciones -> operacion_log
Rule 187   operaciones -> operacion_unaria
Rule 188   operaciones -> operacion_autoasig
Rule 189   funcion -> tipo_dato VARIABLE LPARENT args_funcion RPARENT LLAVEL sentencias LLAVER
Rule 190   ejecutar_funcion -> VARIABLE LPARENT valores RPARENT
Rule 191   ejecutar_funcion -> VARIABLE LPARENT RPARENT
Rule 192   operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat
Rule 193   casting -> LPARENT valor AS tipo_dato RPARENT

Terminals, with rules where they appear

AND                  : 136
AS                   : 24 25 112 193
AUTODECREMENTO       : 179 181
AUTOINCREMENTO       : 178 180
BOOL                 : 93 112
BREAK                : 162
CADENA               : 63 103
COMA                 : 2 18 182
CONST                : 122
CONTINUE             : 163
CORCH_DER            : 22 23 127
CORCH_IZQ            : 22 23 90 90 127
DIVISION             : 6
DOSPUNTOS            : 8
DOUBLE               : 25 94
ELSE                 : 151
ES_IGUAL             : 
FALSE                : 59
FINAL                : 114 120
FLOAT                : 55
FOR                  : 138 139 140 141
FUNCION              : 
IF                   : 148 151
IGUAL                : 117 119 120 121 122 126 127 138 192
IN                   : 139 140 141
INCREMENTADOR        : 
INT                  : 24 95
INTEGER              : 54
JOIN                 : 
LIST                 : 98
LLAVEL               : 29 30 41 42 134 189
LLAVER               : 29 30 41 42 134 189
LPARENT              : 24 25 40 89 112 130 131 138 139 140 141 148 151 152 153 164 165 189 190 191 193
MAIN                 : 
MAP                  : 100
MAS                  : 3
MAYOR_O_IGUAL        : 68
MAYOR_QUE            : 65
MENOR_O_IGUAL        : 67
MENOR_QUE            : 66
MULTIPL              : 5
NEGACION             : 161 164
NO_IGUAL             : 118
OR                   : 137
PARSE                : 
PRINT                : 131
PUNTO                : 165
PUNTOCOMA            : 34 116 119 120 121 122 126 127 128 131 138 162 163 168 169
READLINESYNC         : 165
RESTA                : 4 44 56 57 85 86 87 88
RETURN               : 168 169
RPARENT              : 24 25 40 89 112 130 131 138 139 140 141 148 151 152 153 164 165 189 190 191 193
SALTO_LINEA          : 
SET                  : 99
STDIN                : 165
STDOUT               : 
STRING               : 96
TABULACION           : 
TODOUBLE             : 
TOINT                : 
TOSTRING             : 
TRUE                 : 58
VAR                  : 115 121 141 176
VARIABLE             : 12 28 71 80 86 90 109 116 119 120 121 122 126 127 139 139 140 140 141 141 144 156 175 176 177 178 179 180 181 189 190 191 192
VOID                 : 97
WHILE                : 153
WRITE                : 
error                : 

Nonterminals, with rules where they appear

all                  : 
arg_funcion          : 182 183
args_funcion         : 182 189
asignacion           : 32
bool                 : 64 102 145 154
break                : 39
casting              : 77
casting_num          : 16
clave_valor          : 17 18
claves_valores       : 18 41
conjunto             : 52
continue             : 38
cuerpo_estruct       : 138 139 140 141 148 151 151 153
datos                : 69
declaracion_asign    : 9 33 129
declaracion_var      : 31
declaradores         : 116
ejecutar_funcion     : 15 75 82 88 108 146
empty                : 21 50 184
estructura_control   : 36
estructura_dato      : 72
for                  : 160
funcion              : 10
if                   : 157
if_else              : 158
indexacion           : 13 73 81 87 107 147
lista                : 51
mapa                 : 53
negativo             : 14 76 83 111
numero               : 11 62 79 85 101
operacion_autoasig   : 128 188
operacion_comp       : 142
operacion_comp_con_par : 106 132
operacion_comp_eq    : 124
operacion_comp_orden : 105 125
operacion_comp_orden_con_par : 92
operacion_comp_orden_sin_par : 89 91
operacion_comp_sin_par : 130 133
operacion_log        : 138 148 149 151 153 171 186
operacion_log_con_par : 110 155 170 171
operacion_log_not    : 143 173
operacion_log_not_con_par : 167
operacion_log_not_sin_par : 166
operacion_log_sin_par : 152 172
operacion_mat        : 27 28 78 104 185 192
operacion_mat_con_par : 43 44 45 56 57
operacion_mat_neg    : 61
operacion_mat_pos    : 45 57 60
operacion_mat_sin_par : 40 46
operacion_unaria     : 187
operaciones          : 34 70 138
operador_comp_eq     : 123
operador_comp_orden  : 84
operador_mat         : 27 28 45 57 192
operadores_log       : 149 171
operando_comp_eq     : 123 123
operando_comp_orden  : 84 84
operando_log_not     : 161 164
operando_mat         : 27 47
operandos_log        : 149 150 174
print                : 35
read                 : 74
return               : 37
sentencia            : 48 49 135
sentencias           : 49 134 189
simbolo_global       : 19 20
simbolos_globales    : 7 20
tipo_dato            : 113 119 140 177 189 193
valor                : 1 2 8 8 24 25 90 112 119 120 121 122 126 127 127 131 168 193
valores              : 2 22 29 190 0
while                : 159

Parsing method: LALR

state 0

    (0) S' -> . valores
    (1) valores -> . valor
    (2) valores -> . valor COMA valores
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 24
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    valores                        shift and go to state 1
    valor                          shift and go to state 2
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operando_comp_orden            shift and go to state 54

state 1

    (0) S' -> valores .



state 2

    (1) valores -> valor .
    (2) valores -> valor . COMA valores

    $end            reduce using rule 1 (valores -> valor .)
    CORCH_DER       reduce using rule 1 (valores -> valor .)
    LLAVER          reduce using rule 1 (valores -> valor .)
    RPARENT         reduce using rule 1 (valores -> valor .)
    COMA            shift and go to state 55


state 3

    (69) valor -> datos .

    COMA            reduce using rule 69 (valor -> datos .)
    $end            reduce using rule 69 (valor -> datos .)
    CORCH_DER       reduce using rule 69 (valor -> datos .)
    AS              reduce using rule 69 (valor -> datos .)
    DOSPUNTOS       reduce using rule 69 (valor -> datos .)
    LLAVER          reduce using rule 69 (valor -> datos .)
    RPARENT         reduce using rule 69 (valor -> datos .)
    CORCH_IZQ       reduce using rule 69 (valor -> datos .)


state 4

    (70) valor -> operaciones .

    COMA            reduce using rule 70 (valor -> operaciones .)
    $end            reduce using rule 70 (valor -> operaciones .)
    CORCH_DER       reduce using rule 70 (valor -> operaciones .)
    AS              reduce using rule 70 (valor -> operaciones .)
    DOSPUNTOS       reduce using rule 70 (valor -> operaciones .)
    LLAVER          reduce using rule 70 (valor -> operaciones .)
    RPARENT         reduce using rule 70 (valor -> operaciones .)
    CORCH_IZQ       reduce using rule 70 (valor -> operaciones .)


state 5

    (71) valor -> VARIABLE .
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (178) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (179) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (192) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (144) operandos_log -> VARIABLE .
    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (12) operando_mat -> VARIABLE .
    (109) operando_comp_eq -> VARIABLE .
    (80) operando_comp_orden -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for COMA resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for LLAVER resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 71 (valor -> VARIABLE .)
  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for AS resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for LLAVER resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57
    AUTOINCREMENTO  shift and go to state 58
    AUTODECREMENTO  shift and go to state 59
    AND             reduce using rule 144 (operandos_log -> VARIABLE .)
    OR              reduce using rule 144 (operandos_log -> VARIABLE .)
    COMA            reduce using rule 12 (operando_mat -> VARIABLE .)
    $end            reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    CORCH_DER       reduce using rule 12 (operando_mat -> VARIABLE .)
    DOSPUNTOS       reduce using rule 12 (operando_mat -> VARIABLE .)
    LLAVER          reduce using rule 12 (operando_mat -> VARIABLE .)
    RPARENT         reduce using rule 12 (operando_mat -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! COMA            [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! $end            [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! CORCH_DER       [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! DOSPUNTOS       [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! LLAVER          [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! AS              [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! COMA            [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! $end            [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! CORCH_DER       [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! DOSPUNTOS       [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! LLAVER          [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! AS              [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]

    operador_mat                   shift and go to state 60

state 6

    (72) valor -> estructura_dato .

    COMA            reduce using rule 72 (valor -> estructura_dato .)
    $end            reduce using rule 72 (valor -> estructura_dato .)
    CORCH_DER       reduce using rule 72 (valor -> estructura_dato .)
    AS              reduce using rule 72 (valor -> estructura_dato .)
    DOSPUNTOS       reduce using rule 72 (valor -> estructura_dato .)
    LLAVER          reduce using rule 72 (valor -> estructura_dato .)
    RPARENT         reduce using rule 72 (valor -> estructura_dato .)
    CORCH_IZQ       reduce using rule 72 (valor -> estructura_dato .)


state 7

    (73) valor -> indexacion .
    (147) operandos_log -> indexacion .
    (13) operando_mat -> indexacion .
    (107) operando_comp_eq -> indexacion .
    (81) operando_comp_orden -> indexacion .

  ! reduce/reduce conflict for COMA resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for $end resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for COMA resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for $end resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 147 (operandos_log -> indexacion .)
    OR              reduce using rule 147 (operandos_log -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    COMA            reduce using rule 13 (operando_mat -> indexacion .)
    $end            reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_DER       reduce using rule 13 (operando_mat -> indexacion .)
    DOSPUNTOS       reduce using rule 13 (operando_mat -> indexacion .)
    LLAVER          reduce using rule 13 (operando_mat -> indexacion .)
    RPARENT         reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_IZQ       reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)

  ! COMA            [ reduce using rule 73 (valor -> indexacion .) ]
  ! $end            [ reduce using rule 73 (valor -> indexacion .) ]
  ! CORCH_DER       [ reduce using rule 73 (valor -> indexacion .) ]
  ! DOSPUNTOS       [ reduce using rule 73 (valor -> indexacion .) ]
  ! LLAVER          [ reduce using rule 73 (valor -> indexacion .) ]
  ! RPARENT         [ reduce using rule 73 (valor -> indexacion .) ]
  ! CORCH_IZQ       [ reduce using rule 73 (valor -> indexacion .) ]
  ! AS              [ reduce using rule 73 (valor -> indexacion .) ]
  ! COMA            [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! $end            [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! CORCH_DER       [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! DOSPUNTOS       [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! LLAVER          [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! RPARENT         [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! CORCH_IZQ       [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! AS              [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! IGUAL           [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]


state 8

    (74) valor -> read .

    COMA            reduce using rule 74 (valor -> read .)
    $end            reduce using rule 74 (valor -> read .)
    CORCH_DER       reduce using rule 74 (valor -> read .)
    AS              reduce using rule 74 (valor -> read .)
    DOSPUNTOS       reduce using rule 74 (valor -> read .)
    LLAVER          reduce using rule 74 (valor -> read .)
    RPARENT         reduce using rule 74 (valor -> read .)
    CORCH_IZQ       reduce using rule 74 (valor -> read .)


state 9

    (75) valor -> ejecutar_funcion .
    (146) operandos_log -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (108) operando_comp_eq -> ejecutar_funcion .
    (82) operando_comp_orden -> ejecutar_funcion .

  ! reduce/reduce conflict for COMA resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for $end resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for COMA resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for $end resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    COMA            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    $end            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_DER       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    LLAVER          reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RPARENT         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! COMA            [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! $end            [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! CORCH_DER       [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! DOSPUNTOS       [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! LLAVER          [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! RPARENT         [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! CORCH_IZQ       [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! COMA            [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! $end            [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! CORCH_DER       [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! DOSPUNTOS       [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! LLAVER          [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! RPARENT         [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! CORCH_IZQ       [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]


state 10

    (76) valor -> negativo .
    (14) operando_mat -> negativo .
    (111) operando_comp_eq -> negativo .
    (83) operando_comp_orden -> negativo .

  ! reduce/reduce conflict for COMA resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for $end resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for LLAVER resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for RPARENT resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for AS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    COMA            reduce using rule 14 (operando_mat -> negativo .)
    $end            reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    CORCH_DER       reduce using rule 14 (operando_mat -> negativo .)
    DOSPUNTOS       reduce using rule 14 (operando_mat -> negativo .)
    LLAVER          reduce using rule 14 (operando_mat -> negativo .)
    RPARENT         reduce using rule 14 (operando_mat -> negativo .)
    CORCH_IZQ       reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)

  ! COMA            [ reduce using rule 76 (valor -> negativo .) ]
  ! $end            [ reduce using rule 76 (valor -> negativo .) ]
  ! CORCH_DER       [ reduce using rule 76 (valor -> negativo .) ]
  ! DOSPUNTOS       [ reduce using rule 76 (valor -> negativo .) ]
  ! LLAVER          [ reduce using rule 76 (valor -> negativo .) ]
  ! RPARENT         [ reduce using rule 76 (valor -> negativo .) ]
  ! CORCH_IZQ       [ reduce using rule 76 (valor -> negativo .) ]
  ! AS              [ reduce using rule 76 (valor -> negativo .) ]
  ! IGUAL           [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! NO_IGUAL        [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! MAYOR_QUE       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MENOR_QUE       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 83 (operando_comp_orden -> negativo .) ]


state 11

    (77) valor -> casting .

    COMA            reduce using rule 77 (valor -> casting .)
    $end            reduce using rule 77 (valor -> casting .)
    CORCH_DER       reduce using rule 77 (valor -> casting .)
    AS              reduce using rule 77 (valor -> casting .)
    DOSPUNTOS       reduce using rule 77 (valor -> casting .)
    LLAVER          reduce using rule 77 (valor -> casting .)
    RPARENT         reduce using rule 77 (valor -> casting .)
    CORCH_IZQ       reduce using rule 77 (valor -> casting .)


state 12

    (62) datos -> numero .
    (11) operando_mat -> numero .
    (101) operando_comp_eq -> numero .
    (79) operando_comp_orden -> numero .

  ! reduce/reduce conflict for COMA resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for $end resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for LLAVER resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for RPARENT resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    COMA            reduce using rule 11 (operando_mat -> numero .)
    $end            reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    CORCH_DER       reduce using rule 11 (operando_mat -> numero .)
    DOSPUNTOS       reduce using rule 11 (operando_mat -> numero .)
    LLAVER          reduce using rule 11 (operando_mat -> numero .)
    RPARENT         reduce using rule 11 (operando_mat -> numero .)
    CORCH_IZQ       reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)

  ! COMA            [ reduce using rule 62 (datos -> numero .) ]
  ! $end            [ reduce using rule 62 (datos -> numero .) ]
  ! CORCH_DER       [ reduce using rule 62 (datos -> numero .) ]
  ! DOSPUNTOS       [ reduce using rule 62 (datos -> numero .) ]
  ! LLAVER          [ reduce using rule 62 (datos -> numero .) ]
  ! RPARENT         [ reduce using rule 62 (datos -> numero .) ]
  ! CORCH_IZQ       [ reduce using rule 62 (datos -> numero .) ]
  ! AS              [ reduce using rule 62 (datos -> numero .) ]
  ! IGUAL           [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]


state 13

    (63) datos -> CADENA .
    (103) operando_comp_eq -> CADENA .

    COMA            reduce using rule 63 (datos -> CADENA .)
    $end            reduce using rule 63 (datos -> CADENA .)
    CORCH_DER       reduce using rule 63 (datos -> CADENA .)
    AS              reduce using rule 63 (datos -> CADENA .)
    DOSPUNTOS       reduce using rule 63 (datos -> CADENA .)
    LLAVER          reduce using rule 63 (datos -> CADENA .)
    RPARENT         reduce using rule 63 (datos -> CADENA .)
    CORCH_IZQ       reduce using rule 63 (datos -> CADENA .)
    IGUAL           reduce using rule 103 (operando_comp_eq -> CADENA .)
    NO_IGUAL        reduce using rule 103 (operando_comp_eq -> CADENA .)


state 14

    (64) datos -> bool .
    (145) operandos_log -> bool .
    (102) operando_comp_eq -> bool .

  ! reduce/reduce conflict for COMA resolved using rule 64 (datos -> bool .)
  ! reduce/reduce conflict for $end resolved using rule 64 (datos -> bool .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 64 (datos -> bool .)
  ! reduce/reduce conflict for RPARENT resolved using rule 64 (datos -> bool .)
  ! reduce/reduce conflict for AS resolved using rule 64 (datos -> bool .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 64 (datos -> bool .)
  ! reduce/reduce conflict for LLAVER resolved using rule 64 (datos -> bool .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 64 (datos -> bool .)
    COMA            reduce using rule 64 (datos -> bool .)
    $end            reduce using rule 64 (datos -> bool .)
    CORCH_DER       reduce using rule 64 (datos -> bool .)
    AS              reduce using rule 64 (datos -> bool .)
    DOSPUNTOS       reduce using rule 64 (datos -> bool .)
    LLAVER          reduce using rule 64 (datos -> bool .)
    RPARENT         reduce using rule 64 (datos -> bool .)
    CORCH_IZQ       reduce using rule 64 (datos -> bool .)
    AND             reduce using rule 145 (operandos_log -> bool .)
    OR              reduce using rule 145 (operandos_log -> bool .)
    IGUAL           reduce using rule 102 (operando_comp_eq -> bool .)
    NO_IGUAL        reduce using rule 102 (operando_comp_eq -> bool .)

  ! COMA            [ reduce using rule 145 (operandos_log -> bool .) ]
  ! $end            [ reduce using rule 145 (operandos_log -> bool .) ]
  ! CORCH_DER       [ reduce using rule 145 (operandos_log -> bool .) ]
  ! RPARENT         [ reduce using rule 145 (operandos_log -> bool .) ]
  ! AS              [ reduce using rule 145 (operandos_log -> bool .) ]
  ! DOSPUNTOS       [ reduce using rule 145 (operandos_log -> bool .) ]
  ! LLAVER          [ reduce using rule 145 (operandos_log -> bool .) ]
  ! CORCH_IZQ       [ reduce using rule 145 (operandos_log -> bool .) ]


state 15

    (185) operaciones -> operacion_mat .
    (104) operando_comp_eq -> operacion_mat .
    (78) operando_comp_orden -> operacion_mat .

    COMA            reduce using rule 185 (operaciones -> operacion_mat .)
    $end            reduce using rule 185 (operaciones -> operacion_mat .)
    CORCH_DER       reduce using rule 185 (operaciones -> operacion_mat .)
    DOSPUNTOS       reduce using rule 185 (operaciones -> operacion_mat .)
    LLAVER          reduce using rule 185 (operaciones -> operacion_mat .)
    RPARENT         reduce using rule 185 (operaciones -> operacion_mat .)
    CORCH_IZQ       reduce using rule 185 (operaciones -> operacion_mat .)
    AS              reduce using rule 185 (operaciones -> operacion_mat .)
    IGUAL           reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    NO_IGUAL        reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    MAYOR_QUE       reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    MENOR_QUE       reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    MENOR_O_IGUAL   reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    MAYOR_O_IGUAL   reduce using rule 78 (operando_comp_orden -> operacion_mat .)


state 16

    (186) operaciones -> operacion_log .

    COMA            reduce using rule 186 (operaciones -> operacion_log .)
    $end            reduce using rule 186 (operaciones -> operacion_log .)
    CORCH_DER       reduce using rule 186 (operaciones -> operacion_log .)
    AS              reduce using rule 186 (operaciones -> operacion_log .)
    DOSPUNTOS       reduce using rule 186 (operaciones -> operacion_log .)
    LLAVER          reduce using rule 186 (operaciones -> operacion_log .)
    RPARENT         reduce using rule 186 (operaciones -> operacion_log .)
    CORCH_IZQ       reduce using rule 186 (operaciones -> operacion_log .)


state 17

    (187) operaciones -> operacion_unaria .

    COMA            reduce using rule 187 (operaciones -> operacion_unaria .)
    $end            reduce using rule 187 (operaciones -> operacion_unaria .)
    CORCH_DER       reduce using rule 187 (operaciones -> operacion_unaria .)
    AS              reduce using rule 187 (operaciones -> operacion_unaria .)
    DOSPUNTOS       reduce using rule 187 (operaciones -> operacion_unaria .)
    LLAVER          reduce using rule 187 (operaciones -> operacion_unaria .)
    RPARENT         reduce using rule 187 (operaciones -> operacion_unaria .)
    CORCH_IZQ       reduce using rule 187 (operaciones -> operacion_unaria .)


state 18

    (188) operaciones -> operacion_autoasig .

    COMA            reduce using rule 188 (operaciones -> operacion_autoasig .)
    $end            reduce using rule 188 (operaciones -> operacion_autoasig .)
    CORCH_DER       reduce using rule 188 (operaciones -> operacion_autoasig .)
    AS              reduce using rule 188 (operaciones -> operacion_autoasig .)
    DOSPUNTOS       reduce using rule 188 (operaciones -> operacion_autoasig .)
    LLAVER          reduce using rule 188 (operaciones -> operacion_autoasig .)
    RPARENT         reduce using rule 188 (operaciones -> operacion_autoasig .)
    CORCH_IZQ       reduce using rule 188 (operaciones -> operacion_autoasig .)


state 19

    (51) estructura_dato -> lista .

    COMA            reduce using rule 51 (estructura_dato -> lista .)
    $end            reduce using rule 51 (estructura_dato -> lista .)
    CORCH_DER       reduce using rule 51 (estructura_dato -> lista .)
    AS              reduce using rule 51 (estructura_dato -> lista .)
    DOSPUNTOS       reduce using rule 51 (estructura_dato -> lista .)
    LLAVER          reduce using rule 51 (estructura_dato -> lista .)
    RPARENT         reduce using rule 51 (estructura_dato -> lista .)
    CORCH_IZQ       reduce using rule 51 (estructura_dato -> lista .)


state 20

    (52) estructura_dato -> conjunto .

    COMA            reduce using rule 52 (estructura_dato -> conjunto .)
    $end            reduce using rule 52 (estructura_dato -> conjunto .)
    CORCH_DER       reduce using rule 52 (estructura_dato -> conjunto .)
    AS              reduce using rule 52 (estructura_dato -> conjunto .)
    DOSPUNTOS       reduce using rule 52 (estructura_dato -> conjunto .)
    LLAVER          reduce using rule 52 (estructura_dato -> conjunto .)
    RPARENT         reduce using rule 52 (estructura_dato -> conjunto .)
    CORCH_IZQ       reduce using rule 52 (estructura_dato -> conjunto .)


state 21

    (53) estructura_dato -> mapa .

    COMA            reduce using rule 53 (estructura_dato -> mapa .)
    $end            reduce using rule 53 (estructura_dato -> mapa .)
    CORCH_DER       reduce using rule 53 (estructura_dato -> mapa .)
    AS              reduce using rule 53 (estructura_dato -> mapa .)
    DOSPUNTOS       reduce using rule 53 (estructura_dato -> mapa .)
    LLAVER          reduce using rule 53 (estructura_dato -> mapa .)
    RPARENT         reduce using rule 53 (estructura_dato -> mapa .)
    CORCH_IZQ       reduce using rule 53 (estructura_dato -> mapa .)


state 22

    (22) lista -> CORCH_IZQ . valores CORCH_DER
    (23) lista -> CORCH_IZQ . CORCH_DER
    (1) valores -> . valor
    (2) valores -> . valor COMA valores
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo

    CORCH_DER       shift and go to state 66
    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 24
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    valores                        shift and go to state 65
    valor                          shift and go to state 2
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operando_comp_orden            shift and go to state 54

state 23

    (165) read -> STDIN . PUNTO READLINESYNC LPARENT RPARENT

    PUNTO           shift and go to state 67


state 24

    (193) casting -> LPARENT . valor AS tipo_dato RPARENT
    (152) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (164) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (112) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 75
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 68
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38

    valor                          shift and go to state 69
    operacion_log_sin_par          shift and go to state 70
    operacion_mat_sin_par          shift and go to state 71
    operacion_comp_sin_par         shift and go to state 73
    operacion_comp_orden_sin_par   shift and go to state 74
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 76
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 77
    negativo                       shift and go to state 78
    casting                        shift and go to state 11
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_orden            shift and go to state 54
    numero                         shift and go to state 82
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_comp                 shift and go to state 44
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 45
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_con_par   shift and go to state 53
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 47
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_mat_con_par          shift and go to state 39

state 25

    (85) negativo -> RESTA . numero
    (86) negativo -> RESTA . VARIABLE
    (87) negativo -> RESTA . indexacion
    (88) negativo -> RESTA . ejecutar_funcion
    (44) operacion_mat_pos -> RESTA . operacion_mat_con_par
    (56) operacion_mat_neg -> RESTA . operacion_mat_con_par
    (57) operacion_mat_neg -> RESTA . operacion_mat_con_par operador_mat operacion_mat_pos
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    VARIABLE        shift and go to state 85
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    LPARENT         shift and go to state 89

    numero                         shift and go to state 84
    indexacion                     shift and go to state 86
    ejecutar_funcion               shift and go to state 87
    operacion_mat_con_par          shift and go to state 88

state 26

    (54) numero -> INTEGER .

    COMA            reduce using rule 54 (numero -> INTEGER .)
    $end            reduce using rule 54 (numero -> INTEGER .)
    MAS             reduce using rule 54 (numero -> INTEGER .)
    RESTA           reduce using rule 54 (numero -> INTEGER .)
    MULTIPL         reduce using rule 54 (numero -> INTEGER .)
    DIVISION        reduce using rule 54 (numero -> INTEGER .)
    IGUAL           reduce using rule 54 (numero -> INTEGER .)
    NO_IGUAL        reduce using rule 54 (numero -> INTEGER .)
    MAYOR_QUE       reduce using rule 54 (numero -> INTEGER .)
    MENOR_QUE       reduce using rule 54 (numero -> INTEGER .)
    MENOR_O_IGUAL   reduce using rule 54 (numero -> INTEGER .)
    MAYOR_O_IGUAL   reduce using rule 54 (numero -> INTEGER .)
    CORCH_DER       reduce using rule 54 (numero -> INTEGER .)
    AS              reduce using rule 54 (numero -> INTEGER .)
    DOSPUNTOS       reduce using rule 54 (numero -> INTEGER .)
    LLAVER          reduce using rule 54 (numero -> INTEGER .)
    RPARENT         reduce using rule 54 (numero -> INTEGER .)
    CORCH_IZQ       reduce using rule 54 (numero -> INTEGER .)
    AND             reduce using rule 54 (numero -> INTEGER .)
    OR              reduce using rule 54 (numero -> INTEGER .)


state 27

    (55) numero -> FLOAT .

    COMA            reduce using rule 55 (numero -> FLOAT .)
    $end            reduce using rule 55 (numero -> FLOAT .)
    MAS             reduce using rule 55 (numero -> FLOAT .)
    RESTA           reduce using rule 55 (numero -> FLOAT .)
    MULTIPL         reduce using rule 55 (numero -> FLOAT .)
    DIVISION        reduce using rule 55 (numero -> FLOAT .)
    IGUAL           reduce using rule 55 (numero -> FLOAT .)
    NO_IGUAL        reduce using rule 55 (numero -> FLOAT .)
    MAYOR_QUE       reduce using rule 55 (numero -> FLOAT .)
    MENOR_QUE       reduce using rule 55 (numero -> FLOAT .)
    MENOR_O_IGUAL   reduce using rule 55 (numero -> FLOAT .)
    MAYOR_O_IGUAL   reduce using rule 55 (numero -> FLOAT .)
    CORCH_DER       reduce using rule 55 (numero -> FLOAT .)
    AS              reduce using rule 55 (numero -> FLOAT .)
    DOSPUNTOS       reduce using rule 55 (numero -> FLOAT .)
    LLAVER          reduce using rule 55 (numero -> FLOAT .)
    RPARENT         reduce using rule 55 (numero -> FLOAT .)
    CORCH_IZQ       reduce using rule 55 (numero -> FLOAT .)
    AND             reduce using rule 55 (numero -> FLOAT .)
    OR              reduce using rule 55 (numero -> FLOAT .)


state 28

    (58) bool -> TRUE .

    COMA            reduce using rule 58 (bool -> TRUE .)
    $end            reduce using rule 58 (bool -> TRUE .)
    AND             reduce using rule 58 (bool -> TRUE .)
    OR              reduce using rule 58 (bool -> TRUE .)
    IGUAL           reduce using rule 58 (bool -> TRUE .)
    NO_IGUAL        reduce using rule 58 (bool -> TRUE .)
    CORCH_DER       reduce using rule 58 (bool -> TRUE .)
    AS              reduce using rule 58 (bool -> TRUE .)
    RPARENT         reduce using rule 58 (bool -> TRUE .)
    DOSPUNTOS       reduce using rule 58 (bool -> TRUE .)
    LLAVER          reduce using rule 58 (bool -> TRUE .)
    CORCH_IZQ       reduce using rule 58 (bool -> TRUE .)


state 29

    (59) bool -> FALSE .

    COMA            reduce using rule 59 (bool -> FALSE .)
    $end            reduce using rule 59 (bool -> FALSE .)
    AND             reduce using rule 59 (bool -> FALSE .)
    OR              reduce using rule 59 (bool -> FALSE .)
    IGUAL           reduce using rule 59 (bool -> FALSE .)
    NO_IGUAL        reduce using rule 59 (bool -> FALSE .)
    CORCH_DER       reduce using rule 59 (bool -> FALSE .)
    AS              reduce using rule 59 (bool -> FALSE .)
    RPARENT         reduce using rule 59 (bool -> FALSE .)
    DOSPUNTOS       reduce using rule 59 (bool -> FALSE .)
    LLAVER          reduce using rule 59 (bool -> FALSE .)
    CORCH_IZQ       reduce using rule 59 (bool -> FALSE .)


state 30

    (60) operacion_mat -> operacion_mat_pos .

    COMA            reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    $end            reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    IGUAL           reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    NO_IGUAL        reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    MAYOR_QUE       reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    MENOR_QUE       reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    MENOR_O_IGUAL   reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    MAYOR_O_IGUAL   reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    CORCH_DER       reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    AS              reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    DOSPUNTOS       reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    LLAVER          reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    RPARENT         reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    CORCH_IZQ       reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    AND             reduce using rule 60 (operacion_mat -> operacion_mat_pos .)
    OR              reduce using rule 60 (operacion_mat -> operacion_mat_pos .)


state 31

    (61) operacion_mat -> operacion_mat_neg .

    COMA            reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    $end            reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    IGUAL           reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    NO_IGUAL        reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    MAYOR_QUE       reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    MENOR_QUE       reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    MENOR_O_IGUAL   reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    MAYOR_O_IGUAL   reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    CORCH_DER       reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    AS              reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    DOSPUNTOS       reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    LLAVER          reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    RPARENT         reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    CORCH_IZQ       reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    AND             reduce using rule 61 (operacion_mat -> operacion_mat_neg .)
    OR              reduce using rule 61 (operacion_mat -> operacion_mat_neg .)


state 32

    (170) operacion_log -> operacion_log_con_par .
    (171) operacion_log -> operacion_log_con_par . operadores_log operacion_log
    (110) operando_comp_eq -> operacion_log_con_par .
    (136) operadores_log -> . AND
    (137) operadores_log -> . OR

    COMA            reduce using rule 170 (operacion_log -> operacion_log_con_par .)
    $end            reduce using rule 170 (operacion_log -> operacion_log_con_par .)
    CORCH_DER       reduce using rule 170 (operacion_log -> operacion_log_con_par .)
    AS              reduce using rule 170 (operacion_log -> operacion_log_con_par .)
    DOSPUNTOS       reduce using rule 170 (operacion_log -> operacion_log_con_par .)
    LLAVER          reduce using rule 170 (operacion_log -> operacion_log_con_par .)
    RPARENT         reduce using rule 170 (operacion_log -> operacion_log_con_par .)
    CORCH_IZQ       reduce using rule 170 (operacion_log -> operacion_log_con_par .)
    IGUAL           reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    NO_IGUAL        reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    AND             shift and go to state 91
    OR              shift and go to state 92

    operadores_log                 shift and go to state 90

state 33

    (172) operacion_log -> operacion_log_sin_par .

    COMA            reduce using rule 172 (operacion_log -> operacion_log_sin_par .)
    $end            reduce using rule 172 (operacion_log -> operacion_log_sin_par .)
    CORCH_DER       reduce using rule 172 (operacion_log -> operacion_log_sin_par .)
    DOSPUNTOS       reduce using rule 172 (operacion_log -> operacion_log_sin_par .)
    LLAVER          reduce using rule 172 (operacion_log -> operacion_log_sin_par .)
    RPARENT         reduce using rule 172 (operacion_log -> operacion_log_sin_par .)
    CORCH_IZQ       reduce using rule 172 (operacion_log -> operacion_log_sin_par .)
    AS              reduce using rule 172 (operacion_log -> operacion_log_sin_par .)


state 34

    (173) operacion_log -> operacion_log_not .
    (143) operandos_log -> operacion_log_not .

  ! reduce/reduce conflict for COMA resolved using rule 143 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for $end resolved using rule 143 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 143 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 143 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for LLAVER resolved using rule 143 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for RPARENT resolved using rule 143 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 143 (operandos_log -> operacion_log_not .)
  ! reduce/reduce conflict for AS resolved using rule 143 (operandos_log -> operacion_log_not .)
    AND             reduce using rule 143 (operandos_log -> operacion_log_not .)
    OR              reduce using rule 143 (operandos_log -> operacion_log_not .)
    COMA            reduce using rule 143 (operandos_log -> operacion_log_not .)
    $end            reduce using rule 143 (operandos_log -> operacion_log_not .)
    CORCH_DER       reduce using rule 143 (operandos_log -> operacion_log_not .)
    DOSPUNTOS       reduce using rule 143 (operandos_log -> operacion_log_not .)
    LLAVER          reduce using rule 143 (operandos_log -> operacion_log_not .)
    RPARENT         reduce using rule 143 (operandos_log -> operacion_log_not .)
    CORCH_IZQ       reduce using rule 143 (operandos_log -> operacion_log_not .)
    AS              reduce using rule 143 (operandos_log -> operacion_log_not .)

  ! COMA            [ reduce using rule 173 (operacion_log -> operacion_log_not .) ]
  ! $end            [ reduce using rule 173 (operacion_log -> operacion_log_not .) ]
  ! CORCH_DER       [ reduce using rule 173 (operacion_log -> operacion_log_not .) ]
  ! DOSPUNTOS       [ reduce using rule 173 (operacion_log -> operacion_log_not .) ]
  ! LLAVER          [ reduce using rule 173 (operacion_log -> operacion_log_not .) ]
  ! RPARENT         [ reduce using rule 173 (operacion_log -> operacion_log_not .) ]
  ! CORCH_IZQ       [ reduce using rule 173 (operacion_log -> operacion_log_not .) ]
  ! AS              [ reduce using rule 173 (operacion_log -> operacion_log_not .) ]


state 35

    (174) operacion_log -> operandos_log .
    (149) operacion_log_sin_par -> operandos_log . operadores_log operacion_log
    (150) operacion_log_sin_par -> operandos_log .
    (136) operadores_log -> . AND
    (137) operadores_log -> . OR

  ! reduce/reduce conflict for COMA resolved using rule 150 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for $end resolved using rule 150 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 150 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 150 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for LLAVER resolved using rule 150 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for RPARENT resolved using rule 150 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 150 (operacion_log_sin_par -> operandos_log .)
  ! reduce/reduce conflict for AS resolved using rule 150 (operacion_log_sin_par -> operandos_log .)
    COMA            reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    $end            reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    CORCH_DER       reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    DOSPUNTOS       reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    LLAVER          reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    RPARENT         reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    CORCH_IZQ       reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    AS              reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    AND             shift and go to state 91
    OR              shift and go to state 92

  ! COMA            [ reduce using rule 174 (operacion_log -> operandos_log .) ]
  ! $end            [ reduce using rule 174 (operacion_log -> operandos_log .) ]
  ! CORCH_DER       [ reduce using rule 174 (operacion_log -> operandos_log .) ]
  ! DOSPUNTOS       [ reduce using rule 174 (operacion_log -> operandos_log .) ]
  ! LLAVER          [ reduce using rule 174 (operacion_log -> operandos_log .) ]
  ! RPARENT         [ reduce using rule 174 (operacion_log -> operandos_log .) ]
  ! CORCH_IZQ       [ reduce using rule 174 (operacion_log -> operandos_log .) ]
  ! AS              [ reduce using rule 174 (operacion_log -> operandos_log .) ]

    operadores_log                 shift and go to state 93

state 36

    (180) operacion_unaria -> AUTOINCREMENTO . VARIABLE

    VARIABLE        shift and go to state 94


state 37

    (181) operacion_unaria -> AUTODECREMENTO . VARIABLE

    VARIABLE        shift and go to state 95


state 38

    (29) conjunto -> LLAVEL . valores LLAVER
    (30) conjunto -> LLAVEL . LLAVER
    (41) mapa -> LLAVEL . claves_valores LLAVER
    (42) mapa -> LLAVEL . LLAVER
    (1) valores -> . valor
    (2) valores -> . valor COMA valores
    (17) claves_valores -> . clave_valor
    (18) claves_valores -> . clave_valor COMA claves_valores
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (8) clave_valor -> . valor DOSPUNTOS valor
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo

    LLAVER          shift and go to state 97
    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 24
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    valores                        shift and go to state 96
    claves_valores                 shift and go to state 98
    valor                          shift and go to state 99
    clave_valor                    shift and go to state 100
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operando_comp_orden            shift and go to state 54

state 39

    (43) operacion_mat_pos -> operacion_mat_con_par .
    (45) operacion_mat_pos -> operacion_mat_con_par . operador_mat operacion_mat_pos
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

    COMA            reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    $end            reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    IGUAL           reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    NO_IGUAL        reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    MAYOR_QUE       reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    MENOR_QUE       reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    MENOR_O_IGUAL   reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    MAYOR_O_IGUAL   reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    CORCH_DER       reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    AS              reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    DOSPUNTOS       reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    LLAVER          reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    RPARENT         reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    CORCH_IZQ       reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    AND             reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    OR              reduce using rule 43 (operacion_mat_pos -> operacion_mat_con_par .)
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

    operador_mat                   shift and go to state 101

state 40

    (46) operacion_mat_pos -> operacion_mat_sin_par .

    COMA            reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    $end            reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    IGUAL           reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    NO_IGUAL        reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    MAYOR_QUE       reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    MENOR_QUE       reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    MENOR_O_IGUAL   reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    MAYOR_O_IGUAL   reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    CORCH_DER       reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    DOSPUNTOS       reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    LLAVER          reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    RPARENT         reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    CORCH_IZQ       reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    AS              reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    AND             reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    OR              reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)


state 41

    (47) operacion_mat_pos -> operando_mat .
    (27) operacion_mat_sin_par -> operando_mat . operador_mat operacion_mat
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

    COMA            reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    $end            reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    IGUAL           reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    NO_IGUAL        reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    MAYOR_QUE       reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    MENOR_QUE       reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    MENOR_O_IGUAL   reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    MAYOR_O_IGUAL   reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    CORCH_DER       reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    DOSPUNTOS       reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    LLAVER          reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    RPARENT         reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    CORCH_IZQ       reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    AS              reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    AND             reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    OR              reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

    operador_mat                   shift and go to state 102

state 42

    (166) operacion_log_not -> operacion_log_not_sin_par .

    COMA            reduce using rule 166 (operacion_log_not -> operacion_log_not_sin_par .)
    $end            reduce using rule 166 (operacion_log_not -> operacion_log_not_sin_par .)
    AND             reduce using rule 166 (operacion_log_not -> operacion_log_not_sin_par .)
    OR              reduce using rule 166 (operacion_log_not -> operacion_log_not_sin_par .)
    CORCH_DER       reduce using rule 166 (operacion_log_not -> operacion_log_not_sin_par .)
    RPARENT         reduce using rule 166 (operacion_log_not -> operacion_log_not_sin_par .)
    AS              reduce using rule 166 (operacion_log_not -> operacion_log_not_sin_par .)
    DOSPUNTOS       reduce using rule 166 (operacion_log_not -> operacion_log_not_sin_par .)
    LLAVER          reduce using rule 166 (operacion_log_not -> operacion_log_not_sin_par .)
    CORCH_IZQ       reduce using rule 166 (operacion_log_not -> operacion_log_not_sin_par .)


state 43

    (167) operacion_log_not -> operacion_log_not_con_par .

    COMA            reduce using rule 167 (operacion_log_not -> operacion_log_not_con_par .)
    $end            reduce using rule 167 (operacion_log_not -> operacion_log_not_con_par .)
    AND             reduce using rule 167 (operacion_log_not -> operacion_log_not_con_par .)
    OR              reduce using rule 167 (operacion_log_not -> operacion_log_not_con_par .)
    CORCH_DER       reduce using rule 167 (operacion_log_not -> operacion_log_not_con_par .)
    RPARENT         reduce using rule 167 (operacion_log_not -> operacion_log_not_con_par .)
    AS              reduce using rule 167 (operacion_log_not -> operacion_log_not_con_par .)
    DOSPUNTOS       reduce using rule 167 (operacion_log_not -> operacion_log_not_con_par .)
    LLAVER          reduce using rule 167 (operacion_log_not -> operacion_log_not_con_par .)
    CORCH_IZQ       reduce using rule 167 (operacion_log_not -> operacion_log_not_con_par .)


state 44

    (142) operandos_log -> operacion_comp .

    AND             reduce using rule 142 (operandos_log -> operacion_comp .)
    OR              reduce using rule 142 (operandos_log -> operacion_comp .)
    COMA            reduce using rule 142 (operandos_log -> operacion_comp .)
    $end            reduce using rule 142 (operandos_log -> operacion_comp .)
    CORCH_DER       reduce using rule 142 (operandos_log -> operacion_comp .)
    RPARENT         reduce using rule 142 (operandos_log -> operacion_comp .)
    AS              reduce using rule 142 (operandos_log -> operacion_comp .)
    DOSPUNTOS       reduce using rule 142 (operandos_log -> operacion_comp .)
    LLAVER          reduce using rule 142 (operandos_log -> operacion_comp .)
    CORCH_IZQ       reduce using rule 142 (operandos_log -> operacion_comp .)


state 45

    (16) operando_mat -> casting_num .

    MAS             reduce using rule 16 (operando_mat -> casting_num .)
    RESTA           reduce using rule 16 (operando_mat -> casting_num .)
    MULTIPL         reduce using rule 16 (operando_mat -> casting_num .)
    DIVISION        reduce using rule 16 (operando_mat -> casting_num .)
    COMA            reduce using rule 16 (operando_mat -> casting_num .)
    $end            reduce using rule 16 (operando_mat -> casting_num .)
    IGUAL           reduce using rule 16 (operando_mat -> casting_num .)
    NO_IGUAL        reduce using rule 16 (operando_mat -> casting_num .)
    MAYOR_QUE       reduce using rule 16 (operando_mat -> casting_num .)
    MENOR_QUE       reduce using rule 16 (operando_mat -> casting_num .)
    MENOR_O_IGUAL   reduce using rule 16 (operando_mat -> casting_num .)
    MAYOR_O_IGUAL   reduce using rule 16 (operando_mat -> casting_num .)
    CORCH_DER       reduce using rule 16 (operando_mat -> casting_num .)
    AS              reduce using rule 16 (operando_mat -> casting_num .)
    DOSPUNTOS       reduce using rule 16 (operando_mat -> casting_num .)
    LLAVER          reduce using rule 16 (operando_mat -> casting_num .)
    RPARENT         reduce using rule 16 (operando_mat -> casting_num .)
    CORCH_IZQ       reduce using rule 16 (operando_mat -> casting_num .)
    AND             reduce using rule 16 (operando_mat -> casting_num .)
    OR              reduce using rule 16 (operando_mat -> casting_num .)


state 46

    (161) operacion_log_not_sin_par -> NEGACION . operando_log_not
    (154) operando_log_not -> . bool
    (155) operando_log_not -> . operacion_log_con_par
    (156) operando_log_not -> . VARIABLE
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT

    VARIABLE        shift and go to state 106
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LPARENT         shift and go to state 107

    operando_log_not               shift and go to state 103
    bool                           shift and go to state 104
    operacion_log_con_par          shift and go to state 105

state 47

    (132) operacion_comp -> operacion_comp_con_par .
    (106) operando_comp_eq -> operacion_comp_con_par .

    AND             reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    OR              reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    COMA            reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    $end            reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    CORCH_DER       reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    RPARENT         reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    AS              reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    DOSPUNTOS       reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    LLAVER          reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    CORCH_IZQ       reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    IGUAL           reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    NO_IGUAL        reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)


state 48

    (133) operacion_comp -> operacion_comp_sin_par .

    AND             reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    OR              reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    COMA            reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    $end            reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    CORCH_DER       reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    DOSPUNTOS       reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    LLAVER          reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    RPARENT         reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    CORCH_IZQ       reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    AS              reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)


state 49

    (124) operacion_comp_sin_par -> operacion_comp_eq .

    AND             reduce using rule 124 (operacion_comp_sin_par -> operacion_comp_eq .)
    OR              reduce using rule 124 (operacion_comp_sin_par -> operacion_comp_eq .)
    COMA            reduce using rule 124 (operacion_comp_sin_par -> operacion_comp_eq .)
    $end            reduce using rule 124 (operacion_comp_sin_par -> operacion_comp_eq .)
    CORCH_DER       reduce using rule 124 (operacion_comp_sin_par -> operacion_comp_eq .)
    RPARENT         reduce using rule 124 (operacion_comp_sin_par -> operacion_comp_eq .)
    AS              reduce using rule 124 (operacion_comp_sin_par -> operacion_comp_eq .)
    DOSPUNTOS       reduce using rule 124 (operacion_comp_sin_par -> operacion_comp_eq .)
    LLAVER          reduce using rule 124 (operacion_comp_sin_par -> operacion_comp_eq .)
    CORCH_IZQ       reduce using rule 124 (operacion_comp_sin_par -> operacion_comp_eq .)


state 50

    (125) operacion_comp_sin_par -> operacion_comp_orden .
    (105) operando_comp_eq -> operacion_comp_orden .

    AND             reduce using rule 125 (operacion_comp_sin_par -> operacion_comp_orden .)
    OR              reduce using rule 125 (operacion_comp_sin_par -> operacion_comp_orden .)
    COMA            reduce using rule 125 (operacion_comp_sin_par -> operacion_comp_orden .)
    $end            reduce using rule 125 (operacion_comp_sin_par -> operacion_comp_orden .)
    CORCH_DER       reduce using rule 125 (operacion_comp_sin_par -> operacion_comp_orden .)
    RPARENT         reduce using rule 125 (operacion_comp_sin_par -> operacion_comp_orden .)
    AS              reduce using rule 125 (operacion_comp_sin_par -> operacion_comp_orden .)
    DOSPUNTOS       reduce using rule 125 (operacion_comp_sin_par -> operacion_comp_orden .)
    LLAVER          reduce using rule 125 (operacion_comp_sin_par -> operacion_comp_orden .)
    CORCH_IZQ       reduce using rule 125 (operacion_comp_sin_par -> operacion_comp_orden .)
    IGUAL           reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)
    NO_IGUAL        reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)


state 51

    (123) operacion_comp_eq -> operando_comp_eq . operador_comp_eq operando_comp_eq
    (117) operador_comp_eq -> . IGUAL
    (118) operador_comp_eq -> . NO_IGUAL

    IGUAL           shift and go to state 109
    NO_IGUAL        shift and go to state 110

    operador_comp_eq               shift and go to state 108

state 52

    (91) operacion_comp_orden -> operacion_comp_orden_sin_par .

    AND             reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    OR              reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    COMA            reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    $end            reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    IGUAL           reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    NO_IGUAL        reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    CORCH_DER       reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    DOSPUNTOS       reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    LLAVER          reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    RPARENT         reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    CORCH_IZQ       reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    AS              reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)


state 53

    (92) operacion_comp_orden -> operacion_comp_orden_con_par .

    AND             reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    OR              reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    COMA            reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    $end            reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    IGUAL           reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    NO_IGUAL        reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    CORCH_DER       reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    RPARENT         reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    AS              reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    DOSPUNTOS       reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    LLAVER          reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)
    CORCH_IZQ       reduce using rule 92 (operacion_comp_orden -> operacion_comp_orden_con_par .)


state 54

    (84) operacion_comp_orden_sin_par -> operando_comp_orden . operador_comp_orden operando_comp_orden
    (65) operador_comp_orden -> . MAYOR_QUE
    (66) operador_comp_orden -> . MENOR_QUE
    (67) operador_comp_orden -> . MENOR_O_IGUAL
    (68) operador_comp_orden -> . MAYOR_O_IGUAL

    MAYOR_QUE       shift and go to state 112
    MENOR_QUE       shift and go to state 113
    MENOR_O_IGUAL   shift and go to state 114
    MAYOR_O_IGUAL   shift and go to state 115

    operador_comp_orden            shift and go to state 111

state 55

    (2) valores -> valor COMA . valores
    (1) valores -> . valor
    (2) valores -> . valor COMA valores
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 24
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    valor                          shift and go to state 2
    valores                        shift and go to state 116
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operando_comp_orden            shift and go to state 54

state 56

    (90) indexacion -> VARIABLE CORCH_IZQ . valor CORCH_IZQ
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 24
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    valor                          shift and go to state 117
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operando_comp_orden            shift and go to state 54

state 57

    (190) ejecutar_funcion -> VARIABLE LPARENT . valores RPARENT
    (191) ejecutar_funcion -> VARIABLE LPARENT . RPARENT
    (1) valores -> . valor
    (2) valores -> . valor COMA valores
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo

    RPARENT         shift and go to state 119
    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 24
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    valores                        shift and go to state 118
    valor                          shift and go to state 2
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operando_comp_orden            shift and go to state 54

state 58

    (178) operacion_unaria -> VARIABLE AUTOINCREMENTO .

    COMA            reduce using rule 178 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    $end            reduce using rule 178 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    CORCH_DER       reduce using rule 178 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    AS              reduce using rule 178 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    DOSPUNTOS       reduce using rule 178 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    LLAVER          reduce using rule 178 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    RPARENT         reduce using rule 178 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)
    CORCH_IZQ       reduce using rule 178 (operacion_unaria -> VARIABLE AUTOINCREMENTO .)


state 59

    (179) operacion_unaria -> VARIABLE AUTODECREMENTO .

    COMA            reduce using rule 179 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    $end            reduce using rule 179 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    CORCH_DER       reduce using rule 179 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    AS              reduce using rule 179 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    DOSPUNTOS       reduce using rule 179 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    LLAVER          reduce using rule 179 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    RPARENT         reduce using rule 179 (operacion_unaria -> VARIABLE AUTODECREMENTO .)
    CORCH_IZQ       reduce using rule 179 (operacion_unaria -> VARIABLE AUTODECREMENTO .)


state 60

    (192) operacion_autoasig -> VARIABLE operador_mat . IGUAL operacion_mat
    (28) operacion_mat_sin_par -> VARIABLE operador_mat . operacion_mat
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    IGUAL           shift and go to state 121
    RESTA           shift and go to state 123
    LPARENT         shift and go to state 124
    VARIABLE        shift and go to state 120
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27

    operacion_mat                  shift and go to state 122
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    numero                         shift and go to state 125
    indexacion                     shift and go to state 126
    negativo                       shift and go to state 127
    ejecutar_funcion               shift and go to state 128
    casting_num                    shift and go to state 45

state 61

    (3) operador_mat -> MAS .

    IGUAL           reduce using rule 3 (operador_mat -> MAS .)
    RESTA           reduce using rule 3 (operador_mat -> MAS .)
    LPARENT         reduce using rule 3 (operador_mat -> MAS .)
    VARIABLE        reduce using rule 3 (operador_mat -> MAS .)
    INTEGER         reduce using rule 3 (operador_mat -> MAS .)
    FLOAT           reduce using rule 3 (operador_mat -> MAS .)


state 62

    (4) operador_mat -> RESTA .

    IGUAL           reduce using rule 4 (operador_mat -> RESTA .)
    RESTA           reduce using rule 4 (operador_mat -> RESTA .)
    LPARENT         reduce using rule 4 (operador_mat -> RESTA .)
    VARIABLE        reduce using rule 4 (operador_mat -> RESTA .)
    INTEGER         reduce using rule 4 (operador_mat -> RESTA .)
    FLOAT           reduce using rule 4 (operador_mat -> RESTA .)


state 63

    (5) operador_mat -> MULTIPL .

    IGUAL           reduce using rule 5 (operador_mat -> MULTIPL .)
    RESTA           reduce using rule 5 (operador_mat -> MULTIPL .)
    LPARENT         reduce using rule 5 (operador_mat -> MULTIPL .)
    VARIABLE        reduce using rule 5 (operador_mat -> MULTIPL .)
    INTEGER         reduce using rule 5 (operador_mat -> MULTIPL .)
    FLOAT           reduce using rule 5 (operador_mat -> MULTIPL .)


state 64

    (6) operador_mat -> DIVISION .

    IGUAL           reduce using rule 6 (operador_mat -> DIVISION .)
    RESTA           reduce using rule 6 (operador_mat -> DIVISION .)
    LPARENT         reduce using rule 6 (operador_mat -> DIVISION .)
    VARIABLE        reduce using rule 6 (operador_mat -> DIVISION .)
    INTEGER         reduce using rule 6 (operador_mat -> DIVISION .)
    FLOAT           reduce using rule 6 (operador_mat -> DIVISION .)


state 65

    (22) lista -> CORCH_IZQ valores . CORCH_DER

    CORCH_DER       shift and go to state 129


state 66

    (23) lista -> CORCH_IZQ CORCH_DER .

    COMA            reduce using rule 23 (lista -> CORCH_IZQ CORCH_DER .)
    $end            reduce using rule 23 (lista -> CORCH_IZQ CORCH_DER .)
    CORCH_DER       reduce using rule 23 (lista -> CORCH_IZQ CORCH_DER .)
    AS              reduce using rule 23 (lista -> CORCH_IZQ CORCH_DER .)
    DOSPUNTOS       reduce using rule 23 (lista -> CORCH_IZQ CORCH_DER .)
    LLAVER          reduce using rule 23 (lista -> CORCH_IZQ CORCH_DER .)
    RPARENT         reduce using rule 23 (lista -> CORCH_IZQ CORCH_DER .)
    CORCH_IZQ       reduce using rule 23 (lista -> CORCH_IZQ CORCH_DER .)


state 67

    (165) read -> STDIN PUNTO . READLINESYNC LPARENT RPARENT

    READLINESYNC    shift and go to state 130


state 68

    (193) casting -> LPARENT . valor AS tipo_dato RPARENT
    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (112) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (152) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (130) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (164) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 132
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 131
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38

    valor                          shift and go to state 69
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_log_sin_par          shift and go to state 70
    operacion_comp_sin_par         shift and go to state 73
    operacion_mat_sin_par          shift and go to state 71
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 133
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 134
    negativo                       shift and go to state 135
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 54
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    numero                         shift and go to state 136
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_comp                 shift and go to state 44
    operacion_log_not              shift and go to state 83
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_con_par   shift and go to state 53
    casting_num                    shift and go to state 45
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 47
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_mat_con_par          shift and go to state 39

state 69

    (193) casting -> LPARENT valor . AS tipo_dato RPARENT
    (24) casting_num -> LPARENT valor . AS INT RPARENT
    (25) casting_num -> LPARENT valor . AS DOUBLE RPARENT
    (112) operando_comp_eq -> LPARENT valor . AS BOOL RPARENT

    AS              shift and go to state 137


state 70

    (152) operacion_log_con_par -> LPARENT operacion_log_sin_par . RPARENT
    (172) operacion_log -> operacion_log_sin_par .

    RPARENT         shift and go to state 138
    AS              reduce using rule 172 (operacion_log -> operacion_log_sin_par .)


state 71

    (40) operacion_mat_con_par -> LPARENT operacion_mat_sin_par . RPARENT
    (46) operacion_mat_pos -> operacion_mat_sin_par .

    RPARENT         shift and go to state 139
    AS              reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    MAYOR_QUE       reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    MENOR_QUE       reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    MENOR_O_IGUAL   reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    MAYOR_O_IGUAL   reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    IGUAL           reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)
    NO_IGUAL        reduce using rule 46 (operacion_mat_pos -> operacion_mat_sin_par .)


state 72

    (164) operacion_log_not_con_par -> LPARENT NEGACION . operando_log_not RPARENT
    (161) operacion_log_not_sin_par -> NEGACION . operando_log_not
    (154) operando_log_not -> . bool
    (155) operando_log_not -> . operacion_log_con_par
    (156) operando_log_not -> . VARIABLE
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT

    VARIABLE        shift and go to state 106
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LPARENT         shift and go to state 107

    operando_log_not               shift and go to state 140
    bool                           shift and go to state 104
    operacion_log_con_par          shift and go to state 105

state 73

    (130) operacion_comp_con_par -> LPARENT operacion_comp_sin_par . RPARENT
    (133) operacion_comp -> operacion_comp_sin_par .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 141
    AND             reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    OR              reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)
    AS              reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .)

  ! RPARENT         [ reduce using rule 133 (operacion_comp -> operacion_comp_sin_par .) ]


state 74

    (89) operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par . RPARENT
    (91) operacion_comp_orden -> operacion_comp_orden_sin_par .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 142
    AND             reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    OR              reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    AS              reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    IGUAL           reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)
    NO_IGUAL        reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .)

  ! RPARENT         [ reduce using rule 91 (operacion_comp_orden -> operacion_comp_orden_sin_par .) ]


state 75

    (71) valor -> VARIABLE .
    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (144) operandos_log -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (80) operando_comp_orden -> VARIABLE .
    (178) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (179) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (192) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (109) operando_comp_eq -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57
    AND             reduce using rule 144 (operandos_log -> VARIABLE .)
    OR              reduce using rule 144 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 144 (operandos_log -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    AUTOINCREMENTO  shift and go to state 58
    AUTODECREMENTO  shift and go to state 59
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! AS              [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! AS              [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]

    operador_mat                   shift and go to state 143

state 76

    (73) valor -> indexacion .
    (147) operandos_log -> indexacion .
    (13) operando_mat -> indexacion .
    (81) operando_comp_orden -> indexacion .
    (107) operando_comp_eq -> indexacion .

  ! reduce/reduce conflict for AS resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 147 (operandos_log -> indexacion .)
    OR              reduce using rule 147 (operandos_log -> indexacion .)
    RPARENT         reduce using rule 147 (operandos_log -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)

  ! AS              [ reduce using rule 73 (valor -> indexacion .) ]
  ! AS              [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! IGUAL           [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]


state 77

    (75) valor -> ejecutar_funcion .
    (146) operandos_log -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (82) operando_comp_orden -> ejecutar_funcion .
    (108) operando_comp_eq -> ejecutar_funcion .

  ! reduce/reduce conflict for AS resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    RPARENT         reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! AS              [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]


state 78

    (76) valor -> negativo .
    (14) operando_mat -> negativo .
    (83) operando_comp_orden -> negativo .
    (111) operando_comp_eq -> negativo .

  ! reduce/reduce conflict for AS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)

  ! AS              [ reduce using rule 76 (valor -> negativo .) ]
  ! MAYOR_QUE       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MENOR_QUE       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! IGUAL           [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! NO_IGUAL        [ reduce using rule 111 (operando_comp_eq -> negativo .) ]


state 79

    (149) operacion_log_sin_par -> operandos_log . operadores_log operacion_log
    (150) operacion_log_sin_par -> operandos_log .
    (174) operacion_log -> operandos_log .
    (136) operadores_log -> . AND
    (137) operadores_log -> . OR

  ! reduce/reduce conflict for AS resolved using rule 150 (operacion_log_sin_par -> operandos_log .)
    RPARENT         reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    AS              reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    AND             shift and go to state 91
    OR              shift and go to state 92

  ! AS              [ reduce using rule 174 (operacion_log -> operandos_log .) ]

    operadores_log                 shift and go to state 93

state 80

    (27) operacion_mat_sin_par -> operando_mat . operador_mat operacion_mat
    (47) operacion_mat_pos -> operando_mat .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

    AS              reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    MAYOR_QUE       reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    MENOR_QUE       reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    MENOR_O_IGUAL   reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    MAYOR_O_IGUAL   reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    IGUAL           reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    NO_IGUAL        reduce using rule 47 (operacion_mat_pos -> operando_mat .)
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

    operador_mat                   shift and go to state 102

state 81

    (185) operaciones -> operacion_mat .
    (78) operando_comp_orden -> operacion_mat .
    (104) operando_comp_eq -> operacion_mat .

    AS              reduce using rule 185 (operaciones -> operacion_mat .)
    MAYOR_QUE       reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    MENOR_QUE       reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    MENOR_O_IGUAL   reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    MAYOR_O_IGUAL   reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    IGUAL           reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    NO_IGUAL        reduce using rule 104 (operando_comp_eq -> operacion_mat .)


state 82

    (62) datos -> numero .
    (11) operando_mat -> numero .
    (79) operando_comp_orden -> numero .
    (101) operando_comp_eq -> numero .

  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)

  ! AS              [ reduce using rule 62 (datos -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! IGUAL           [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 101 (operando_comp_eq -> numero .) ]


state 83

    (143) operandos_log -> operacion_log_not .
    (173) operacion_log -> operacion_log_not .

  ! reduce/reduce conflict for AS resolved using rule 143 (operandos_log -> operacion_log_not .)
    AND             reduce using rule 143 (operandos_log -> operacion_log_not .)
    OR              reduce using rule 143 (operandos_log -> operacion_log_not .)
    RPARENT         reduce using rule 143 (operandos_log -> operacion_log_not .)
    AS              reduce using rule 143 (operandos_log -> operacion_log_not .)

  ! AS              [ reduce using rule 173 (operacion_log -> operacion_log_not .) ]


state 84

    (85) negativo -> RESTA numero .

    COMA            reduce using rule 85 (negativo -> RESTA numero .)
    $end            reduce using rule 85 (negativo -> RESTA numero .)
    MAS             reduce using rule 85 (negativo -> RESTA numero .)
    RESTA           reduce using rule 85 (negativo -> RESTA numero .)
    MULTIPL         reduce using rule 85 (negativo -> RESTA numero .)
    DIVISION        reduce using rule 85 (negativo -> RESTA numero .)
    IGUAL           reduce using rule 85 (negativo -> RESTA numero .)
    NO_IGUAL        reduce using rule 85 (negativo -> RESTA numero .)
    MAYOR_QUE       reduce using rule 85 (negativo -> RESTA numero .)
    MENOR_QUE       reduce using rule 85 (negativo -> RESTA numero .)
    MENOR_O_IGUAL   reduce using rule 85 (negativo -> RESTA numero .)
    MAYOR_O_IGUAL   reduce using rule 85 (negativo -> RESTA numero .)
    CORCH_DER       reduce using rule 85 (negativo -> RESTA numero .)
    AS              reduce using rule 85 (negativo -> RESTA numero .)
    DOSPUNTOS       reduce using rule 85 (negativo -> RESTA numero .)
    LLAVER          reduce using rule 85 (negativo -> RESTA numero .)
    RPARENT         reduce using rule 85 (negativo -> RESTA numero .)
    CORCH_IZQ       reduce using rule 85 (negativo -> RESTA numero .)
    AND             reduce using rule 85 (negativo -> RESTA numero .)
    OR              reduce using rule 85 (negativo -> RESTA numero .)


state 85

    (86) negativo -> RESTA VARIABLE .
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
    COMA            reduce using rule 86 (negativo -> RESTA VARIABLE .)
    $end            reduce using rule 86 (negativo -> RESTA VARIABLE .)
    MAS             reduce using rule 86 (negativo -> RESTA VARIABLE .)
    RESTA           reduce using rule 86 (negativo -> RESTA VARIABLE .)
    MULTIPL         reduce using rule 86 (negativo -> RESTA VARIABLE .)
    DIVISION        reduce using rule 86 (negativo -> RESTA VARIABLE .)
    IGUAL           reduce using rule 86 (negativo -> RESTA VARIABLE .)
    NO_IGUAL        reduce using rule 86 (negativo -> RESTA VARIABLE .)
    MAYOR_QUE       reduce using rule 86 (negativo -> RESTA VARIABLE .)
    MENOR_QUE       reduce using rule 86 (negativo -> RESTA VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 86 (negativo -> RESTA VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 86 (negativo -> RESTA VARIABLE .)
    CORCH_DER       reduce using rule 86 (negativo -> RESTA VARIABLE .)
    AS              reduce using rule 86 (negativo -> RESTA VARIABLE .)
    DOSPUNTOS       reduce using rule 86 (negativo -> RESTA VARIABLE .)
    LLAVER          reduce using rule 86 (negativo -> RESTA VARIABLE .)
    RPARENT         reduce using rule 86 (negativo -> RESTA VARIABLE .)
    AND             reduce using rule 86 (negativo -> RESTA VARIABLE .)
    OR              reduce using rule 86 (negativo -> RESTA VARIABLE .)
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57

  ! CORCH_IZQ       [ reduce using rule 86 (negativo -> RESTA VARIABLE .) ]


state 86

    (87) negativo -> RESTA indexacion .

    COMA            reduce using rule 87 (negativo -> RESTA indexacion .)
    $end            reduce using rule 87 (negativo -> RESTA indexacion .)
    MAS             reduce using rule 87 (negativo -> RESTA indexacion .)
    RESTA           reduce using rule 87 (negativo -> RESTA indexacion .)
    MULTIPL         reduce using rule 87 (negativo -> RESTA indexacion .)
    DIVISION        reduce using rule 87 (negativo -> RESTA indexacion .)
    IGUAL           reduce using rule 87 (negativo -> RESTA indexacion .)
    NO_IGUAL        reduce using rule 87 (negativo -> RESTA indexacion .)
    MAYOR_QUE       reduce using rule 87 (negativo -> RESTA indexacion .)
    MENOR_QUE       reduce using rule 87 (negativo -> RESTA indexacion .)
    MENOR_O_IGUAL   reduce using rule 87 (negativo -> RESTA indexacion .)
    MAYOR_O_IGUAL   reduce using rule 87 (negativo -> RESTA indexacion .)
    CORCH_DER       reduce using rule 87 (negativo -> RESTA indexacion .)
    AS              reduce using rule 87 (negativo -> RESTA indexacion .)
    DOSPUNTOS       reduce using rule 87 (negativo -> RESTA indexacion .)
    LLAVER          reduce using rule 87 (negativo -> RESTA indexacion .)
    RPARENT         reduce using rule 87 (negativo -> RESTA indexacion .)
    CORCH_IZQ       reduce using rule 87 (negativo -> RESTA indexacion .)
    AND             reduce using rule 87 (negativo -> RESTA indexacion .)
    OR              reduce using rule 87 (negativo -> RESTA indexacion .)


state 87

    (88) negativo -> RESTA ejecutar_funcion .

    COMA            reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    $end            reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    MAS             reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    RESTA           reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    MULTIPL         reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    DIVISION        reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    IGUAL           reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    NO_IGUAL        reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    MENOR_QUE       reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    CORCH_DER       reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    AS              reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    LLAVER          reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    RPARENT         reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    AND             reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)
    OR              reduce using rule 88 (negativo -> RESTA ejecutar_funcion .)


state 88

    (44) operacion_mat_pos -> RESTA operacion_mat_con_par .
    (56) operacion_mat_neg -> RESTA operacion_mat_con_par .
    (57) operacion_mat_neg -> RESTA operacion_mat_con_par . operador_mat operacion_mat_pos
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for COMA resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for $end resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for IGUAL resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for AS resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for LLAVER resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for RPARENT resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for AND resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
  ! reduce/reduce conflict for OR resolved using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    COMA            reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    $end            reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    IGUAL           reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    NO_IGUAL        reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MAYOR_QUE       reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MENOR_QUE       reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MENOR_O_IGUAL   reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MAYOR_O_IGUAL   reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    CORCH_DER       reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    AS              reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    DOSPUNTOS       reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    LLAVER          reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    RPARENT         reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    CORCH_IZQ       reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    AND             reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    OR              reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! COMA            [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! $end            [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! IGUAL           [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! NO_IGUAL        [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! MAYOR_QUE       [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! MENOR_QUE       [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! CORCH_DER       [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! AS              [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! DOSPUNTOS       [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! LLAVER          [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! RPARENT         [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! CORCH_IZQ       [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! AND             [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]
  ! OR              [ reduce using rule 56 (operacion_mat_neg -> RESTA operacion_mat_con_par .) ]

    operador_mat                   shift and go to state 144

state 89

    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    VARIABLE        shift and go to state 120
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    RESTA           shift and go to state 148
    LPARENT         shift and go to state 145

    operacion_mat_sin_par          shift and go to state 146
    operando_mat                   shift and go to state 147
    numero                         shift and go to state 125
    indexacion                     shift and go to state 126
    negativo                       shift and go to state 127
    ejecutar_funcion               shift and go to state 128
    casting_num                    shift and go to state 45

state 90

    (171) operacion_log -> operacion_log_con_par operadores_log . operacion_log
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    LPARENT         shift and go to state 150
    VARIABLE        shift and go to state 151
    NEGACION        shift and go to state 46
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 156
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    RESTA           shift and go to state 25

    operacion_log_con_par          shift and go to state 32
    operacion_log                  shift and go to state 149
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    bool                           shift and go to state 152
    ejecutar_funcion               shift and go to state 153
    indexacion                     shift and go to state 154
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    numero                         shift and go to state 155
    operacion_mat                  shift and go to state 157
    negativo                       shift and go to state 158
    operando_comp_orden            shift and go to state 54
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    casting_num                    shift and go to state 45

state 91

    (136) operadores_log -> AND .

    LPARENT         reduce using rule 136 (operadores_log -> AND .)
    VARIABLE        reduce using rule 136 (operadores_log -> AND .)
    NEGACION        reduce using rule 136 (operadores_log -> AND .)
    TRUE            reduce using rule 136 (operadores_log -> AND .)
    FALSE           reduce using rule 136 (operadores_log -> AND .)
    CADENA          reduce using rule 136 (operadores_log -> AND .)
    INTEGER         reduce using rule 136 (operadores_log -> AND .)
    FLOAT           reduce using rule 136 (operadores_log -> AND .)
    RESTA           reduce using rule 136 (operadores_log -> AND .)


state 92

    (137) operadores_log -> OR .

    LPARENT         reduce using rule 137 (operadores_log -> OR .)
    VARIABLE        reduce using rule 137 (operadores_log -> OR .)
    NEGACION        reduce using rule 137 (operadores_log -> OR .)
    TRUE            reduce using rule 137 (operadores_log -> OR .)
    FALSE           reduce using rule 137 (operadores_log -> OR .)
    CADENA          reduce using rule 137 (operadores_log -> OR .)
    INTEGER         reduce using rule 137 (operadores_log -> OR .)
    FLOAT           reduce using rule 137 (operadores_log -> OR .)
    RESTA           reduce using rule 137 (operadores_log -> OR .)


state 93

    (149) operacion_log_sin_par -> operandos_log operadores_log . operacion_log
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    LPARENT         shift and go to state 150
    VARIABLE        shift and go to state 151
    NEGACION        shift and go to state 46
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    CADENA          shift and go to state 156
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    RESTA           shift and go to state 25

    operandos_log                  shift and go to state 35
    operacion_log                  shift and go to state 159
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    bool                           shift and go to state 152
    ejecutar_funcion               shift and go to state 153
    indexacion                     shift and go to state 154
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    numero                         shift and go to state 155
    operacion_mat                  shift and go to state 157
    negativo                       shift and go to state 158
    operando_comp_orden            shift and go to state 54
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    casting_num                    shift and go to state 45

state 94

    (180) operacion_unaria -> AUTOINCREMENTO VARIABLE .

    COMA            reduce using rule 180 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    $end            reduce using rule 180 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    CORCH_DER       reduce using rule 180 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    AS              reduce using rule 180 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    DOSPUNTOS       reduce using rule 180 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    LLAVER          reduce using rule 180 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    RPARENT         reduce using rule 180 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)
    CORCH_IZQ       reduce using rule 180 (operacion_unaria -> AUTOINCREMENTO VARIABLE .)


state 95

    (181) operacion_unaria -> AUTODECREMENTO VARIABLE .

    COMA            reduce using rule 181 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    $end            reduce using rule 181 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    CORCH_DER       reduce using rule 181 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    AS              reduce using rule 181 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    DOSPUNTOS       reduce using rule 181 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    LLAVER          reduce using rule 181 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    RPARENT         reduce using rule 181 (operacion_unaria -> AUTODECREMENTO VARIABLE .)
    CORCH_IZQ       reduce using rule 181 (operacion_unaria -> AUTODECREMENTO VARIABLE .)


state 96

    (29) conjunto -> LLAVEL valores . LLAVER

    LLAVER          shift and go to state 160


state 97

    (30) conjunto -> LLAVEL LLAVER .
    (42) mapa -> LLAVEL LLAVER .

  ! reduce/reduce conflict for COMA resolved using rule 30 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for $end resolved using rule 30 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 30 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for AS resolved using rule 30 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 30 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for LLAVER resolved using rule 30 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for RPARENT resolved using rule 30 (conjunto -> LLAVEL LLAVER .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 30 (conjunto -> LLAVEL LLAVER .)
    COMA            reduce using rule 30 (conjunto -> LLAVEL LLAVER .)
    $end            reduce using rule 30 (conjunto -> LLAVEL LLAVER .)
    CORCH_DER       reduce using rule 30 (conjunto -> LLAVEL LLAVER .)
    AS              reduce using rule 30 (conjunto -> LLAVEL LLAVER .)
    DOSPUNTOS       reduce using rule 30 (conjunto -> LLAVEL LLAVER .)
    LLAVER          reduce using rule 30 (conjunto -> LLAVEL LLAVER .)
    RPARENT         reduce using rule 30 (conjunto -> LLAVEL LLAVER .)
    CORCH_IZQ       reduce using rule 30 (conjunto -> LLAVEL LLAVER .)

  ! COMA            [ reduce using rule 42 (mapa -> LLAVEL LLAVER .) ]
  ! $end            [ reduce using rule 42 (mapa -> LLAVEL LLAVER .) ]
  ! CORCH_DER       [ reduce using rule 42 (mapa -> LLAVEL LLAVER .) ]
  ! AS              [ reduce using rule 42 (mapa -> LLAVEL LLAVER .) ]
  ! DOSPUNTOS       [ reduce using rule 42 (mapa -> LLAVEL LLAVER .) ]
  ! LLAVER          [ reduce using rule 42 (mapa -> LLAVEL LLAVER .) ]
  ! RPARENT         [ reduce using rule 42 (mapa -> LLAVEL LLAVER .) ]
  ! CORCH_IZQ       [ reduce using rule 42 (mapa -> LLAVEL LLAVER .) ]


state 98

    (41) mapa -> LLAVEL claves_valores . LLAVER

    LLAVER          shift and go to state 161


state 99

    (1) valores -> valor .
    (2) valores -> valor . COMA valores
    (8) clave_valor -> valor . DOSPUNTOS valor

    LLAVER          reduce using rule 1 (valores -> valor .)
    COMA            shift and go to state 55
    DOSPUNTOS       shift and go to state 162


state 100

    (17) claves_valores -> clave_valor .
    (18) claves_valores -> clave_valor . COMA claves_valores

    LLAVER          reduce using rule 17 (claves_valores -> clave_valor .)
    COMA            shift and go to state 163


state 101

    (45) operacion_mat_pos -> operacion_mat_con_par operador_mat . operacion_mat_pos
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    RESTA           shift and go to state 165
    LPARENT         shift and go to state 124
    VARIABLE        shift and go to state 120
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27

    operacion_mat_con_par          shift and go to state 39
    operacion_mat_pos              shift and go to state 164
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    numero                         shift and go to state 125
    indexacion                     shift and go to state 126
    negativo                       shift and go to state 127
    ejecutar_funcion               shift and go to state 128
    casting_num                    shift and go to state 45

state 102

    (27) operacion_mat_sin_par -> operando_mat operador_mat . operacion_mat
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    RESTA           shift and go to state 123
    LPARENT         shift and go to state 124
    VARIABLE        shift and go to state 120
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27

    operando_mat                   shift and go to state 41
    operacion_mat                  shift and go to state 166
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    numero                         shift and go to state 125
    indexacion                     shift and go to state 126
    negativo                       shift and go to state 127
    ejecutar_funcion               shift and go to state 128
    casting_num                    shift and go to state 45

state 103

    (161) operacion_log_not_sin_par -> NEGACION operando_log_not .

    COMA            reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    $end            reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    AND             reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    OR              reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    CORCH_DER       reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    DOSPUNTOS       reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    LLAVER          reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    RPARENT         reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    CORCH_IZQ       reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    AS              reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)


state 104

    (154) operando_log_not -> bool .

    COMA            reduce using rule 154 (operando_log_not -> bool .)
    $end            reduce using rule 154 (operando_log_not -> bool .)
    AND             reduce using rule 154 (operando_log_not -> bool .)
    OR              reduce using rule 154 (operando_log_not -> bool .)
    CORCH_DER       reduce using rule 154 (operando_log_not -> bool .)
    DOSPUNTOS       reduce using rule 154 (operando_log_not -> bool .)
    LLAVER          reduce using rule 154 (operando_log_not -> bool .)
    RPARENT         reduce using rule 154 (operando_log_not -> bool .)
    CORCH_IZQ       reduce using rule 154 (operando_log_not -> bool .)
    AS              reduce using rule 154 (operando_log_not -> bool .)


state 105

    (155) operando_log_not -> operacion_log_con_par .

    COMA            reduce using rule 155 (operando_log_not -> operacion_log_con_par .)
    $end            reduce using rule 155 (operando_log_not -> operacion_log_con_par .)
    AND             reduce using rule 155 (operando_log_not -> operacion_log_con_par .)
    OR              reduce using rule 155 (operando_log_not -> operacion_log_con_par .)
    CORCH_DER       reduce using rule 155 (operando_log_not -> operacion_log_con_par .)
    DOSPUNTOS       reduce using rule 155 (operando_log_not -> operacion_log_con_par .)
    LLAVER          reduce using rule 155 (operando_log_not -> operacion_log_con_par .)
    RPARENT         reduce using rule 155 (operando_log_not -> operacion_log_con_par .)
    CORCH_IZQ       reduce using rule 155 (operando_log_not -> operacion_log_con_par .)
    AS              reduce using rule 155 (operando_log_not -> operacion_log_con_par .)


state 106

    (156) operando_log_not -> VARIABLE .

    COMA            reduce using rule 156 (operando_log_not -> VARIABLE .)
    $end            reduce using rule 156 (operando_log_not -> VARIABLE .)
    AND             reduce using rule 156 (operando_log_not -> VARIABLE .)
    OR              reduce using rule 156 (operando_log_not -> VARIABLE .)
    CORCH_DER       reduce using rule 156 (operando_log_not -> VARIABLE .)
    DOSPUNTOS       reduce using rule 156 (operando_log_not -> VARIABLE .)
    LLAVER          reduce using rule 156 (operando_log_not -> VARIABLE .)
    RPARENT         reduce using rule 156 (operando_log_not -> VARIABLE .)
    CORCH_IZQ       reduce using rule 156 (operando_log_not -> VARIABLE .)
    AS              reduce using rule 156 (operando_log_not -> VARIABLE .)


state 107

    (152) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    VARIABLE        shift and go to state 151
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    LPARENT         shift and go to state 167
    NEGACION        shift and go to state 46
    CADENA          shift and go to state 156
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    RESTA           shift and go to state 25

    operacion_log_sin_par          shift and go to state 168
    operandos_log                  shift and go to state 169
    operacion_comp                 shift and go to state 44
    operacion_log_not              shift and go to state 170
    bool                           shift and go to state 152
    ejecutar_funcion               shift and go to state 153
    indexacion                     shift and go to state 154
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    numero                         shift and go to state 155
    operacion_mat                  shift and go to state 157
    operacion_log_con_par          shift and go to state 171
    negativo                       shift and go to state 158
    operando_comp_orden            shift and go to state 54
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    casting_num                    shift and go to state 45

state 108

    (123) operacion_comp_eq -> operando_comp_eq operador_comp_eq . operando_comp_eq
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    CADENA          shift and go to state 156
    VARIABLE        shift and go to state 179
    LPARENT         shift and go to state 181
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    RESTA           shift and go to state 25

    operando_comp_eq               shift and go to state 172
    numero                         shift and go to state 173
    bool                           shift and go to state 174
    operacion_mat                  shift and go to state 157
    operacion_comp_orden           shift and go to state 175
    operacion_comp_con_par         shift and go to state 176
    indexacion                     shift and go to state 177
    ejecutar_funcion               shift and go to state 178
    operacion_log_con_par          shift and go to state 171
    negativo                       shift and go to state 180
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    operando_comp_orden            shift and go to state 54
    casting_num                    shift and go to state 45

state 109

    (117) operador_comp_eq -> IGUAL .

    CADENA          reduce using rule 117 (operador_comp_eq -> IGUAL .)
    VARIABLE        reduce using rule 117 (operador_comp_eq -> IGUAL .)
    LPARENT         reduce using rule 117 (operador_comp_eq -> IGUAL .)
    INTEGER         reduce using rule 117 (operador_comp_eq -> IGUAL .)
    FLOAT           reduce using rule 117 (operador_comp_eq -> IGUAL .)
    TRUE            reduce using rule 117 (operador_comp_eq -> IGUAL .)
    FALSE           reduce using rule 117 (operador_comp_eq -> IGUAL .)
    RESTA           reduce using rule 117 (operador_comp_eq -> IGUAL .)


state 110

    (118) operador_comp_eq -> NO_IGUAL .

    CADENA          reduce using rule 118 (operador_comp_eq -> NO_IGUAL .)
    VARIABLE        reduce using rule 118 (operador_comp_eq -> NO_IGUAL .)
    LPARENT         reduce using rule 118 (operador_comp_eq -> NO_IGUAL .)
    INTEGER         reduce using rule 118 (operador_comp_eq -> NO_IGUAL .)
    FLOAT           reduce using rule 118 (operador_comp_eq -> NO_IGUAL .)
    TRUE            reduce using rule 118 (operador_comp_eq -> NO_IGUAL .)
    FALSE           reduce using rule 118 (operador_comp_eq -> NO_IGUAL .)
    RESTA           reduce using rule 118 (operador_comp_eq -> NO_IGUAL .)


state 111

    (84) operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden . operando_comp_orden
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    VARIABLE        shift and go to state 185
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 124

    operando_comp_orden            shift and go to state 182
    operacion_mat                  shift and go to state 183
    numero                         shift and go to state 184
    indexacion                     shift and go to state 186
    ejecutar_funcion               shift and go to state 187
    negativo                       shift and go to state 188
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    casting_num                    shift and go to state 45

state 112

    (65) operador_comp_orden -> MAYOR_QUE .

    VARIABLE        reduce using rule 65 (operador_comp_orden -> MAYOR_QUE .)
    INTEGER         reduce using rule 65 (operador_comp_orden -> MAYOR_QUE .)
    FLOAT           reduce using rule 65 (operador_comp_orden -> MAYOR_QUE .)
    RESTA           reduce using rule 65 (operador_comp_orden -> MAYOR_QUE .)
    LPARENT         reduce using rule 65 (operador_comp_orden -> MAYOR_QUE .)


state 113

    (66) operador_comp_orden -> MENOR_QUE .

    VARIABLE        reduce using rule 66 (operador_comp_orden -> MENOR_QUE .)
    INTEGER         reduce using rule 66 (operador_comp_orden -> MENOR_QUE .)
    FLOAT           reduce using rule 66 (operador_comp_orden -> MENOR_QUE .)
    RESTA           reduce using rule 66 (operador_comp_orden -> MENOR_QUE .)
    LPARENT         reduce using rule 66 (operador_comp_orden -> MENOR_QUE .)


state 114

    (67) operador_comp_orden -> MENOR_O_IGUAL .

    VARIABLE        reduce using rule 67 (operador_comp_orden -> MENOR_O_IGUAL .)
    INTEGER         reduce using rule 67 (operador_comp_orden -> MENOR_O_IGUAL .)
    FLOAT           reduce using rule 67 (operador_comp_orden -> MENOR_O_IGUAL .)
    RESTA           reduce using rule 67 (operador_comp_orden -> MENOR_O_IGUAL .)
    LPARENT         reduce using rule 67 (operador_comp_orden -> MENOR_O_IGUAL .)


state 115

    (68) operador_comp_orden -> MAYOR_O_IGUAL .

    VARIABLE        reduce using rule 68 (operador_comp_orden -> MAYOR_O_IGUAL .)
    INTEGER         reduce using rule 68 (operador_comp_orden -> MAYOR_O_IGUAL .)
    FLOAT           reduce using rule 68 (operador_comp_orden -> MAYOR_O_IGUAL .)
    RESTA           reduce using rule 68 (operador_comp_orden -> MAYOR_O_IGUAL .)
    LPARENT         reduce using rule 68 (operador_comp_orden -> MAYOR_O_IGUAL .)


state 116

    (2) valores -> valor COMA valores .

    $end            reduce using rule 2 (valores -> valor COMA valores .)
    CORCH_DER       reduce using rule 2 (valores -> valor COMA valores .)
    LLAVER          reduce using rule 2 (valores -> valor COMA valores .)
    RPARENT         reduce using rule 2 (valores -> valor COMA valores .)


state 117

    (90) indexacion -> VARIABLE CORCH_IZQ valor . CORCH_IZQ

    CORCH_IZQ       shift and go to state 189


state 118

    (190) ejecutar_funcion -> VARIABLE LPARENT valores . RPARENT

    RPARENT         shift and go to state 190


state 119

    (191) ejecutar_funcion -> VARIABLE LPARENT RPARENT .

    COMA            reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    $end            reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    AND             reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    OR              reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MAS             reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    RESTA           reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MULTIPL         reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    DIVISION        reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    IGUAL           reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    NO_IGUAL        reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MAYOR_QUE       reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MENOR_QUE       reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MENOR_O_IGUAL   reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    MAYOR_O_IGUAL   reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    CORCH_DER       reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    AS              reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    RPARENT         reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    DOSPUNTOS       reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    LLAVER          reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)
    CORCH_IZQ       reduce using rule 191 (ejecutar_funcion -> VARIABLE LPARENT RPARENT .)


state 120

    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (12) operando_mat -> VARIABLE .
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    COMA            reduce using rule 12 (operando_mat -> VARIABLE .)
    $end            reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    CORCH_DER       reduce using rule 12 (operando_mat -> VARIABLE .)
    DOSPUNTOS       reduce using rule 12 (operando_mat -> VARIABLE .)
    LLAVER          reduce using rule 12 (operando_mat -> VARIABLE .)
    RPARENT         reduce using rule 12 (operando_mat -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    AND             reduce using rule 12 (operando_mat -> VARIABLE .)
    OR              reduce using rule 12 (operando_mat -> VARIABLE .)
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 12 (operando_mat -> VARIABLE .) ]

    operador_mat                   shift and go to state 191

state 121

    (192) operacion_autoasig -> VARIABLE operador_mat IGUAL . operacion_mat
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    RESTA           shift and go to state 123
    LPARENT         shift and go to state 124
    VARIABLE        shift and go to state 120
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27

    operacion_mat                  shift and go to state 192
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    numero                         shift and go to state 125
    indexacion                     shift and go to state 126
    negativo                       shift and go to state 127
    ejecutar_funcion               shift and go to state 128
    casting_num                    shift and go to state 45

state 122

    (28) operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .

    COMA            reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    $end            reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    IGUAL           reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    NO_IGUAL        reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    MAYOR_QUE       reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    MENOR_QUE       reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    MENOR_O_IGUAL   reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    MAYOR_O_IGUAL   reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    CORCH_DER       reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    RPARENT         reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    AS              reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    DOSPUNTOS       reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    LLAVER          reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    CORCH_IZQ       reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    AND             reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)
    OR              reduce using rule 28 (operacion_mat_sin_par -> VARIABLE operador_mat operacion_mat .)


state 123

    (44) operacion_mat_pos -> RESTA . operacion_mat_con_par
    (56) operacion_mat_neg -> RESTA . operacion_mat_con_par
    (57) operacion_mat_neg -> RESTA . operacion_mat_con_par operador_mat operacion_mat_pos
    (85) negativo -> RESTA . numero
    (86) negativo -> RESTA . VARIABLE
    (87) negativo -> RESTA . indexacion
    (88) negativo -> RESTA . ejecutar_funcion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT

    VARIABLE        shift and go to state 85
    LPARENT         shift and go to state 89
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27

    operacion_mat_con_par          shift and go to state 88
    numero                         shift and go to state 84
    indexacion                     shift and go to state 86
    ejecutar_funcion               shift and go to state 87

state 124

    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 195
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 193
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    operacion_mat_sin_par          shift and go to state 71
    valor                          shift and go to state 194
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 15
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 196
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 197
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 198
    casting_num                    shift and go to state 45
    bool                           shift and go to state 14
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 39
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operando_comp_orden            shift and go to state 54

state 125

    (11) operando_mat -> numero .

    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    COMA            reduce using rule 11 (operando_mat -> numero .)
    $end            reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    CORCH_DER       reduce using rule 11 (operando_mat -> numero .)
    DOSPUNTOS       reduce using rule 11 (operando_mat -> numero .)
    LLAVER          reduce using rule 11 (operando_mat -> numero .)
    RPARENT         reduce using rule 11 (operando_mat -> numero .)
    CORCH_IZQ       reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    AND             reduce using rule 11 (operando_mat -> numero .)
    OR              reduce using rule 11 (operando_mat -> numero .)


state 126

    (13) operando_mat -> indexacion .

    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    COMA            reduce using rule 13 (operando_mat -> indexacion .)
    $end            reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_DER       reduce using rule 13 (operando_mat -> indexacion .)
    DOSPUNTOS       reduce using rule 13 (operando_mat -> indexacion .)
    LLAVER          reduce using rule 13 (operando_mat -> indexacion .)
    RPARENT         reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_IZQ       reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 13 (operando_mat -> indexacion .)
    OR              reduce using rule 13 (operando_mat -> indexacion .)


state 127

    (14) operando_mat -> negativo .

    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    COMA            reduce using rule 14 (operando_mat -> negativo .)
    $end            reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    CORCH_DER       reduce using rule 14 (operando_mat -> negativo .)
    DOSPUNTOS       reduce using rule 14 (operando_mat -> negativo .)
    LLAVER          reduce using rule 14 (operando_mat -> negativo .)
    RPARENT         reduce using rule 14 (operando_mat -> negativo .)
    CORCH_IZQ       reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)
    AND             reduce using rule 14 (operando_mat -> negativo .)
    OR              reduce using rule 14 (operando_mat -> negativo .)


state 128

    (15) operando_mat -> ejecutar_funcion .

    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    COMA            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    $end            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_DER       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    LLAVER          reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RPARENT         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    OR              reduce using rule 15 (operando_mat -> ejecutar_funcion .)


state 129

    (22) lista -> CORCH_IZQ valores CORCH_DER .

    COMA            reduce using rule 22 (lista -> CORCH_IZQ valores CORCH_DER .)
    $end            reduce using rule 22 (lista -> CORCH_IZQ valores CORCH_DER .)
    CORCH_DER       reduce using rule 22 (lista -> CORCH_IZQ valores CORCH_DER .)
    AS              reduce using rule 22 (lista -> CORCH_IZQ valores CORCH_DER .)
    DOSPUNTOS       reduce using rule 22 (lista -> CORCH_IZQ valores CORCH_DER .)
    LLAVER          reduce using rule 22 (lista -> CORCH_IZQ valores CORCH_DER .)
    RPARENT         reduce using rule 22 (lista -> CORCH_IZQ valores CORCH_DER .)
    CORCH_IZQ       reduce using rule 22 (lista -> CORCH_IZQ valores CORCH_DER .)


state 130

    (165) read -> STDIN PUNTO READLINESYNC . LPARENT RPARENT

    LPARENT         shift and go to state 199


state 131

    (193) casting -> LPARENT . valor AS tipo_dato RPARENT
    (112) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (152) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (130) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (164) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 132
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 131
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38

    valor                          shift and go to state 200
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_log_sin_par          shift and go to state 70
    operacion_comp_sin_par         shift and go to state 73
    operacion_mat_sin_par          shift and go to state 71
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 133
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 134
    negativo                       shift and go to state 135
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 54
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    numero                         shift and go to state 136
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_comp                 shift and go to state 44
    operacion_log_not              shift and go to state 83
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_con_par   shift and go to state 53
    casting_num                    shift and go to state 45
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 47
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_mat_con_par          shift and go to state 39

state 132

    (71) valor -> VARIABLE .
    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (80) operando_comp_orden -> VARIABLE .
    (144) operandos_log -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (178) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (179) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (192) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (109) operando_comp_eq -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57
    AND             reduce using rule 144 (operandos_log -> VARIABLE .)
    OR              reduce using rule 144 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 144 (operandos_log -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    AUTOINCREMENTO  shift and go to state 58
    AUTODECREMENTO  shift and go to state 59
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! AS              [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! AS              [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]

    operador_mat                   shift and go to state 143

state 133

    (73) valor -> indexacion .
    (81) operando_comp_orden -> indexacion .
    (147) operandos_log -> indexacion .
    (13) operando_mat -> indexacion .
    (107) operando_comp_eq -> indexacion .

  ! reduce/reduce conflict for AS resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 147 (operandos_log -> indexacion .)
    OR              reduce using rule 147 (operandos_log -> indexacion .)
    RPARENT         reduce using rule 147 (operandos_log -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)

  ! AS              [ reduce using rule 73 (valor -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! AS              [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! IGUAL           [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]


state 134

    (75) valor -> ejecutar_funcion .
    (82) operando_comp_orden -> ejecutar_funcion .
    (146) operandos_log -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (108) operando_comp_eq -> ejecutar_funcion .

  ! reduce/reduce conflict for AS resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    RPARENT         reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! AS              [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]


state 135

    (76) valor -> negativo .
    (83) operando_comp_orden -> negativo .
    (14) operando_mat -> negativo .
    (111) operando_comp_eq -> negativo .

  ! reduce/reduce conflict for AS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)

  ! AS              [ reduce using rule 76 (valor -> negativo .) ]
  ! MAYOR_QUE       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MENOR_QUE       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! IGUAL           [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! NO_IGUAL        [ reduce using rule 111 (operando_comp_eq -> negativo .) ]


state 136

    (62) datos -> numero .
    (79) operando_comp_orden -> numero .
    (11) operando_mat -> numero .
    (101) operando_comp_eq -> numero .

  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)

  ! AS              [ reduce using rule 62 (datos -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! IGUAL           [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 101 (operando_comp_eq -> numero .) ]


state 137

    (193) casting -> LPARENT valor AS . tipo_dato RPARENT
    (24) casting_num -> LPARENT valor AS . INT RPARENT
    (25) casting_num -> LPARENT valor AS . DOUBLE RPARENT
    (112) operando_comp_eq -> LPARENT valor AS . BOOL RPARENT
    (93) tipo_dato -> . BOOL
    (94) tipo_dato -> . DOUBLE
    (95) tipo_dato -> . INT
    (96) tipo_dato -> . STRING
    (97) tipo_dato -> . VOID
    (98) tipo_dato -> . LIST
    (99) tipo_dato -> . SET
    (100) tipo_dato -> . MAP

    INT             shift and go to state 202
    DOUBLE          shift and go to state 203
    BOOL            shift and go to state 204
    STRING          shift and go to state 205
    VOID            shift and go to state 206
    LIST            shift and go to state 207
    SET             shift and go to state 208
    MAP             shift and go to state 209

    tipo_dato                      shift and go to state 201

state 138

    (152) operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .

    AND             reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    OR              reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    COMA            reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    $end            reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    IGUAL           reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    NO_IGUAL        reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    CORCH_DER       reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    AS              reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    DOSPUNTOS       reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    LLAVER          reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    RPARENT         reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)
    CORCH_IZQ       reduce using rule 152 (operacion_log_con_par -> LPARENT operacion_log_sin_par RPARENT .)


state 139

    (40) operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .

    MAS             reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    RESTA           reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    MULTIPL         reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    DIVISION        reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    COMA            reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    $end            reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    IGUAL           reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    NO_IGUAL        reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    MAYOR_QUE       reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    MENOR_QUE       reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    MENOR_O_IGUAL   reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    MAYOR_O_IGUAL   reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    CORCH_DER       reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    AS              reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    DOSPUNTOS       reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    LLAVER          reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    RPARENT         reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    CORCH_IZQ       reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    AND             reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)
    OR              reduce using rule 40 (operacion_mat_con_par -> LPARENT operacion_mat_sin_par RPARENT .)


state 140

    (164) operacion_log_not_con_par -> LPARENT NEGACION operando_log_not . RPARENT
    (161) operacion_log_not_sin_par -> NEGACION operando_log_not .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 210
    AND             reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    OR              reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)
    AS              reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .)

  ! RPARENT         [ reduce using rule 161 (operacion_log_not_sin_par -> NEGACION operando_log_not .) ]


state 141

    (130) operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .

    AND             reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    OR              reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    COMA            reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    $end            reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    IGUAL           reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    NO_IGUAL        reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    CORCH_DER       reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    RPARENT         reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    AS              reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    DOSPUNTOS       reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    LLAVER          reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)
    CORCH_IZQ       reduce using rule 130 (operacion_comp_con_par -> LPARENT operacion_comp_sin_par RPARENT .)


state 142

    (89) operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .

    AND             reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    OR              reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    COMA            reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    $end            reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    IGUAL           reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    NO_IGUAL        reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    CORCH_DER       reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    RPARENT         reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    AS              reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    DOSPUNTOS       reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    LLAVER          reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)
    CORCH_IZQ       reduce using rule 89 (operacion_comp_orden_con_par -> LPARENT operacion_comp_orden_sin_par RPARENT .)


state 143

    (28) operacion_mat_sin_par -> VARIABLE operador_mat . operacion_mat
    (192) operacion_autoasig -> VARIABLE operador_mat . IGUAL operacion_mat
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    IGUAL           shift and go to state 121
    RESTA           shift and go to state 123
    LPARENT         shift and go to state 124
    VARIABLE        shift and go to state 120
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27

    operacion_mat                  shift and go to state 122
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    numero                         shift and go to state 125
    indexacion                     shift and go to state 126
    negativo                       shift and go to state 127
    ejecutar_funcion               shift and go to state 128
    casting_num                    shift and go to state 45

state 144

    (57) operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat . operacion_mat_pos
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    RESTA           shift and go to state 165
    LPARENT         shift and go to state 124
    VARIABLE        shift and go to state 120
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27

    operacion_mat_con_par          shift and go to state 39
    operacion_mat_pos              shift and go to state 211
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    numero                         shift and go to state 125
    indexacion                     shift and go to state 126
    negativo                       shift and go to state 127
    ejecutar_funcion               shift and go to state 128
    casting_num                    shift and go to state 45

state 145

    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 24
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    valor                          shift and go to state 194
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operando_comp_orden            shift and go to state 54

state 146

    (40) operacion_mat_con_par -> LPARENT operacion_mat_sin_par . RPARENT

    RPARENT         shift and go to state 139


state 147

    (27) operacion_mat_sin_par -> operando_mat . operador_mat operacion_mat
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

    operador_mat                   shift and go to state 102

state 148

    (85) negativo -> RESTA . numero
    (86) negativo -> RESTA . VARIABLE
    (87) negativo -> RESTA . indexacion
    (88) negativo -> RESTA . ejecutar_funcion
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT

    VARIABLE        shift and go to state 85
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27

    numero                         shift and go to state 84
    indexacion                     shift and go to state 86
    ejecutar_funcion               shift and go to state 87

state 149

    (171) operacion_log -> operacion_log_con_par operadores_log operacion_log .

    COMA            reduce using rule 171 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    $end            reduce using rule 171 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    CORCH_DER       reduce using rule 171 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    AS              reduce using rule 171 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    DOSPUNTOS       reduce using rule 171 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    LLAVER          reduce using rule 171 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    RPARENT         reduce using rule 171 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)
    CORCH_IZQ       reduce using rule 171 (operacion_log -> operacion_log_con_par operadores_log operacion_log .)


state 150

    (152) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (164) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (130) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (112) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 214
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 212
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38

    operacion_log_sin_par          shift and go to state 70
    operacion_comp_sin_par         shift and go to state 73
    valor                          shift and go to state 213
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_mat_sin_par          shift and go to state 71
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 215
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 216
    negativo                       shift and go to state 135
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 54
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    operacion_comp                 shift and go to state 44
    operacion_log_not              shift and go to state 83
    bool                           shift and go to state 217
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_con_par   shift and go to state 53
    numero                         shift and go to state 136
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 47
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_log_con_par          shift and go to state 218
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 39

state 151

    (144) operandos_log -> VARIABLE .
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (109) operando_comp_eq -> VARIABLE .
    (80) operando_comp_orden -> VARIABLE .
    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (12) operando_mat -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    AND             reduce using rule 144 (operandos_log -> VARIABLE .)
    OR              reduce using rule 144 (operandos_log -> VARIABLE .)
    COMA            reduce using rule 144 (operandos_log -> VARIABLE .)
    $end            reduce using rule 144 (operandos_log -> VARIABLE .)
    CORCH_DER       reduce using rule 144 (operandos_log -> VARIABLE .)
    AS              reduce using rule 144 (operandos_log -> VARIABLE .)
    DOSPUNTOS       reduce using rule 144 (operandos_log -> VARIABLE .)
    LLAVER          reduce using rule 144 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 144 (operandos_log -> VARIABLE .)
    LPARENT         shift and go to state 57
    CORCH_IZQ       shift and go to state 56
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! CORCH_IZQ       [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]

    operador_mat                   shift and go to state 191

state 152

    (145) operandos_log -> bool .
    (102) operando_comp_eq -> bool .

    AND             reduce using rule 145 (operandos_log -> bool .)
    OR              reduce using rule 145 (operandos_log -> bool .)
    COMA            reduce using rule 145 (operandos_log -> bool .)
    $end            reduce using rule 145 (operandos_log -> bool .)
    CORCH_DER       reduce using rule 145 (operandos_log -> bool .)
    AS              reduce using rule 145 (operandos_log -> bool .)
    DOSPUNTOS       reduce using rule 145 (operandos_log -> bool .)
    LLAVER          reduce using rule 145 (operandos_log -> bool .)
    RPARENT         reduce using rule 145 (operandos_log -> bool .)
    CORCH_IZQ       reduce using rule 145 (operandos_log -> bool .)
    IGUAL           reduce using rule 102 (operando_comp_eq -> bool .)
    NO_IGUAL        reduce using rule 102 (operando_comp_eq -> bool .)


state 153

    (146) operandos_log -> ejecutar_funcion .
    (108) operando_comp_eq -> ejecutar_funcion .
    (82) operando_comp_orden -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .

  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    COMA            reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    $end            reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    CORCH_DER       reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    AS              reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    LLAVER          reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    RPARENT         reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! IGUAL           [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]


state 154

    (147) operandos_log -> indexacion .
    (107) operando_comp_eq -> indexacion .
    (81) operando_comp_orden -> indexacion .
    (13) operando_mat -> indexacion .

  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 147 (operandos_log -> indexacion .)
    OR              reduce using rule 147 (operandos_log -> indexacion .)
    COMA            reduce using rule 147 (operandos_log -> indexacion .)
    $end            reduce using rule 147 (operandos_log -> indexacion .)
    CORCH_DER       reduce using rule 147 (operandos_log -> indexacion .)
    AS              reduce using rule 147 (operandos_log -> indexacion .)
    DOSPUNTOS       reduce using rule 147 (operandos_log -> indexacion .)
    LLAVER          reduce using rule 147 (operandos_log -> indexacion .)
    RPARENT         reduce using rule 147 (operandos_log -> indexacion .)
    CORCH_IZQ       reduce using rule 147 (operandos_log -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)

  ! IGUAL           [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]


state 155

    (101) operando_comp_eq -> numero .
    (79) operando_comp_orden -> numero .
    (11) operando_mat -> numero .

  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)

  ! IGUAL           [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]


state 156

    (103) operando_comp_eq -> CADENA .

    IGUAL           reduce using rule 103 (operando_comp_eq -> CADENA .)
    NO_IGUAL        reduce using rule 103 (operando_comp_eq -> CADENA .)
    AND             reduce using rule 103 (operando_comp_eq -> CADENA .)
    OR              reduce using rule 103 (operando_comp_eq -> CADENA .)
    COMA            reduce using rule 103 (operando_comp_eq -> CADENA .)
    $end            reduce using rule 103 (operando_comp_eq -> CADENA .)
    CORCH_DER       reduce using rule 103 (operando_comp_eq -> CADENA .)
    RPARENT         reduce using rule 103 (operando_comp_eq -> CADENA .)
    AS              reduce using rule 103 (operando_comp_eq -> CADENA .)
    DOSPUNTOS       reduce using rule 103 (operando_comp_eq -> CADENA .)
    LLAVER          reduce using rule 103 (operando_comp_eq -> CADENA .)
    CORCH_IZQ       reduce using rule 103 (operando_comp_eq -> CADENA .)


state 157

    (104) operando_comp_eq -> operacion_mat .
    (78) operando_comp_orden -> operacion_mat .

    IGUAL           reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    NO_IGUAL        reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    AND             reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    OR              reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    COMA            reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    $end            reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    CORCH_DER       reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    RPARENT         reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    AS              reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    DOSPUNTOS       reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    LLAVER          reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    CORCH_IZQ       reduce using rule 104 (operando_comp_eq -> operacion_mat .)
    MAYOR_QUE       reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    MENOR_QUE       reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    MENOR_O_IGUAL   reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    MAYOR_O_IGUAL   reduce using rule 78 (operando_comp_orden -> operacion_mat .)


state 158

    (111) operando_comp_eq -> negativo .
    (83) operando_comp_orden -> negativo .
    (14) operando_mat -> negativo .

  ! reduce/reduce conflict for IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)

  ! IGUAL           [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! NO_IGUAL        [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! MAYOR_QUE       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MENOR_QUE       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 83 (operando_comp_orden -> negativo .) ]


state 159

    (149) operacion_log_sin_par -> operandos_log operadores_log operacion_log .

    COMA            reduce using rule 149 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    $end            reduce using rule 149 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    CORCH_DER       reduce using rule 149 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    RPARENT         reduce using rule 149 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    AS              reduce using rule 149 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    DOSPUNTOS       reduce using rule 149 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    LLAVER          reduce using rule 149 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)
    CORCH_IZQ       reduce using rule 149 (operacion_log_sin_par -> operandos_log operadores_log operacion_log .)


state 160

    (29) conjunto -> LLAVEL valores LLAVER .

    COMA            reduce using rule 29 (conjunto -> LLAVEL valores LLAVER .)
    $end            reduce using rule 29 (conjunto -> LLAVEL valores LLAVER .)
    CORCH_DER       reduce using rule 29 (conjunto -> LLAVEL valores LLAVER .)
    AS              reduce using rule 29 (conjunto -> LLAVEL valores LLAVER .)
    DOSPUNTOS       reduce using rule 29 (conjunto -> LLAVEL valores LLAVER .)
    LLAVER          reduce using rule 29 (conjunto -> LLAVEL valores LLAVER .)
    RPARENT         reduce using rule 29 (conjunto -> LLAVEL valores LLAVER .)
    CORCH_IZQ       reduce using rule 29 (conjunto -> LLAVEL valores LLAVER .)


state 161

    (41) mapa -> LLAVEL claves_valores LLAVER .

    COMA            reduce using rule 41 (mapa -> LLAVEL claves_valores LLAVER .)
    $end            reduce using rule 41 (mapa -> LLAVEL claves_valores LLAVER .)
    CORCH_DER       reduce using rule 41 (mapa -> LLAVEL claves_valores LLAVER .)
    AS              reduce using rule 41 (mapa -> LLAVEL claves_valores LLAVER .)
    DOSPUNTOS       reduce using rule 41 (mapa -> LLAVEL claves_valores LLAVER .)
    LLAVER          reduce using rule 41 (mapa -> LLAVEL claves_valores LLAVER .)
    RPARENT         reduce using rule 41 (mapa -> LLAVEL claves_valores LLAVER .)
    CORCH_IZQ       reduce using rule 41 (mapa -> LLAVEL claves_valores LLAVER .)


state 162

    (8) clave_valor -> valor DOSPUNTOS . valor
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 24
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    valor                          shift and go to state 219
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operando_comp_orden            shift and go to state 54

state 163

    (18) claves_valores -> clave_valor COMA . claves_valores
    (17) claves_valores -> . clave_valor
    (18) claves_valores -> . clave_valor COMA claves_valores
    (8) clave_valor -> . valor DOSPUNTOS valor
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo

    VARIABLE        shift and go to state 5
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 24
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    clave_valor                    shift and go to state 100
    claves_valores                 shift and go to state 220
    valor                          shift and go to state 221
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 7
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 9
    negativo                       shift and go to state 10
    casting                        shift and go to state 11
    numero                         shift and go to state 12
    bool                           shift and go to state 14
    operacion_mat                  shift and go to state 15
    operacion_log                  shift and go to state 16
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_log_sin_par          shift and go to state 33
    operacion_log_not              shift and go to state 34
    operandos_log                  shift and go to state 35
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_comp                 shift and go to state 44
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 47
    operacion_comp_sin_par         shift and go to state 48
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_sin_par   shift and go to state 52
    operacion_comp_orden_con_par   shift and go to state 53
    operando_comp_orden            shift and go to state 54

state 164

    (45) operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .

    COMA            reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    $end            reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    IGUAL           reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    NO_IGUAL        reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    MAYOR_QUE       reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    MENOR_QUE       reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    MENOR_O_IGUAL   reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    MAYOR_O_IGUAL   reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    CORCH_DER       reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    AS              reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    DOSPUNTOS       reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    LLAVER          reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    RPARENT         reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    CORCH_IZQ       reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    AND             reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)
    OR              reduce using rule 45 (operacion_mat_pos -> operacion_mat_con_par operador_mat operacion_mat_pos .)


state 165

    (44) operacion_mat_pos -> RESTA . operacion_mat_con_par
    (85) negativo -> RESTA . numero
    (86) negativo -> RESTA . VARIABLE
    (87) negativo -> RESTA . indexacion
    (88) negativo -> RESTA . ejecutar_funcion
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT

    VARIABLE        shift and go to state 85
    LPARENT         shift and go to state 89
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27

    operacion_mat_con_par          shift and go to state 222
    numero                         shift and go to state 84
    indexacion                     shift and go to state 86
    ejecutar_funcion               shift and go to state 87

state 166

    (27) operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .

    COMA            reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    $end            reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    IGUAL           reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    NO_IGUAL        reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    MAYOR_QUE       reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    MENOR_QUE       reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    MENOR_O_IGUAL   reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    MAYOR_O_IGUAL   reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    CORCH_DER       reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    RPARENT         reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    AS              reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    DOSPUNTOS       reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    LLAVER          reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    CORCH_IZQ       reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    AND             reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)
    OR              reduce using rule 27 (operacion_mat_sin_par -> operando_mat operador_mat operacion_mat .)


state 167

    (130) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (164) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (112) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (152) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 224
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 223
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38

    operacion_comp_sin_par         shift and go to state 73
    valor                          shift and go to state 213
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_log_sin_par          shift and go to state 70
    operacion_mat_sin_par          shift and go to state 71
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 133
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 134
    negativo                       shift and go to state 135
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 54
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_con_par   shift and go to state 53
    numero                         shift and go to state 136
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_comp                 shift and go to state 44
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 45
    operacion_comp_con_par         shift and go to state 225
    operacion_log_con_par          shift and go to state 218
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_mat_con_par          shift and go to state 39

state 168

    (152) operacion_log_con_par -> LPARENT operacion_log_sin_par . RPARENT

    RPARENT         shift and go to state 138


state 169

    (149) operacion_log_sin_par -> operandos_log . operadores_log operacion_log
    (150) operacion_log_sin_par -> operandos_log .
    (136) operadores_log -> . AND
    (137) operadores_log -> . OR

    RPARENT         reduce using rule 150 (operacion_log_sin_par -> operandos_log .)
    AND             shift and go to state 91
    OR              shift and go to state 92

    operadores_log                 shift and go to state 93

state 170

    (143) operandos_log -> operacion_log_not .

    AND             reduce using rule 143 (operandos_log -> operacion_log_not .)
    OR              reduce using rule 143 (operandos_log -> operacion_log_not .)
    RPARENT         reduce using rule 143 (operandos_log -> operacion_log_not .)


state 171

    (110) operando_comp_eq -> operacion_log_con_par .

    IGUAL           reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    NO_IGUAL        reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    AND             reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    OR              reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    COMA            reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    $end            reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    CORCH_DER       reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    RPARENT         reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    AS              reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    DOSPUNTOS       reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    LLAVER          reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    CORCH_IZQ       reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)


state 172

    (123) operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .

    AND             reduce using rule 123 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    OR              reduce using rule 123 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    COMA            reduce using rule 123 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    $end            reduce using rule 123 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    CORCH_DER       reduce using rule 123 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    RPARENT         reduce using rule 123 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    AS              reduce using rule 123 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    DOSPUNTOS       reduce using rule 123 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    LLAVER          reduce using rule 123 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)
    CORCH_IZQ       reduce using rule 123 (operacion_comp_eq -> operando_comp_eq operador_comp_eq operando_comp_eq .)


state 173

    (101) operando_comp_eq -> numero .
    (11) operando_mat -> numero .
    (79) operando_comp_orden -> numero .

  ! reduce/reduce conflict for AND resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for OR resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for COMA resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for $end resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for RPARENT resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for LLAVER resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    AND             reduce using rule 11 (operando_mat -> numero .)
    OR              reduce using rule 11 (operando_mat -> numero .)
    COMA            reduce using rule 11 (operando_mat -> numero .)
    $end            reduce using rule 11 (operando_mat -> numero .)
    CORCH_DER       reduce using rule 11 (operando_mat -> numero .)
    RPARENT         reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    DOSPUNTOS       reduce using rule 11 (operando_mat -> numero .)
    LLAVER          reduce using rule 11 (operando_mat -> numero .)
    CORCH_IZQ       reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)

  ! AND             [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! OR              [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! COMA            [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! $end            [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! CORCH_DER       [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! RPARENT         [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! AS              [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! DOSPUNTOS       [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! LLAVER          [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! CORCH_IZQ       [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]


state 174

    (102) operando_comp_eq -> bool .

    AND             reduce using rule 102 (operando_comp_eq -> bool .)
    OR              reduce using rule 102 (operando_comp_eq -> bool .)
    COMA            reduce using rule 102 (operando_comp_eq -> bool .)
    $end            reduce using rule 102 (operando_comp_eq -> bool .)
    CORCH_DER       reduce using rule 102 (operando_comp_eq -> bool .)
    RPARENT         reduce using rule 102 (operando_comp_eq -> bool .)
    AS              reduce using rule 102 (operando_comp_eq -> bool .)
    DOSPUNTOS       reduce using rule 102 (operando_comp_eq -> bool .)
    LLAVER          reduce using rule 102 (operando_comp_eq -> bool .)
    CORCH_IZQ       reduce using rule 102 (operando_comp_eq -> bool .)


state 175

    (105) operando_comp_eq -> operacion_comp_orden .

    AND             reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)
    OR              reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)
    COMA            reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)
    $end            reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)
    CORCH_DER       reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)
    RPARENT         reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)
    AS              reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)
    DOSPUNTOS       reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)
    LLAVER          reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)
    CORCH_IZQ       reduce using rule 105 (operando_comp_eq -> operacion_comp_orden .)


state 176

    (106) operando_comp_eq -> operacion_comp_con_par .

    AND             reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    OR              reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    COMA            reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    $end            reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    CORCH_DER       reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    RPARENT         reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    AS              reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    DOSPUNTOS       reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    LLAVER          reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    CORCH_IZQ       reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)


state 177

    (107) operando_comp_eq -> indexacion .
    (13) operando_mat -> indexacion .
    (81) operando_comp_orden -> indexacion .

  ! reduce/reduce conflict for AND resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for OR resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for COMA resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for $end resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 13 (operando_mat -> indexacion .)
    OR              reduce using rule 13 (operando_mat -> indexacion .)
    COMA            reduce using rule 13 (operando_mat -> indexacion .)
    $end            reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_DER       reduce using rule 13 (operando_mat -> indexacion .)
    RPARENT         reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    DOSPUNTOS       reduce using rule 13 (operando_mat -> indexacion .)
    LLAVER          reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_IZQ       reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)

  ! AND             [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! OR              [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! COMA            [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! $end            [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! CORCH_DER       [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! RPARENT         [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! AS              [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! DOSPUNTOS       [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! LLAVER          [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! CORCH_IZQ       [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]


state 178

    (108) operando_comp_eq -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (82) operando_comp_orden -> ejecutar_funcion .

  ! reduce/reduce conflict for AND resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for OR resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for COMA resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for $end resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    OR              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    COMA            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    $end            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_DER       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RPARENT         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    LLAVER          reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! AND             [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! OR              [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! COMA            [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! $end            [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! CORCH_DER       [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! RPARENT         [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! DOSPUNTOS       [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! LLAVER          [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! CORCH_IZQ       [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]


state 179

    (109) operando_comp_eq -> VARIABLE .
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (12) operando_mat -> VARIABLE .
    (80) operando_comp_orden -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for LLAVER resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57
    AND             reduce using rule 12 (operando_mat -> VARIABLE .)
    OR              reduce using rule 12 (operando_mat -> VARIABLE .)
    COMA            reduce using rule 12 (operando_mat -> VARIABLE .)
    $end            reduce using rule 12 (operando_mat -> VARIABLE .)
    CORCH_DER       reduce using rule 12 (operando_mat -> VARIABLE .)
    RPARENT         reduce using rule 12 (operando_mat -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    DOSPUNTOS       reduce using rule 12 (operando_mat -> VARIABLE .)
    LLAVER          reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! AND             [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! OR              [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! COMA            [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! $end            [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! CORCH_DER       [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! AS              [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! DOSPUNTOS       [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! LLAVER          [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]

    operador_mat                   shift and go to state 191

state 180

    (111) operando_comp_eq -> negativo .
    (14) operando_mat -> negativo .
    (83) operando_comp_orden -> negativo .

  ! reduce/reduce conflict for AND resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for OR resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for COMA resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for $end resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for RPARENT resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for AS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for LLAVER resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    AND             reduce using rule 14 (operando_mat -> negativo .)
    OR              reduce using rule 14 (operando_mat -> negativo .)
    COMA            reduce using rule 14 (operando_mat -> negativo .)
    $end            reduce using rule 14 (operando_mat -> negativo .)
    CORCH_DER       reduce using rule 14 (operando_mat -> negativo .)
    RPARENT         reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)
    DOSPUNTOS       reduce using rule 14 (operando_mat -> negativo .)
    LLAVER          reduce using rule 14 (operando_mat -> negativo .)
    CORCH_IZQ       reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_QUE       reduce using rule 14 (operando_mat -> negativo .)
    MENOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 14 (operando_mat -> negativo .)

  ! AND             [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! OR              [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! COMA            [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! $end            [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! CORCH_DER       [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! RPARENT         [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! AS              [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! DOSPUNTOS       [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! LLAVER          [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! CORCH_IZQ       [ reduce using rule 111 (operando_comp_eq -> negativo .) ]
  ! MAYOR_QUE       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MENOR_QUE       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 83 (operando_comp_orden -> negativo .) ]


state 181

    (112) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (130) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (152) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (89) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    VARIABLE        shift and go to state 226
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 131
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38
    NEGACION        shift and go to state 46

    valor                          shift and go to state 213
    operacion_comp_sin_par         shift and go to state 73
    operacion_log_sin_par          shift and go to state 70
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_mat_sin_par          shift and go to state 71
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 215
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 216
    negativo                       shift and go to state 135
    casting                        shift and go to state 11
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_comp_orden            shift and go to state 54
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    numero                         shift and go to state 136
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_con_par   shift and go to state 53
    operacion_comp                 shift and go to state 44
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 45
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 225
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_mat_con_par          shift and go to state 39

state 182

    (84) operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .

    AND             reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    OR              reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    COMA            reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    $end            reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    IGUAL           reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    NO_IGUAL        reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    CORCH_DER       reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    RPARENT         reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    AS              reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    DOSPUNTOS       reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    LLAVER          reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)
    CORCH_IZQ       reduce using rule 84 (operacion_comp_orden_sin_par -> operando_comp_orden operador_comp_orden operando_comp_orden .)


state 183

    (78) operando_comp_orden -> operacion_mat .

    AND             reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    OR              reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    COMA            reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    $end            reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    IGUAL           reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    NO_IGUAL        reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    CORCH_DER       reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    RPARENT         reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    AS              reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    DOSPUNTOS       reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    LLAVER          reduce using rule 78 (operando_comp_orden -> operacion_mat .)
    CORCH_IZQ       reduce using rule 78 (operando_comp_orden -> operacion_mat .)


state 184

    (79) operando_comp_orden -> numero .
    (11) operando_mat -> numero .

  ! reduce/reduce conflict for AND resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for OR resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for COMA resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for $end resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for RPARENT resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for LLAVER resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    AND             reduce using rule 11 (operando_mat -> numero .)
    OR              reduce using rule 11 (operando_mat -> numero .)
    COMA            reduce using rule 11 (operando_mat -> numero .)
    $end            reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)
    CORCH_DER       reduce using rule 11 (operando_mat -> numero .)
    RPARENT         reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    DOSPUNTOS       reduce using rule 11 (operando_mat -> numero .)
    LLAVER          reduce using rule 11 (operando_mat -> numero .)
    CORCH_IZQ       reduce using rule 11 (operando_mat -> numero .)

  ! AND             [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! OR              [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! COMA            [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! $end            [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! IGUAL           [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! CORCH_DER       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! RPARENT         [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! AS              [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! DOSPUNTOS       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! LLAVER          [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! CORCH_IZQ       [ reduce using rule 79 (operando_comp_orden -> numero .) ]


state 185

    (80) operando_comp_orden -> VARIABLE .
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (12) operando_mat -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! reduce/reduce conflict for AND resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for COMA resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for RPARENT resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for LLAVER resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for CORCH_IZQ resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57
    AND             reduce using rule 12 (operando_mat -> VARIABLE .)
    OR              reduce using rule 12 (operando_mat -> VARIABLE .)
    COMA            reduce using rule 12 (operando_mat -> VARIABLE .)
    $end            reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    CORCH_DER       reduce using rule 12 (operando_mat -> VARIABLE .)
    RPARENT         reduce using rule 12 (operando_mat -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    DOSPUNTOS       reduce using rule 12 (operando_mat -> VARIABLE .)
    LLAVER          reduce using rule 12 (operando_mat -> VARIABLE .)
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! AND             [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! OR              [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! COMA            [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! $end            [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! CORCH_DER       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! RPARENT         [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! AS              [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! DOSPUNTOS       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! LLAVER          [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! CORCH_IZQ       [ reduce using rule 12 (operando_mat -> VARIABLE .) ]

    operador_mat                   shift and go to state 191

state 186

    (81) operando_comp_orden -> indexacion .
    (13) operando_mat -> indexacion .

  ! reduce/reduce conflict for AND resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for OR resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for COMA resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for $end resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 13 (operando_mat -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 13 (operando_mat -> indexacion .)
    OR              reduce using rule 13 (operando_mat -> indexacion .)
    COMA            reduce using rule 13 (operando_mat -> indexacion .)
    $end            reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_DER       reduce using rule 13 (operando_mat -> indexacion .)
    RPARENT         reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    DOSPUNTOS       reduce using rule 13 (operando_mat -> indexacion .)
    LLAVER          reduce using rule 13 (operando_mat -> indexacion .)
    CORCH_IZQ       reduce using rule 13 (operando_mat -> indexacion .)

  ! AND             [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! OR              [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! COMA            [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! $end            [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! IGUAL           [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! CORCH_DER       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! RPARENT         [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! AS              [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! DOSPUNTOS       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! LLAVER          [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! CORCH_IZQ       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]


state 187

    (82) operando_comp_orden -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .

  ! reduce/reduce conflict for AND resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for OR resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for COMA resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for $end resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for RPARENT resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for LLAVER resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    OR              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    COMA            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    $end            reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_DER       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RPARENT         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DOSPUNTOS       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    LLAVER          reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    CORCH_IZQ       reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! AND             [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! OR              [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! COMA            [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! $end            [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! CORCH_DER       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! RPARENT         [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! DOSPUNTOS       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! LLAVER          [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! CORCH_IZQ       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]


state 188

    (83) operando_comp_orden -> negativo .
    (14) operando_mat -> negativo .

  ! reduce/reduce conflict for AND resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for OR resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for COMA resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for $end resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for CORCH_DER resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for RPARENT resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for AS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for LLAVER resolved using rule 14 (operando_mat -> negativo .)
  ! reduce/reduce conflict for CORCH_IZQ resolved using rule 14 (operando_mat -> negativo .)
    MAS             reduce using rule 14 (operando_mat -> negativo .)
    RESTA           reduce using rule 14 (operando_mat -> negativo .)
    MULTIPL         reduce using rule 14 (operando_mat -> negativo .)
    DIVISION        reduce using rule 14 (operando_mat -> negativo .)
    AND             reduce using rule 14 (operando_mat -> negativo .)
    OR              reduce using rule 14 (operando_mat -> negativo .)
    COMA            reduce using rule 14 (operando_mat -> negativo .)
    $end            reduce using rule 14 (operando_mat -> negativo .)
    IGUAL           reduce using rule 14 (operando_mat -> negativo .)
    NO_IGUAL        reduce using rule 14 (operando_mat -> negativo .)
    CORCH_DER       reduce using rule 14 (operando_mat -> negativo .)
    RPARENT         reduce using rule 14 (operando_mat -> negativo .)
    AS              reduce using rule 14 (operando_mat -> negativo .)
    DOSPUNTOS       reduce using rule 14 (operando_mat -> negativo .)
    LLAVER          reduce using rule 14 (operando_mat -> negativo .)
    CORCH_IZQ       reduce using rule 14 (operando_mat -> negativo .)

  ! AND             [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! OR              [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! COMA            [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! $end            [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! IGUAL           [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! NO_IGUAL        [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! CORCH_DER       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! RPARENT         [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! AS              [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! DOSPUNTOS       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! LLAVER          [ reduce using rule 83 (operando_comp_orden -> negativo .) ]
  ! CORCH_IZQ       [ reduce using rule 83 (operando_comp_orden -> negativo .) ]


state 189

    (90) indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .

    COMA            reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    $end            reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    AND             reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    OR              reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MAS             reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    RESTA           reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MULTIPL         reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    DIVISION        reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    IGUAL           reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    NO_IGUAL        reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MAYOR_QUE       reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MENOR_QUE       reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MENOR_O_IGUAL   reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    MAYOR_O_IGUAL   reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    CORCH_DER       reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    AS              reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    RPARENT         reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    DOSPUNTOS       reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    LLAVER          reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)
    CORCH_IZQ       reduce using rule 90 (indexacion -> VARIABLE CORCH_IZQ valor CORCH_IZQ .)


state 190

    (190) ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .

    COMA            reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    $end            reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    AND             reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    OR              reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MAS             reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    RESTA           reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MULTIPL         reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    DIVISION        reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    IGUAL           reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    NO_IGUAL        reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MAYOR_QUE       reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MENOR_QUE       reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MENOR_O_IGUAL   reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    MAYOR_O_IGUAL   reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    CORCH_DER       reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    AS              reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    RPARENT         reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    DOSPUNTOS       reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    LLAVER          reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)
    CORCH_IZQ       reduce using rule 190 (ejecutar_funcion -> VARIABLE LPARENT valores RPARENT .)


state 191

    (28) operacion_mat_sin_par -> VARIABLE operador_mat . operacion_mat
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT

    RESTA           shift and go to state 123
    LPARENT         shift and go to state 124
    VARIABLE        shift and go to state 120
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27

    operacion_mat                  shift and go to state 122
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_mat_con_par          shift and go to state 39
    operacion_mat_sin_par          shift and go to state 40
    operando_mat                   shift and go to state 41
    numero                         shift and go to state 125
    indexacion                     shift and go to state 126
    negativo                       shift and go to state 127
    ejecutar_funcion               shift and go to state 128
    casting_num                    shift and go to state 45

state 192

    (192) operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .

    COMA            reduce using rule 192 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    $end            reduce using rule 192 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    CORCH_DER       reduce using rule 192 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    AS              reduce using rule 192 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    DOSPUNTOS       reduce using rule 192 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    LLAVER          reduce using rule 192 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    RPARENT         reduce using rule 192 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)
    CORCH_IZQ       reduce using rule 192 (operacion_autoasig -> VARIABLE operador_mat IGUAL operacion_mat .)


state 193

    (193) casting -> LPARENT . valor AS tipo_dato RPARENT
    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (152) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (164) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (130) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (112) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 75
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 68
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38

    valor                          shift and go to state 69
    operacion_log_sin_par          shift and go to state 70
    operacion_mat_sin_par          shift and go to state 71
    operacion_comp_sin_par         shift and go to state 73
    operacion_comp_orden_sin_par   shift and go to state 74
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 76
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 77
    negativo                       shift and go to state 78
    casting                        shift and go to state 11
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operando_comp_orden            shift and go to state 54
    numero                         shift and go to state 82
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operacion_comp                 shift and go to state 44
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 45
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_con_par   shift and go to state 53
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 47
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_mat_con_par          shift and go to state 39

state 194

    (24) casting_num -> LPARENT valor . AS INT RPARENT
    (25) casting_num -> LPARENT valor . AS DOUBLE RPARENT

    AS              shift and go to state 227


state 195

    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (71) valor -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (178) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (179) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (192) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (144) operandos_log -> VARIABLE .
    (109) operando_comp_eq -> VARIABLE .
    (80) operando_comp_orden -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57
    AUTOINCREMENTO  shift and go to state 58
    AUTODECREMENTO  shift and go to state 59
    AND             reduce using rule 144 (operandos_log -> VARIABLE .)
    OR              reduce using rule 144 (operandos_log -> VARIABLE .)
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! AS              [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! AS              [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]

    operador_mat                   shift and go to state 143

state 196

    (73) valor -> indexacion .
    (13) operando_mat -> indexacion .
    (147) operandos_log -> indexacion .
    (107) operando_comp_eq -> indexacion .
    (81) operando_comp_orden -> indexacion .

  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 147 (operandos_log -> indexacion .)
    OR              reduce using rule 147 (operandos_log -> indexacion .)

  ! AS              [ reduce using rule 73 (valor -> indexacion .) ]
  ! AS              [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! IGUAL           [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]


state 197

    (75) valor -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (146) operandos_log -> ejecutar_funcion .
    (108) operando_comp_eq -> ejecutar_funcion .
    (82) operando_comp_orden -> ejecutar_funcion .

  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 146 (operandos_log -> ejecutar_funcion .)

  ! AS              [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]


state 198

    (11) operando_mat -> numero .
    (62) datos -> numero .
    (101) operando_comp_eq -> numero .
    (79) operando_comp_orden -> numero .

  ! reduce/reduce conflict for AS resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 11 (operando_mat -> numero .)
    MAS             reduce using rule 11 (operando_mat -> numero .)
    RESTA           reduce using rule 11 (operando_mat -> numero .)
    MULTIPL         reduce using rule 11 (operando_mat -> numero .)
    DIVISION        reduce using rule 11 (operando_mat -> numero .)
    AS              reduce using rule 11 (operando_mat -> numero .)
    IGUAL           reduce using rule 11 (operando_mat -> numero .)
    NO_IGUAL        reduce using rule 11 (operando_mat -> numero .)
    MAYOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_QUE       reduce using rule 11 (operando_mat -> numero .)
    MENOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)
    MAYOR_O_IGUAL   reduce using rule 11 (operando_mat -> numero .)

  ! AS              [ reduce using rule 62 (datos -> numero .) ]
  ! IGUAL           [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! NO_IGUAL        [ reduce using rule 101 (operando_comp_eq -> numero .) ]
  ! MAYOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_QUE       [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 79 (operando_comp_orden -> numero .) ]


state 199

    (165) read -> STDIN PUNTO READLINESYNC LPARENT . RPARENT

    RPARENT         shift and go to state 228


state 200

    (193) casting -> LPARENT valor . AS tipo_dato RPARENT
    (112) operando_comp_eq -> LPARENT valor . AS BOOL RPARENT
    (24) casting_num -> LPARENT valor . AS INT RPARENT
    (25) casting_num -> LPARENT valor . AS DOUBLE RPARENT

    AS              shift and go to state 229


state 201

    (193) casting -> LPARENT valor AS tipo_dato . RPARENT

    RPARENT         shift and go to state 230


state 202

    (24) casting_num -> LPARENT valor AS INT . RPARENT
    (95) tipo_dato -> INT .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 231

  ! RPARENT         [ reduce using rule 95 (tipo_dato -> INT .) ]


state 203

    (25) casting_num -> LPARENT valor AS DOUBLE . RPARENT
    (94) tipo_dato -> DOUBLE .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 232

  ! RPARENT         [ reduce using rule 94 (tipo_dato -> DOUBLE .) ]


state 204

    (112) operando_comp_eq -> LPARENT valor AS BOOL . RPARENT
    (93) tipo_dato -> BOOL .

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 233

  ! RPARENT         [ reduce using rule 93 (tipo_dato -> BOOL .) ]


state 205

    (96) tipo_dato -> STRING .

    RPARENT         reduce using rule 96 (tipo_dato -> STRING .)


state 206

    (97) tipo_dato -> VOID .

    RPARENT         reduce using rule 97 (tipo_dato -> VOID .)


state 207

    (98) tipo_dato -> LIST .

    RPARENT         reduce using rule 98 (tipo_dato -> LIST .)


state 208

    (99) tipo_dato -> SET .

    RPARENT         reduce using rule 99 (tipo_dato -> SET .)


state 209

    (100) tipo_dato -> MAP .

    RPARENT         reduce using rule 100 (tipo_dato -> MAP .)


state 210

    (164) operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .

    COMA            reduce using rule 164 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    $end            reduce using rule 164 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    AND             reduce using rule 164 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    OR              reduce using rule 164 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    CORCH_DER       reduce using rule 164 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    RPARENT         reduce using rule 164 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    AS              reduce using rule 164 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    DOSPUNTOS       reduce using rule 164 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    LLAVER          reduce using rule 164 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)
    CORCH_IZQ       reduce using rule 164 (operacion_log_not_con_par -> LPARENT NEGACION operando_log_not RPARENT .)


state 211

    (57) operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .

    COMA            reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    $end            reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    IGUAL           reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    NO_IGUAL        reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    MAYOR_QUE       reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    MENOR_QUE       reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    MENOR_O_IGUAL   reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    MAYOR_O_IGUAL   reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    CORCH_DER       reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    AS              reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    DOSPUNTOS       reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    LLAVER          reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    RPARENT         reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    CORCH_IZQ       reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    AND             reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)
    OR              reduce using rule 57 (operacion_mat_neg -> RESTA operacion_mat_con_par operador_mat operacion_mat_pos .)


state 212

    (193) casting -> LPARENT . valor AS tipo_dato RPARENT
    (112) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (164) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (152) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 132
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 131
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38

    valor                          shift and go to state 200
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_comp_sin_par         shift and go to state 73
    operacion_log_sin_par          shift and go to state 70
    operacion_mat_sin_par          shift and go to state 71
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 133
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 134
    negativo                       shift and go to state 135
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 54
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    numero                         shift and go to state 136
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_con_par   shift and go to state 53
    operacion_comp                 shift and go to state 44
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 45
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 225
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_mat_con_par          shift and go to state 39

state 213

    (112) operando_comp_eq -> LPARENT valor . AS BOOL RPARENT
    (24) casting_num -> LPARENT valor . AS INT RPARENT
    (25) casting_num -> LPARENT valor . AS DOUBLE RPARENT

    AS              shift and go to state 234


state 214

    (71) valor -> VARIABLE .
    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (144) operandos_log -> VARIABLE .
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (80) operando_comp_orden -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (109) operando_comp_eq -> VARIABLE .
    (178) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (179) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (192) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    AND             reduce using rule 144 (operandos_log -> VARIABLE .)
    OR              reduce using rule 144 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 144 (operandos_log -> VARIABLE .)
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    AUTOINCREMENTO  shift and go to state 58
    AUTODECREMENTO  shift and go to state 59
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! AS              [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! AS              [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]

    operador_mat                   shift and go to state 143

state 215

    (73) valor -> indexacion .
    (147) operandos_log -> indexacion .
    (81) operando_comp_orden -> indexacion .
    (13) operando_mat -> indexacion .
    (107) operando_comp_eq -> indexacion .

  ! reduce/reduce conflict for AS resolved using rule 73 (valor -> indexacion .)
  ! reduce/reduce conflict for AS resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 13 (operando_mat -> indexacion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 13 (operando_mat -> indexacion .)
    AND             reduce using rule 147 (operandos_log -> indexacion .)
    OR              reduce using rule 147 (operandos_log -> indexacion .)
    RPARENT         reduce using rule 147 (operandos_log -> indexacion .)
    MAS             reduce using rule 13 (operando_mat -> indexacion .)
    RESTA           reduce using rule 13 (operando_mat -> indexacion .)
    MULTIPL         reduce using rule 13 (operando_mat -> indexacion .)
    DIVISION        reduce using rule 13 (operando_mat -> indexacion .)
    AS              reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_QUE       reduce using rule 13 (operando_mat -> indexacion .)
    MENOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    MAYOR_O_IGUAL   reduce using rule 13 (operando_mat -> indexacion .)
    IGUAL           reduce using rule 13 (operando_mat -> indexacion .)
    NO_IGUAL        reduce using rule 13 (operando_mat -> indexacion .)

  ! AS              [ reduce using rule 73 (valor -> indexacion .) ]
  ! AS              [ reduce using rule 147 (operandos_log -> indexacion .) ]
  ! MAYOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_QUE       [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 81 (operando_comp_orden -> indexacion .) ]
  ! IGUAL           [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]
  ! NO_IGUAL        [ reduce using rule 107 (operando_comp_eq -> indexacion .) ]


state 216

    (75) valor -> ejecutar_funcion .
    (146) operandos_log -> ejecutar_funcion .
    (82) operando_comp_orden -> ejecutar_funcion .
    (15) operando_mat -> ejecutar_funcion .
    (108) operando_comp_eq -> ejecutar_funcion .

  ! reduce/reduce conflict for AS resolved using rule 75 (valor -> ejecutar_funcion .)
  ! reduce/reduce conflict for AS resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 15 (operando_mat -> ejecutar_funcion .)
    AND             reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    OR              reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    RPARENT         reduce using rule 146 (operandos_log -> ejecutar_funcion .)
    MAS             reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    RESTA           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MULTIPL         reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    DIVISION        reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    AS              reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_QUE       reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MENOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    MAYOR_O_IGUAL   reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    IGUAL           reduce using rule 15 (operando_mat -> ejecutar_funcion .)
    NO_IGUAL        reduce using rule 15 (operando_mat -> ejecutar_funcion .)

  ! AS              [ reduce using rule 75 (valor -> ejecutar_funcion .) ]
  ! AS              [ reduce using rule 146 (operandos_log -> ejecutar_funcion .) ]
  ! MAYOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_QUE       [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 82 (operando_comp_orden -> ejecutar_funcion .) ]
  ! IGUAL           [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]
  ! NO_IGUAL        [ reduce using rule 108 (operando_comp_eq -> ejecutar_funcion .) ]


state 217

    (145) operandos_log -> bool .
    (64) datos -> bool .
    (102) operando_comp_eq -> bool .

  ! reduce/reduce conflict for AS resolved using rule 64 (datos -> bool .)
    AND             reduce using rule 145 (operandos_log -> bool .)
    OR              reduce using rule 145 (operandos_log -> bool .)
    RPARENT         reduce using rule 145 (operandos_log -> bool .)
    AS              reduce using rule 64 (datos -> bool .)
    IGUAL           reduce using rule 102 (operando_comp_eq -> bool .)
    NO_IGUAL        reduce using rule 102 (operando_comp_eq -> bool .)

  ! AS              [ reduce using rule 145 (operandos_log -> bool .) ]


state 218

    (110) operando_comp_eq -> operacion_log_con_par .
    (170) operacion_log -> operacion_log_con_par .
    (171) operacion_log -> operacion_log_con_par . operadores_log operacion_log
    (136) operadores_log -> . AND
    (137) operadores_log -> . OR

    IGUAL           reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    NO_IGUAL        reduce using rule 110 (operando_comp_eq -> operacion_log_con_par .)
    AS              reduce using rule 170 (operacion_log -> operacion_log_con_par .)
    AND             shift and go to state 91
    OR              shift and go to state 92

    operadores_log                 shift and go to state 90

state 219

    (8) clave_valor -> valor DOSPUNTOS valor .

    COMA            reduce using rule 8 (clave_valor -> valor DOSPUNTOS valor .)
    LLAVER          reduce using rule 8 (clave_valor -> valor DOSPUNTOS valor .)


state 220

    (18) claves_valores -> clave_valor COMA claves_valores .

    LLAVER          reduce using rule 18 (claves_valores -> clave_valor COMA claves_valores .)


state 221

    (8) clave_valor -> valor . DOSPUNTOS valor

    DOSPUNTOS       shift and go to state 162


state 222

    (44) operacion_mat_pos -> RESTA operacion_mat_con_par .

    COMA            reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    $end            reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    IGUAL           reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    NO_IGUAL        reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MAYOR_QUE       reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MENOR_QUE       reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MENOR_O_IGUAL   reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    MAYOR_O_IGUAL   reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    CORCH_DER       reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    AS              reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    DOSPUNTOS       reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    LLAVER          reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    RPARENT         reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    CORCH_IZQ       reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    AND             reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)
    OR              reduce using rule 44 (operacion_mat_pos -> RESTA operacion_mat_con_par .)


state 223

    (193) casting -> LPARENT . valor AS tipo_dato RPARENT
    (112) operando_comp_eq -> LPARENT . valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> LPARENT . operacion_comp_orden_sin_par RPARENT
    (24) casting_num -> LPARENT . valor AS INT RPARENT
    (25) casting_num -> LPARENT . valor AS DOUBLE RPARENT
    (130) operacion_comp_con_par -> LPARENT . operacion_comp_sin_par RPARENT
    (152) operacion_log_con_par -> LPARENT . operacion_log_sin_par RPARENT
    (164) operacion_log_not_con_par -> LPARENT . NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> LPARENT . operacion_mat_sin_par RPARENT
    (69) valor -> . datos
    (70) valor -> . operaciones
    (71) valor -> . VARIABLE
    (72) valor -> . estructura_dato
    (73) valor -> . indexacion
    (74) valor -> . read
    (75) valor -> . ejecutar_funcion
    (76) valor -> . negativo
    (77) valor -> . casting
    (84) operacion_comp_orden_sin_par -> . operando_comp_orden operador_comp_orden operando_comp_orden
    (124) operacion_comp_sin_par -> . operacion_comp_eq
    (125) operacion_comp_sin_par -> . operacion_comp_orden
    (149) operacion_log_sin_par -> . operandos_log operadores_log operacion_log
    (150) operacion_log_sin_par -> . operandos_log
    (27) operacion_mat_sin_par -> . operando_mat operador_mat operacion_mat
    (28) operacion_mat_sin_par -> . VARIABLE operador_mat operacion_mat
    (62) datos -> . numero
    (63) datos -> . CADENA
    (64) datos -> . bool
    (185) operaciones -> . operacion_mat
    (186) operaciones -> . operacion_log
    (187) operaciones -> . operacion_unaria
    (188) operaciones -> . operacion_autoasig
    (51) estructura_dato -> . lista
    (52) estructura_dato -> . conjunto
    (53) estructura_dato -> . mapa
    (90) indexacion -> . VARIABLE CORCH_IZQ valor CORCH_IZQ
    (165) read -> . STDIN PUNTO READLINESYNC LPARENT RPARENT
    (190) ejecutar_funcion -> . VARIABLE LPARENT valores RPARENT
    (191) ejecutar_funcion -> . VARIABLE LPARENT RPARENT
    (85) negativo -> . RESTA numero
    (86) negativo -> . RESTA VARIABLE
    (87) negativo -> . RESTA indexacion
    (88) negativo -> . RESTA ejecutar_funcion
    (193) casting -> . LPARENT valor AS tipo_dato RPARENT
    (78) operando_comp_orden -> . operacion_mat
    (79) operando_comp_orden -> . numero
    (80) operando_comp_orden -> . VARIABLE
    (81) operando_comp_orden -> . indexacion
    (82) operando_comp_orden -> . ejecutar_funcion
    (83) operando_comp_orden -> . negativo
    (123) operacion_comp_eq -> . operando_comp_eq operador_comp_eq operando_comp_eq
    (91) operacion_comp_orden -> . operacion_comp_orden_sin_par
    (92) operacion_comp_orden -> . operacion_comp_orden_con_par
    (142) operandos_log -> . operacion_comp
    (143) operandos_log -> . operacion_log_not
    (144) operandos_log -> . VARIABLE
    (145) operandos_log -> . bool
    (146) operandos_log -> . ejecutar_funcion
    (147) operandos_log -> . indexacion
    (11) operando_mat -> . numero
    (12) operando_mat -> . VARIABLE
    (13) operando_mat -> . indexacion
    (14) operando_mat -> . negativo
    (15) operando_mat -> . ejecutar_funcion
    (16) operando_mat -> . casting_num
    (54) numero -> . INTEGER
    (55) numero -> . FLOAT
    (58) bool -> . TRUE
    (59) bool -> . FALSE
    (60) operacion_mat -> . operacion_mat_pos
    (61) operacion_mat -> . operacion_mat_neg
    (170) operacion_log -> . operacion_log_con_par
    (171) operacion_log -> . operacion_log_con_par operadores_log operacion_log
    (172) operacion_log -> . operacion_log_sin_par
    (173) operacion_log -> . operacion_log_not
    (174) operacion_log -> . operandos_log
    (178) operacion_unaria -> . VARIABLE AUTOINCREMENTO
    (179) operacion_unaria -> . VARIABLE AUTODECREMENTO
    (180) operacion_unaria -> . AUTOINCREMENTO VARIABLE
    (181) operacion_unaria -> . AUTODECREMENTO VARIABLE
    (192) operacion_autoasig -> . VARIABLE operador_mat IGUAL operacion_mat
    (22) lista -> . CORCH_IZQ valores CORCH_DER
    (23) lista -> . CORCH_IZQ CORCH_DER
    (29) conjunto -> . LLAVEL valores LLAVER
    (30) conjunto -> . LLAVEL LLAVER
    (41) mapa -> . LLAVEL claves_valores LLAVER
    (42) mapa -> . LLAVEL LLAVER
    (101) operando_comp_eq -> . numero
    (102) operando_comp_eq -> . bool
    (103) operando_comp_eq -> . CADENA
    (104) operando_comp_eq -> . operacion_mat
    (105) operando_comp_eq -> . operacion_comp_orden
    (106) operando_comp_eq -> . operacion_comp_con_par
    (107) operando_comp_eq -> . indexacion
    (108) operando_comp_eq -> . ejecutar_funcion
    (109) operando_comp_eq -> . VARIABLE
    (110) operando_comp_eq -> . operacion_log_con_par
    (111) operando_comp_eq -> . negativo
    (112) operando_comp_eq -> . LPARENT valor AS BOOL RPARENT
    (89) operacion_comp_orden_con_par -> . LPARENT operacion_comp_orden_sin_par RPARENT
    (132) operacion_comp -> . operacion_comp_con_par
    (133) operacion_comp -> . operacion_comp_sin_par
    (166) operacion_log_not -> . operacion_log_not_sin_par
    (167) operacion_log_not -> . operacion_log_not_con_par
    (24) casting_num -> . LPARENT valor AS INT RPARENT
    (25) casting_num -> . LPARENT valor AS DOUBLE RPARENT
    (43) operacion_mat_pos -> . operacion_mat_con_par
    (44) operacion_mat_pos -> . RESTA operacion_mat_con_par
    (45) operacion_mat_pos -> . operacion_mat_con_par operador_mat operacion_mat_pos
    (46) operacion_mat_pos -> . operacion_mat_sin_par
    (47) operacion_mat_pos -> . operando_mat
    (56) operacion_mat_neg -> . RESTA operacion_mat_con_par
    (57) operacion_mat_neg -> . RESTA operacion_mat_con_par operador_mat operacion_mat_pos
    (152) operacion_log_con_par -> . LPARENT operacion_log_sin_par RPARENT
    (130) operacion_comp_con_par -> . LPARENT operacion_comp_sin_par RPARENT
    (161) operacion_log_not_sin_par -> . NEGACION operando_log_not
    (164) operacion_log_not_con_par -> . LPARENT NEGACION operando_log_not RPARENT
    (40) operacion_mat_con_par -> . LPARENT operacion_mat_sin_par RPARENT

    NEGACION        shift and go to state 72
    VARIABLE        shift and go to state 132
    CADENA          shift and go to state 13
    STDIN           shift and go to state 23
    RESTA           shift and go to state 25
    LPARENT         shift and go to state 131
    INTEGER         shift and go to state 26
    FLOAT           shift and go to state 27
    TRUE            shift and go to state 28
    FALSE           shift and go to state 29
    AUTOINCREMENTO  shift and go to state 36
    AUTODECREMENTO  shift and go to state 37
    CORCH_IZQ       shift and go to state 22
    LLAVEL          shift and go to state 38

    valor                          shift and go to state 200
    operacion_comp_orden_sin_par   shift and go to state 74
    operacion_comp_sin_par         shift and go to state 73
    operacion_log_sin_par          shift and go to state 70
    operacion_mat_sin_par          shift and go to state 71
    datos                          shift and go to state 3
    operaciones                    shift and go to state 4
    estructura_dato                shift and go to state 6
    indexacion                     shift and go to state 133
    read                           shift and go to state 8
    ejecutar_funcion               shift and go to state 134
    negativo                       shift and go to state 135
    casting                        shift and go to state 11
    operando_comp_orden            shift and go to state 54
    operacion_comp_eq              shift and go to state 49
    operacion_comp_orden           shift and go to state 50
    operandos_log                  shift and go to state 79
    operacion_log                  shift and go to state 16
    operando_mat                   shift and go to state 80
    operacion_mat                  shift and go to state 81
    numero                         shift and go to state 136
    bool                           shift and go to state 14
    operacion_unaria               shift and go to state 17
    operacion_autoasig             shift and go to state 18
    lista                          shift and go to state 19
    conjunto                       shift and go to state 20
    mapa                           shift and go to state 21
    operando_comp_eq               shift and go to state 51
    operacion_comp_orden_con_par   shift and go to state 53
    operacion_comp                 shift and go to state 44
    operacion_log_not              shift and go to state 83
    casting_num                    shift and go to state 45
    operacion_mat_pos              shift and go to state 30
    operacion_mat_neg              shift and go to state 31
    operacion_log_con_par          shift and go to state 32
    operacion_comp_con_par         shift and go to state 225
    operacion_log_not_sin_par      shift and go to state 42
    operacion_log_not_con_par      shift and go to state 43
    operacion_mat_con_par          shift and go to state 39

state 224

    (71) valor -> VARIABLE .
    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (80) operando_comp_orden -> VARIABLE .
    (144) operandos_log -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (109) operando_comp_eq -> VARIABLE .
    (178) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (179) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (192) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57
    AND             reduce using rule 144 (operandos_log -> VARIABLE .)
    OR              reduce using rule 144 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 144 (operandos_log -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    AUTOINCREMENTO  shift and go to state 58
    AUTODECREMENTO  shift and go to state 59
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! AS              [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! AS              [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]

    operador_mat                   shift and go to state 143

state 225

    (106) operando_comp_eq -> operacion_comp_con_par .
    (132) operacion_comp -> operacion_comp_con_par .

    IGUAL           reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    NO_IGUAL        reduce using rule 106 (operando_comp_eq -> operacion_comp_con_par .)
    AND             reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    OR              reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    RPARENT         reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)
    AS              reduce using rule 132 (operacion_comp -> operacion_comp_con_par .)


state 226

    (71) valor -> VARIABLE .
    (28) operacion_mat_sin_par -> VARIABLE . operador_mat operacion_mat
    (90) indexacion -> VARIABLE . CORCH_IZQ valor CORCH_IZQ
    (190) ejecutar_funcion -> VARIABLE . LPARENT valores RPARENT
    (191) ejecutar_funcion -> VARIABLE . LPARENT RPARENT
    (144) operandos_log -> VARIABLE .
    (80) operando_comp_orden -> VARIABLE .
    (12) operando_mat -> VARIABLE .
    (178) operacion_unaria -> VARIABLE . AUTOINCREMENTO
    (179) operacion_unaria -> VARIABLE . AUTODECREMENTO
    (192) operacion_autoasig -> VARIABLE . operador_mat IGUAL operacion_mat
    (109) operando_comp_eq -> VARIABLE .
    (3) operador_mat -> . MAS
    (4) operador_mat -> . RESTA
    (5) operador_mat -> . MULTIPL
    (6) operador_mat -> . DIVISION

  ! reduce/reduce conflict for AS resolved using rule 71 (valor -> VARIABLE .)
  ! reduce/reduce conflict for AS resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_QUE resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MENOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for MAYOR_O_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! reduce/reduce conflict for NO_IGUAL resolved using rule 12 (operando_mat -> VARIABLE .)
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPL resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    CORCH_IZQ       shift and go to state 56
    LPARENT         shift and go to state 57
    AND             reduce using rule 144 (operandos_log -> VARIABLE .)
    OR              reduce using rule 144 (operandos_log -> VARIABLE .)
    RPARENT         reduce using rule 144 (operandos_log -> VARIABLE .)
    AS              reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_QUE       reduce using rule 12 (operando_mat -> VARIABLE .)
    MENOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    MAYOR_O_IGUAL   reduce using rule 12 (operando_mat -> VARIABLE .)
    IGUAL           reduce using rule 12 (operando_mat -> VARIABLE .)
    NO_IGUAL        reduce using rule 12 (operando_mat -> VARIABLE .)
    AUTOINCREMENTO  shift and go to state 58
    AUTODECREMENTO  shift and go to state 59
    MAS             shift and go to state 61
    RESTA           shift and go to state 62
    MULTIPL         shift and go to state 63
    DIVISION        shift and go to state 64

  ! AS              [ reduce using rule 71 (valor -> VARIABLE .) ]
  ! AS              [ reduce using rule 144 (operandos_log -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MENOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAYOR_O_IGUAL   [ reduce using rule 80 (operando_comp_orden -> VARIABLE .) ]
  ! MAS             [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! RESTA           [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! MULTIPL         [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! DIVISION        [ reduce using rule 12 (operando_mat -> VARIABLE .) ]
  ! IGUAL           [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]
  ! NO_IGUAL        [ reduce using rule 109 (operando_comp_eq -> VARIABLE .) ]

    operador_mat                   shift and go to state 143

state 227

    (24) casting_num -> LPARENT valor AS . INT RPARENT
    (25) casting_num -> LPARENT valor AS . DOUBLE RPARENT

    INT             shift and go to state 235
    DOUBLE          shift and go to state 236


state 228

    (165) read -> STDIN PUNTO READLINESYNC LPARENT RPARENT .

    COMA            reduce using rule 165 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT .)
    $end            reduce using rule 165 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT .)
    CORCH_DER       reduce using rule 165 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT .)
    AS              reduce using rule 165 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT .)
    DOSPUNTOS       reduce using rule 165 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT .)
    LLAVER          reduce using rule 165 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT .)
    RPARENT         reduce using rule 165 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT .)
    CORCH_IZQ       reduce using rule 165 (read -> STDIN PUNTO READLINESYNC LPARENT RPARENT .)


state 229

    (193) casting -> LPARENT valor AS . tipo_dato RPARENT
    (112) operando_comp_eq -> LPARENT valor AS . BOOL RPARENT
    (24) casting_num -> LPARENT valor AS . INT RPARENT
    (25) casting_num -> LPARENT valor AS . DOUBLE RPARENT
    (93) tipo_dato -> . BOOL
    (94) tipo_dato -> . DOUBLE
    (95) tipo_dato -> . INT
    (96) tipo_dato -> . STRING
    (97) tipo_dato -> . VOID
    (98) tipo_dato -> . LIST
    (99) tipo_dato -> . SET
    (100) tipo_dato -> . MAP

    BOOL            shift and go to state 204
    INT             shift and go to state 202
    DOUBLE          shift and go to state 203
    STRING          shift and go to state 205
    VOID            shift and go to state 206
    LIST            shift and go to state 207
    SET             shift and go to state 208
    MAP             shift and go to state 209

    tipo_dato                      shift and go to state 201

state 230

    (193) casting -> LPARENT valor AS tipo_dato RPARENT .

    COMA            reduce using rule 193 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    $end            reduce using rule 193 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    CORCH_DER       reduce using rule 193 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    AS              reduce using rule 193 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    DOSPUNTOS       reduce using rule 193 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    LLAVER          reduce using rule 193 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    RPARENT         reduce using rule 193 (casting -> LPARENT valor AS tipo_dato RPARENT .)
    CORCH_IZQ       reduce using rule 193 (casting -> LPARENT valor AS tipo_dato RPARENT .)


state 231

    (24) casting_num -> LPARENT valor AS INT RPARENT .

    MAS             reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    RESTA           reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    MULTIPL         reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    DIVISION        reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    COMA            reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    $end            reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    IGUAL           reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    NO_IGUAL        reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    MAYOR_QUE       reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    MENOR_QUE       reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    MENOR_O_IGUAL   reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    MAYOR_O_IGUAL   reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    CORCH_DER       reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    AS              reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    DOSPUNTOS       reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    LLAVER          reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    RPARENT         reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    CORCH_IZQ       reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    AND             reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)
    OR              reduce using rule 24 (casting_num -> LPARENT valor AS INT RPARENT .)


state 232

    (25) casting_num -> LPARENT valor AS DOUBLE RPARENT .

    MAS             reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    RESTA           reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    MULTIPL         reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    DIVISION        reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    COMA            reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    $end            reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    IGUAL           reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    NO_IGUAL        reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    MAYOR_QUE       reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    MENOR_QUE       reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    MENOR_O_IGUAL   reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    MAYOR_O_IGUAL   reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    CORCH_DER       reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    AS              reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    DOSPUNTOS       reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    LLAVER          reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    RPARENT         reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    CORCH_IZQ       reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    AND             reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)
    OR              reduce using rule 25 (casting_num -> LPARENT valor AS DOUBLE RPARENT .)


state 233

    (112) operando_comp_eq -> LPARENT valor AS BOOL RPARENT .

    IGUAL           reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    NO_IGUAL        reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    AND             reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    OR              reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    COMA            reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    $end            reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    CORCH_DER       reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    RPARENT         reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    AS              reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    DOSPUNTOS       reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    LLAVER          reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)
    CORCH_IZQ       reduce using rule 112 (operando_comp_eq -> LPARENT valor AS BOOL RPARENT .)


state 234

    (112) operando_comp_eq -> LPARENT valor AS . BOOL RPARENT
    (24) casting_num -> LPARENT valor AS . INT RPARENT
    (25) casting_num -> LPARENT valor AS . DOUBLE RPARENT

    BOOL            shift and go to state 237
    INT             shift and go to state 235
    DOUBLE          shift and go to state 236


state 235

    (24) casting_num -> LPARENT valor AS INT . RPARENT

    RPARENT         shift and go to state 231


state 236

    (25) casting_num -> LPARENT valor AS DOUBLE . RPARENT

    RPARENT         shift and go to state 232


state 237

    (112) operando_comp_eq -> LPARENT valor AS BOOL . RPARENT

    RPARENT         shift and go to state 233

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CORCH_IZQ in state 5 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 5 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 5 resolved as shift
WARNING: shift/reduce conflict for MAS in state 5 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 5 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 5 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 5 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 73 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 74 resolved as shift
WARNING: shift/reduce conflict for MAS in state 75 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 75 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 75 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 85 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 120 resolved as shift
WARNING: shift/reduce conflict for MAS in state 120 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 120 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 120 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 120 resolved as shift
WARNING: shift/reduce conflict for MAS in state 132 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 132 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 132 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 132 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 140 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 151 resolved as shift
WARNING: shift/reduce conflict for MAS in state 151 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 151 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 151 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 151 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 179 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 179 resolved as shift
WARNING: shift/reduce conflict for MAS in state 179 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 179 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 179 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 179 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 185 resolved as shift
WARNING: shift/reduce conflict for CORCH_IZQ in state 185 resolved as shift
WARNING: shift/reduce conflict for MAS in state 185 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 185 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 185 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 185 resolved as shift
WARNING: shift/reduce conflict for MAS in state 195 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 195 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 195 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 195 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 202 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 203 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 204 resolved as shift
WARNING: shift/reduce conflict for MAS in state 214 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 214 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 214 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 214 resolved as shift
WARNING: shift/reduce conflict for MAS in state 224 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 224 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 224 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 224 resolved as shift
WARNING: shift/reduce conflict for MAS in state 226 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 226 resolved as shift
WARNING: shift/reduce conflict for MULTIPL in state 226 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 226 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 5
WARNING: reduce/reduce conflict in state 5 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 5
WARNING: reduce/reduce conflict in state 5 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 5
WARNING: reduce/reduce conflict in state 5 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 5
WARNING: reduce/reduce conflict in state 7 resolved using rule (valor -> indexacion)
WARNING: rejected rule (operandos_log -> indexacion) in state 7
WARNING: reduce/reduce conflict in state 7 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (valor -> indexacion) in state 7
WARNING: reduce/reduce conflict in state 7 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 7
WARNING: reduce/reduce conflict in state 7 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 7
WARNING: reduce/reduce conflict in state 9 resolved using rule (valor -> ejecutar_funcion)
WARNING: rejected rule (operandos_log -> ejecutar_funcion) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (valor -> ejecutar_funcion) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 9
WARNING: reduce/reduce conflict in state 9 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (valor -> negativo) in state 10
WARNING: reduce/reduce conflict in state 10 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_eq -> negativo) in state 10
WARNING: reduce/reduce conflict in state 10 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 10
WARNING: reduce/reduce conflict in state 12 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (datos -> numero) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 12
WARNING: reduce/reduce conflict in state 14 resolved using rule (datos -> bool)
WARNING: rejected rule (operandos_log -> bool) in state 14
WARNING: reduce/reduce conflict in state 34 resolved using rule (operandos_log -> operacion_log_not)
WARNING: rejected rule (operacion_log -> operacion_log_not) in state 34
WARNING: reduce/reduce conflict in state 35 resolved using rule (operacion_log_sin_par -> operandos_log)
WARNING: rejected rule (operacion_log -> operandos_log) in state 35
WARNING: reduce/reduce conflict in state 75 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 75 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 75
WARNING: reduce/reduce conflict in state 76 resolved using rule (valor -> indexacion)
WARNING: rejected rule (operandos_log -> indexacion) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (valor -> indexacion) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 76
WARNING: reduce/reduce conflict in state 77 resolved using rule (valor -> ejecutar_funcion)
WARNING: rejected rule (operandos_log -> ejecutar_funcion) in state 77
WARNING: reduce/reduce conflict in state 77 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (valor -> ejecutar_funcion) in state 77
WARNING: reduce/reduce conflict in state 77 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 77
WARNING: reduce/reduce conflict in state 77 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 77
WARNING: reduce/reduce conflict in state 78 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (valor -> negativo) in state 78
WARNING: reduce/reduce conflict in state 78 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 78
WARNING: reduce/reduce conflict in state 78 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_eq -> negativo) in state 78
WARNING: reduce/reduce conflict in state 79 resolved using rule (operacion_log_sin_par -> operandos_log)
WARNING: rejected rule (operacion_log -> operandos_log) in state 79
WARNING: reduce/reduce conflict in state 82 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (datos -> numero) in state 82
WARNING: reduce/reduce conflict in state 82 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 82
WARNING: reduce/reduce conflict in state 82 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 82
WARNING: reduce/reduce conflict in state 83 resolved using rule (operandos_log -> operacion_log_not)
WARNING: rejected rule (operacion_log -> operacion_log_not) in state 83
WARNING: reduce/reduce conflict in state 88 resolved using rule (operacion_mat_pos -> RESTA operacion_mat_con_par)
WARNING: rejected rule (operacion_mat_neg -> RESTA operacion_mat_con_par) in state 88
WARNING: reduce/reduce conflict in state 97 resolved using rule (conjunto -> LLAVEL LLAVER)
WARNING: rejected rule (mapa -> LLAVEL LLAVER) in state 97
WARNING: reduce/reduce conflict in state 132 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 132
WARNING: reduce/reduce conflict in state 132 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 132
WARNING: reduce/reduce conflict in state 132 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 132
WARNING: reduce/reduce conflict in state 132 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 132
WARNING: reduce/reduce conflict in state 133 resolved using rule (valor -> indexacion)
WARNING: rejected rule (operandos_log -> indexacion) in state 133
WARNING: reduce/reduce conflict in state 133 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (valor -> indexacion) in state 133
WARNING: reduce/reduce conflict in state 133 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 133
WARNING: reduce/reduce conflict in state 133 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 133
WARNING: reduce/reduce conflict in state 134 resolved using rule (valor -> ejecutar_funcion)
WARNING: rejected rule (operandos_log -> ejecutar_funcion) in state 134
WARNING: reduce/reduce conflict in state 134 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (valor -> ejecutar_funcion) in state 134
WARNING: reduce/reduce conflict in state 134 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 134
WARNING: reduce/reduce conflict in state 134 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 134
WARNING: reduce/reduce conflict in state 135 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (valor -> negativo) in state 135
WARNING: reduce/reduce conflict in state 135 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 135
WARNING: reduce/reduce conflict in state 135 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_eq -> negativo) in state 135
WARNING: reduce/reduce conflict in state 136 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (datos -> numero) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 136
WARNING: reduce/reduce conflict in state 136 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 136
WARNING: reduce/reduce conflict in state 151 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 151
WARNING: reduce/reduce conflict in state 151 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 151
WARNING: reduce/reduce conflict in state 153 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 153
WARNING: reduce/reduce conflict in state 153 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 153
WARNING: reduce/reduce conflict in state 154 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 154
WARNING: reduce/reduce conflict in state 154 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 154
WARNING: reduce/reduce conflict in state 155 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 155
WARNING: reduce/reduce conflict in state 155 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 155
WARNING: reduce/reduce conflict in state 158 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_eq -> negativo) in state 158
WARNING: reduce/reduce conflict in state 158 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 158
WARNING: reduce/reduce conflict in state 173 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 173
WARNING: reduce/reduce conflict in state 173 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 173
WARNING: reduce/reduce conflict in state 177 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 177
WARNING: reduce/reduce conflict in state 177 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 177
WARNING: reduce/reduce conflict in state 178 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 178
WARNING: reduce/reduce conflict in state 178 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 178
WARNING: reduce/reduce conflict in state 179 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 179
WARNING: reduce/reduce conflict in state 179 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 179
WARNING: reduce/reduce conflict in state 180 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_eq -> negativo) in state 180
WARNING: reduce/reduce conflict in state 180 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 180
WARNING: reduce/reduce conflict in state 184 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 184
WARNING: reduce/reduce conflict in state 185 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 185
WARNING: reduce/reduce conflict in state 186 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 186
WARNING: reduce/reduce conflict in state 187 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 187
WARNING: reduce/reduce conflict in state 188 resolved using rule (operando_mat -> negativo)
WARNING: rejected rule (operando_comp_orden -> negativo) in state 188
WARNING: reduce/reduce conflict in state 195 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 195
WARNING: reduce/reduce conflict in state 195 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 195
WARNING: reduce/reduce conflict in state 195 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 195
WARNING: reduce/reduce conflict in state 195 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 195
WARNING: reduce/reduce conflict in state 196 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (valor -> indexacion) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operandos_log -> indexacion) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 196
WARNING: reduce/reduce conflict in state 196 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 196
WARNING: reduce/reduce conflict in state 197 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (valor -> ejecutar_funcion) in state 197
WARNING: reduce/reduce conflict in state 197 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operandos_log -> ejecutar_funcion) in state 197
WARNING: reduce/reduce conflict in state 197 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 197
WARNING: reduce/reduce conflict in state 197 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 197
WARNING: reduce/reduce conflict in state 198 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (datos -> numero) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_eq -> numero) in state 198
WARNING: reduce/reduce conflict in state 198 resolved using rule (operando_mat -> numero)
WARNING: rejected rule (operando_comp_orden -> numero) in state 198
WARNING: reduce/reduce conflict in state 214 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 214
WARNING: reduce/reduce conflict in state 214 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 214
WARNING: reduce/reduce conflict in state 214 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 214
WARNING: reduce/reduce conflict in state 214 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 214
WARNING: reduce/reduce conflict in state 215 resolved using rule (valor -> indexacion)
WARNING: rejected rule (operandos_log -> indexacion) in state 215
WARNING: reduce/reduce conflict in state 215 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (valor -> indexacion) in state 215
WARNING: reduce/reduce conflict in state 215 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_orden -> indexacion) in state 215
WARNING: reduce/reduce conflict in state 215 resolved using rule (operando_mat -> indexacion)
WARNING: rejected rule (operando_comp_eq -> indexacion) in state 215
WARNING: reduce/reduce conflict in state 216 resolved using rule (valor -> ejecutar_funcion)
WARNING: rejected rule (operandos_log -> ejecutar_funcion) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (valor -> ejecutar_funcion) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_orden -> ejecutar_funcion) in state 216
WARNING: reduce/reduce conflict in state 216 resolved using rule (operando_mat -> ejecutar_funcion)
WARNING: rejected rule (operando_comp_eq -> ejecutar_funcion) in state 216
WARNING: reduce/reduce conflict in state 217 resolved using rule (datos -> bool)
WARNING: rejected rule (operandos_log -> bool) in state 217
WARNING: reduce/reduce conflict in state 224 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 224
WARNING: reduce/reduce conflict in state 224 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 224
WARNING: reduce/reduce conflict in state 224 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 224
WARNING: reduce/reduce conflict in state 224 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 224
WARNING: reduce/reduce conflict in state 226 resolved using rule (valor -> VARIABLE)
WARNING: rejected rule (operandos_log -> VARIABLE) in state 226
WARNING: reduce/reduce conflict in state 226 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 226
WARNING: reduce/reduce conflict in state 226 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_orden -> VARIABLE) in state 226
WARNING: reduce/reduce conflict in state 226 resolved using rule (operando_mat -> VARIABLE)
WARNING: rejected rule (operando_comp_eq -> VARIABLE) in state 226
WARNING: Rule (valor -> VARIABLE) is never reduced
WARNING: Rule (operando_comp_eq -> VARIABLE) is never reduced
WARNING: Rule (operando_comp_orden -> VARIABLE) is never reduced
WARNING: Rule (valor -> indexacion) is never reduced
WARNING: Rule (operando_comp_eq -> indexacion) is never reduced
WARNING: Rule (operando_comp_orden -> indexacion) is never reduced
WARNING: Rule (valor -> ejecutar_funcion) is never reduced
WARNING: Rule (operando_comp_eq -> ejecutar_funcion) is never reduced
WARNING: Rule (operando_comp_orden -> ejecutar_funcion) is never reduced
WARNING: Rule (valor -> negativo) is never reduced
WARNING: Rule (operando_comp_eq -> negativo) is never reduced
WARNING: Rule (operando_comp_orden -> negativo) is never reduced
WARNING: Rule (datos -> numero) is never reduced
WARNING: Rule (operando_comp_eq -> numero) is never reduced
WARNING: Rule (operando_comp_orden -> numero) is never reduced
WARNING: Rule (operacion_log -> operacion_log_not) is never reduced
WARNING: Rule (operacion_log -> operandos_log) is never reduced
WARNING: Rule (operacion_mat_neg -> RESTA operacion_mat_con_par) is never reduced
WARNING: Rule (mapa -> LLAVEL LLAVER) is never reduced
