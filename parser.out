Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMA
    CORCHETE_DER
    CORCHETE_IZQ
    ELSE
    FALSE
    FOR
    FUNCION
    IF
    IN
    INCREMENTADOR
    LIST
    LLAVEL
    LLAVER
    MAIN
    MAS
    MULTIPL
    NEGACION
    OR
    PARSE
    PUNTO
    READLINESYNC
    RETURN
    SALTO_LINEA
    STDIN
    TABULACION
    TODOUBLE
    TOINT
    TOSTRING
    TRUE
    VOID
    WRITE

Grammar

Rule 0     S' -> comparaciones
Rule 1     comparaciones -> VARIABLE comp VARIABLE PUNTOCOMA
Rule 2     asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA
Rule 3     salida -> PRINT LPARENT tipodato RPARENT PUNTOCOMA
Rule 4     funcion -> VARIABLE LPARENT argumentos RPARENT PUNTOCOMA
Rule 5     argumentos -> VARIABLE
Rule 6     argumentos -> tipodato argumentos
Rule 7     tipodato -> INTEGER
Rule 8     tipodato -> CADENA
Rule 9     tipodato -> DOUBLE
Rule 10    tipodato -> VARIABLE
Rule 11    declaradores -> INT
Rule 12    declaradores -> CONST
Rule 13    declaradores -> VAR
Rule 14    declaradores -> BOOL
Rule 15    declaradores -> FINAL
Rule 16    declaradores -> STRING
Rule 17    comp -> ES_IGUAL
Rule 18    comp -> NO_IGUAL
Rule 19    comp -> MENOR_QUE
Rule 20    comp -> MAYOR_QUE
Rule 21    comp -> MENOR_O_IGUAL
Rule 22    comp -> MAYOR_O_IGUAL

Terminals, with rules where they appear

AND                  : 
BOOL                 : 14
CADENA               : 8
COMA                 : 
CONST                : 12
CORCHETE_DER         : 
CORCHETE_IZQ         : 
DIVISION             : 
DOUBLE               : 9
ELSE                 : 
ES_IGUAL             : 17
FALSE                : 
FINAL                : 15
FOR                  : 
FUNCION              : 
IF                   : 
IGUAL                : 2
IN                   : 
INCREMENTADOR        : 
INT                  : 11
INTEGER              : 7
LIST                 : 
LLAVEL               : 
LLAVER               : 
LPARENT              : 3 4
MAIN                 : 
MAS                  : 
MAYOR_O_IGUAL        : 22
MAYOR_QUE            : 20
MENOR_O_IGUAL        : 21
MENOR_QUE            : 19
MULTIPL              : 
NEGACION             : 
NO_IGUAL             : 18
OR                   : 
PARSE                : 
PRINT                : 3
PUNTO                : 
PUNTOCOMA            : 1 2 3 4
READLINESYNC         : 
RESTA                : 17
RETURN               : 
RPARENT              : 3 4
SALTO_LINEA          : 
STDIN                : 
STRING               : 16
TABULACION           : 
TODOUBLE             : 
TOINT                : 
TOSTRING             : 
TRUE                 : 
VAR                  : 13
VARIABLE             : 1 1 2 4 5 10
VOID                 : 
WRITE                : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 4 6
asignacion           : 
comp                 : 1
comparaciones        : 0
declaradores         : 2
funcion              : 
operacion            : 
operador             : 2
salida               : 
tipodato             : 2 3 6

Parsing method: LALR

state 0

    (0) S' -> . comparaciones
    (1) comparaciones -> . VARIABLE comp VARIABLE PUNTOCOMA

    VARIABLE        shift and go to state 2

    comparaciones                  shift and go to state 1

state 1

    (0) S' -> comparaciones .



state 2

    (1) comparaciones -> VARIABLE . comp VARIABLE PUNTOCOMA
    (17) comp -> . ES_IGUAL
    (18) comp -> . NO_IGUAL
    (19) comp -> . MENOR_QUE
    (20) comp -> . MAYOR_QUE
    (21) comp -> . MENOR_O_IGUAL
    (22) comp -> . MAYOR_O_IGUAL

    ES_IGUAL        shift and go to state 4
    NO_IGUAL        shift and go to state 5
    MENOR_QUE       shift and go to state 6
    MAYOR_QUE       shift and go to state 7
    MENOR_O_IGUAL   shift and go to state 8
    MAYOR_O_IGUAL   shift and go to state 9

    comp                           shift and go to state 3

state 3

    (1) comparaciones -> VARIABLE comp . VARIABLE PUNTOCOMA

    VARIABLE        shift and go to state 10


state 4

    (17) comp -> ES_IGUAL .

    VARIABLE        reduce using rule 17 (comp -> ES_IGUAL .)


state 5

    (18) comp -> NO_IGUAL .

    VARIABLE        reduce using rule 18 (comp -> NO_IGUAL .)


state 6

    (19) comp -> MENOR_QUE .

    VARIABLE        reduce using rule 19 (comp -> MENOR_QUE .)


state 7

    (20) comp -> MAYOR_QUE .

    VARIABLE        reduce using rule 20 (comp -> MAYOR_QUE .)


state 8

    (21) comp -> MENOR_O_IGUAL .

    VARIABLE        reduce using rule 21 (comp -> MENOR_O_IGUAL .)


state 9

    (22) comp -> MAYOR_O_IGUAL .

    VARIABLE        reduce using rule 22 (comp -> MAYOR_O_IGUAL .)

    tipodato                       shift and go to state 11

state 10

    (1) comparaciones -> VARIABLE comp VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 11


state 11

    (1) comparaciones -> VARIABLE comp VARIABLE PUNTOCOMA .

    $end            reduce using rule 1 (comparaciones -> VARIABLE comp VARIABLE PUNTOCOMA .)

