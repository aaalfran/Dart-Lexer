Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COMA
    FUNCION
    INCREMENTADOR
    LIST
    MAIN
    NEGACION
    OR
    PARSE
    READLINESYNC
    SALTO_LINEA
    STDIN
    TABULACION
    TODOUBLE
    TOINT
    TOSTRING

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> asignacion
Rule 2     sentencias -> comparacion
Rule 3     sentencias -> operacion
Rule 4     sentencias -> impresion
Rule 5     sentencias -> funcion
Rule 6     sentencias -> estructuras
Rule 7     sentencias -> for
Rule 8     sentencias -> if
Rule 9     sentencias -> if-else
Rule 10    sentencias -> write
Rule 11    asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA
Rule 12    asignacion -> declaradores VARIABLE IGUAL negativo PUNTOCOMA
Rule 13    comparacion -> VARIABLE comparadores VARIABLE PUNTOCOMA
Rule 14    operacion -> datonumerico operador datonumerico PUNTOCOMA
Rule 15    impresion -> PRINT LPARENT tipodato RPARENT PUNTOCOMA
Rule 16    funcion -> VOID VARIABLE LPARENT declaracionfunciones VARIABLE RPARENT LLAVEL LLAVER
Rule 17    funcion -> VOID VARIABLE LPARENT VARIABLE RPARENT LLAVEL LLAVER
Rule 18    funcion -> VOID VARIABLE LPARENT RPARENT LLAVEL LLAVER
Rule 19    funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER
Rule 20    funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN tipodato PUNTOCOMA LLAVER
Rule 21    estructuras -> declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ tipodatoestructura CORCHETE_DER PUNTOCOMA
Rule 22    estructuras -> declaradoresestruras VARIABLE IGUAL LLAVEL tipodato DOSPUNTOS tipodato LLAVER PUNTOCOMA
Rule 23    estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL tipodato LLAVER PUNTOCOMA
Rule 24    for -> FOR LPARENT declaradores VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER
Rule 25    for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER
Rule 26    if -> IF LPARENT VARIABLE RPARENT LLAVEL LLAVER
Rule 27    if -> IF LPARENT TRUE RPARENT LLAVEL LLAVER
Rule 28    if -> IF LPARENT FALSE RPARENT LLAVEL LLAVER
Rule 29    if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER
Rule 30    if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER
Rule 31    if-else -> if ELSE LLAVEL LLAVER
Rule 32    write -> STDOUT PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA
Rule 33    declaracionfunciones -> INT
Rule 34    declaracionfunciones -> DOUBLE
Rule 35    declaracionfunciones -> STRING
Rule 36    declaracionfunciones -> BOOL
Rule 37    tipodatoestructura -> INTEGER
Rule 38    tipodatoestructura -> CADENA
Rule 39    tipodatoestructura -> DOUBLE
Rule 40    datonumerico -> INTEGER
Rule 41    datonumerico -> DOUBLE
Rule 42    operador -> MAS
Rule 43    operador -> RESTA
Rule 44    operador -> MULTIPL
Rule 45    operador -> DIVISION
Rule 46    comparadores -> ES_IGUAL
Rule 47    comparadores -> NO_IGUAL
Rule 48    comparadores -> MENOR_QUE
Rule 49    comparadores -> MAYOR_QUE
Rule 50    comparadores -> MENOR_O_IGUAL
Rule 51    comparadores -> MAYOR_O_IGUAL
Rule 52    declaradores -> INT
Rule 53    declaradores -> CONST
Rule 54    declaradores -> VAR
Rule 55    declaradores -> BOOL
Rule 56    declaradores -> FINAL
Rule 57    declaradores -> STRING
Rule 58    declaradoresestruras -> CONST
Rule 59    declaradoresestruras -> VAR
Rule 60    declaradoresestruras -> FINAL
Rule 61    negativo -> RESTA INTEGER
Rule 62    negativo -> RESTA FLOAT
Rule 63    tipodato -> INTEGER
Rule 64    tipodato -> CADENA
Rule 65    tipodato -> FLOAT
Rule 66    tipodato -> VARIABLE

Terminals, with rules where they appear

AND                  : 
BOOL                 : 36 55
CADENA               : 38 64
COMA                 : 
CONST                : 53 58
CORCHETE_DER         : 21
CORCHETE_IZQ         : 21
DIVISION             : 45
DOSPUNTOS            : 22
DOUBLE               : 34 39 41
ELSE                 : 31
ES_IGUAL             : 46
FALSE                : 28
FINAL                : 56 60
FLOAT                : 62 65
FOR                  : 24 25
FUNCION              : 
IF                   : 26 27 28 29 30
IGUAL                : 11 12 21 22 23 25
IN                   : 24
INCREMENTADOR        : 
INT                  : 33 52
INTEGER              : 25 25 37 40 61 63
LIST                 : 
LLAVEL               : 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31
LLAVER               : 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31
LPARENT              : 15 16 17 18 19 20 24 25 26 27 28 29 30 32
MAIN                 : 
MAS                  : 42
MAYOR_O_IGUAL        : 51
MAYOR_QUE            : 23 49
MENOR_O_IGUAL        : 50
MENOR_QUE            : 23 48
MULTIPL              : 44
NEGACION             : 
NO_IGUAL             : 47
OR                   : 
PARSE                : 
PRINT                : 15
PUNTO                : 32
PUNTOCOMA            : 11 12 13 14 15 19 20 21 22 23 25 25 32
READLINESYNC         : 
RESTA                : 43 61 62
RETURN               : 19 20
RPARENT              : 15 16 17 18 19 20 24 25 26 27 28 29 30 32
SALTO_LINEA          : 
STDIN                : 
STDOUT               : 32
STRING               : 35 57
TABULACION           : 
TODOUBLE             : 
TOINT                : 
TOSTRING             : 
TRUE                 : 27
VAR                  : 54 59
VARIABLE             : 11 12 13 13 16 16 17 17 18 19 19 20 21 22 23 24 24 25 25 25 26 29 29 66
VOID                 : 16 17 18
WRITE                : 32
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
comparacion          : 2
comparadores         : 13 25 29 30
datonumerico         : 14 14 30 30
declaracionfunciones : 16 19 20 23
declaradores         : 11 12 24 25
declaradoresestruras : 21 22 23
estructuras          : 6
for                  : 7
funcion              : 5
if                   : 8 31
if-else              : 9
impresion            : 4
negativo             : 12
operacion            : 3
operador             : 14 25 25
sentencias           : 0
tipodato             : 11 15 20 22 22 23 32
tipodatoestructura   : 21
write                : 10

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . asignacion
    (2) sentencias -> . comparacion
    (3) sentencias -> . operacion
    (4) sentencias -> . impresion
    (5) sentencias -> . funcion
    (6) sentencias -> . estructuras
    (7) sentencias -> . for
    (8) sentencias -> . if
    (9) sentencias -> . if-else
    (10) sentencias -> . write
    (11) asignacion -> . declaradores VARIABLE IGUAL tipodato PUNTOCOMA
    (12) asignacion -> . declaradores VARIABLE IGUAL negativo PUNTOCOMA
    (13) comparacion -> . VARIABLE comparadores VARIABLE PUNTOCOMA
    (14) operacion -> . datonumerico operador datonumerico PUNTOCOMA
    (15) impresion -> . PRINT LPARENT tipodato RPARENT PUNTOCOMA
    (16) funcion -> . VOID VARIABLE LPARENT declaracionfunciones VARIABLE RPARENT LLAVEL LLAVER
    (17) funcion -> . VOID VARIABLE LPARENT VARIABLE RPARENT LLAVEL LLAVER
    (18) funcion -> . VOID VARIABLE LPARENT RPARENT LLAVEL LLAVER
    (19) funcion -> . declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER
    (20) funcion -> . declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN tipodato PUNTOCOMA LLAVER
    (21) estructuras -> . declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ tipodatoestructura CORCHETE_DER PUNTOCOMA
    (22) estructuras -> . declaradoresestruras VARIABLE IGUAL LLAVEL tipodato DOSPUNTOS tipodato LLAVER PUNTOCOMA
    (23) estructuras -> . declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL tipodato LLAVER PUNTOCOMA
    (24) for -> . FOR LPARENT declaradores VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER
    (25) for -> . FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER
    (26) if -> . IF LPARENT VARIABLE RPARENT LLAVEL LLAVER
    (27) if -> . IF LPARENT TRUE RPARENT LLAVEL LLAVER
    (28) if -> . IF LPARENT FALSE RPARENT LLAVEL LLAVER
    (29) if -> . IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER
    (30) if -> . IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER
    (31) if-else -> . if ELSE LLAVEL LLAVER
    (32) write -> . STDOUT PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA
    (52) declaradores -> . INT
    (53) declaradores -> . CONST
    (54) declaradores -> . VAR
    (55) declaradores -> . BOOL
    (56) declaradores -> . FINAL
    (57) declaradores -> . STRING
    (40) datonumerico -> . INTEGER
    (41) datonumerico -> . DOUBLE
    (33) declaracionfunciones -> . INT
    (34) declaracionfunciones -> . DOUBLE
    (35) declaracionfunciones -> . STRING
    (36) declaracionfunciones -> . BOOL
    (58) declaradoresestruras -> . CONST
    (59) declaradoresestruras -> . VAR
    (60) declaradoresestruras -> . FINAL

    VARIABLE        shift and go to state 13
    PRINT           shift and go to state 15
    VOID            shift and go to state 16
    FOR             shift and go to state 19
    IF              shift and go to state 21
    STDOUT          shift and go to state 22
    INT             shift and go to state 23
    CONST           shift and go to state 24
    VAR             shift and go to state 25
    BOOL            shift and go to state 26
    FINAL           shift and go to state 27
    STRING          shift and go to state 28
    INTEGER         shift and go to state 20
    DOUBLE          shift and go to state 29

    sentencias                     shift and go to state 1
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 3
    operacion                      shift and go to state 4
    impresion                      shift and go to state 5
    funcion                        shift and go to state 6
    estructuras                    shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 9
    if-else                        shift and go to state 10
    write                          shift and go to state 11
    declaradores                   shift and go to state 12
    datonumerico                   shift and go to state 14
    declaracionfunciones           shift and go to state 17
    declaradoresestruras           shift and go to state 18

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> asignacion .

    $end            reduce using rule 1 (sentencias -> asignacion .)


state 3

    (2) sentencias -> comparacion .

    $end            reduce using rule 2 (sentencias -> comparacion .)


state 4

    (3) sentencias -> operacion .

    $end            reduce using rule 3 (sentencias -> operacion .)


state 5

    (4) sentencias -> impresion .

    $end            reduce using rule 4 (sentencias -> impresion .)


state 6

    (5) sentencias -> funcion .

    $end            reduce using rule 5 (sentencias -> funcion .)


state 7

    (6) sentencias -> estructuras .

    $end            reduce using rule 6 (sentencias -> estructuras .)


state 8

    (7) sentencias -> for .

    $end            reduce using rule 7 (sentencias -> for .)


state 9

    (8) sentencias -> if .
    (31) if-else -> if . ELSE LLAVEL LLAVER

    $end            reduce using rule 8 (sentencias -> if .)
    ELSE            shift and go to state 30


state 10

    (9) sentencias -> if-else .

    $end            reduce using rule 9 (sentencias -> if-else .)


state 11

    (10) sentencias -> write .

    $end            reduce using rule 10 (sentencias -> write .)


state 12

    (11) asignacion -> declaradores . VARIABLE IGUAL tipodato PUNTOCOMA
    (12) asignacion -> declaradores . VARIABLE IGUAL negativo PUNTOCOMA

    VARIABLE        shift and go to state 31


state 13

    (13) comparacion -> VARIABLE . comparadores VARIABLE PUNTOCOMA
    (46) comparadores -> . ES_IGUAL
    (47) comparadores -> . NO_IGUAL
    (48) comparadores -> . MENOR_QUE
    (49) comparadores -> . MAYOR_QUE
    (50) comparadores -> . MENOR_O_IGUAL
    (51) comparadores -> . MAYOR_O_IGUAL

    ES_IGUAL        shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MENOR_QUE       shift and go to state 35
    MAYOR_QUE       shift and go to state 36
    MENOR_O_IGUAL   shift and go to state 37
    MAYOR_O_IGUAL   shift and go to state 38

    comparadores                   shift and go to state 32

state 14

    (14) operacion -> datonumerico . operador datonumerico PUNTOCOMA
    (42) operador -> . MAS
    (43) operador -> . RESTA
    (44) operador -> . MULTIPL
    (45) operador -> . DIVISION

    MAS             shift and go to state 40
    RESTA           shift and go to state 41
    MULTIPL         shift and go to state 42
    DIVISION        shift and go to state 43

    operador                       shift and go to state 39

state 15

    (15) impresion -> PRINT . LPARENT tipodato RPARENT PUNTOCOMA

    LPARENT         shift and go to state 44


state 16

    (16) funcion -> VOID . VARIABLE LPARENT declaracionfunciones VARIABLE RPARENT LLAVEL LLAVER
    (17) funcion -> VOID . VARIABLE LPARENT VARIABLE RPARENT LLAVEL LLAVER
    (18) funcion -> VOID . VARIABLE LPARENT RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 45


state 17

    (19) funcion -> declaracionfunciones . VARIABLE LPARENT RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER
    (20) funcion -> declaracionfunciones . VARIABLE LPARENT RPARENT LLAVEL RETURN tipodato PUNTOCOMA LLAVER

    VARIABLE        shift and go to state 46


state 18

    (21) estructuras -> declaradoresestruras . VARIABLE IGUAL CORCHETE_IZQ tipodatoestructura CORCHETE_DER PUNTOCOMA
    (22) estructuras -> declaradoresestruras . VARIABLE IGUAL LLAVEL tipodato DOSPUNTOS tipodato LLAVER PUNTOCOMA
    (23) estructuras -> declaradoresestruras . VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL tipodato LLAVER PUNTOCOMA

    VARIABLE        shift and go to state 47


state 19

    (24) for -> FOR . LPARENT declaradores VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER
    (25) for -> FOR . LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    LPARENT         shift and go to state 48


state 20

    (40) datonumerico -> INTEGER .

    MAS             reduce using rule 40 (datonumerico -> INTEGER .)
    RESTA           reduce using rule 40 (datonumerico -> INTEGER .)
    MULTIPL         reduce using rule 40 (datonumerico -> INTEGER .)
    DIVISION        reduce using rule 40 (datonumerico -> INTEGER .)
    PUNTOCOMA       reduce using rule 40 (datonumerico -> INTEGER .)
    ES_IGUAL        reduce using rule 40 (datonumerico -> INTEGER .)
    NO_IGUAL        reduce using rule 40 (datonumerico -> INTEGER .)
    MENOR_QUE       reduce using rule 40 (datonumerico -> INTEGER .)
    MAYOR_QUE       reduce using rule 40 (datonumerico -> INTEGER .)
    MENOR_O_IGUAL   reduce using rule 40 (datonumerico -> INTEGER .)
    MAYOR_O_IGUAL   reduce using rule 40 (datonumerico -> INTEGER .)
    RPARENT         reduce using rule 40 (datonumerico -> INTEGER .)


state 21

    (26) if -> IF . LPARENT VARIABLE RPARENT LLAVEL LLAVER
    (27) if -> IF . LPARENT TRUE RPARENT LLAVEL LLAVER
    (28) if -> IF . LPARENT FALSE RPARENT LLAVEL LLAVER
    (29) if -> IF . LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER
    (30) if -> IF . LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER

    LPARENT         shift and go to state 49


state 22

    (32) write -> STDOUT . PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA

    PUNTO           shift and go to state 50


state 23

    (52) declaradores -> INT .
    (33) declaracionfunciones -> INT .

  ! reduce/reduce conflict for VARIABLE resolved using rule 33 (declaracionfunciones -> INT .)
    VARIABLE        reduce using rule 33 (declaracionfunciones -> INT .)

  ! VARIABLE        [ reduce using rule 52 (declaradores -> INT .) ]


state 24

    (53) declaradores -> CONST .
    (58) declaradoresestruras -> CONST .

  ! reduce/reduce conflict for VARIABLE resolved using rule 53 (declaradores -> CONST .)
    VARIABLE        reduce using rule 53 (declaradores -> CONST .)

  ! VARIABLE        [ reduce using rule 58 (declaradoresestruras -> CONST .) ]


state 25

    (54) declaradores -> VAR .
    (59) declaradoresestruras -> VAR .

  ! reduce/reduce conflict for VARIABLE resolved using rule 54 (declaradores -> VAR .)
    VARIABLE        reduce using rule 54 (declaradores -> VAR .)

  ! VARIABLE        [ reduce using rule 59 (declaradoresestruras -> VAR .) ]


state 26

    (55) declaradores -> BOOL .
    (36) declaracionfunciones -> BOOL .

  ! reduce/reduce conflict for VARIABLE resolved using rule 36 (declaracionfunciones -> BOOL .)
    VARIABLE        reduce using rule 36 (declaracionfunciones -> BOOL .)

  ! VARIABLE        [ reduce using rule 55 (declaradores -> BOOL .) ]


state 27

    (56) declaradores -> FINAL .
    (60) declaradoresestruras -> FINAL .

  ! reduce/reduce conflict for VARIABLE resolved using rule 56 (declaradores -> FINAL .)
    VARIABLE        reduce using rule 56 (declaradores -> FINAL .)

  ! VARIABLE        [ reduce using rule 60 (declaradoresestruras -> FINAL .) ]


state 28

    (57) declaradores -> STRING .
    (35) declaracionfunciones -> STRING .

  ! reduce/reduce conflict for VARIABLE resolved using rule 35 (declaracionfunciones -> STRING .)
    VARIABLE        reduce using rule 35 (declaracionfunciones -> STRING .)

  ! VARIABLE        [ reduce using rule 57 (declaradores -> STRING .) ]


state 29

    (41) datonumerico -> DOUBLE .
    (34) declaracionfunciones -> DOUBLE .

    MAS             reduce using rule 41 (datonumerico -> DOUBLE .)
    RESTA           reduce using rule 41 (datonumerico -> DOUBLE .)
    MULTIPL         reduce using rule 41 (datonumerico -> DOUBLE .)
    DIVISION        reduce using rule 41 (datonumerico -> DOUBLE .)
    VARIABLE        reduce using rule 34 (declaracionfunciones -> DOUBLE .)


state 30

    (31) if-else -> if ELSE . LLAVEL LLAVER

    LLAVEL          shift and go to state 51


state 31

    (11) asignacion -> declaradores VARIABLE . IGUAL tipodato PUNTOCOMA
    (12) asignacion -> declaradores VARIABLE . IGUAL negativo PUNTOCOMA

    IGUAL           shift and go to state 52


state 32

    (13) comparacion -> VARIABLE comparadores . VARIABLE PUNTOCOMA

    VARIABLE        shift and go to state 53


state 33

    (46) comparadores -> ES_IGUAL .

    VARIABLE        reduce using rule 46 (comparadores -> ES_IGUAL .)
    INTEGER         reduce using rule 46 (comparadores -> ES_IGUAL .)
    DOUBLE          reduce using rule 46 (comparadores -> ES_IGUAL .)


state 34

    (47) comparadores -> NO_IGUAL .

    VARIABLE        reduce using rule 47 (comparadores -> NO_IGUAL .)
    INTEGER         reduce using rule 47 (comparadores -> NO_IGUAL .)
    DOUBLE          reduce using rule 47 (comparadores -> NO_IGUAL .)


state 35

    (48) comparadores -> MENOR_QUE .

    VARIABLE        reduce using rule 48 (comparadores -> MENOR_QUE .)
    INTEGER         reduce using rule 48 (comparadores -> MENOR_QUE .)
    DOUBLE          reduce using rule 48 (comparadores -> MENOR_QUE .)


state 36

    (49) comparadores -> MAYOR_QUE .

    VARIABLE        reduce using rule 49 (comparadores -> MAYOR_QUE .)
    INTEGER         reduce using rule 49 (comparadores -> MAYOR_QUE .)
    DOUBLE          reduce using rule 49 (comparadores -> MAYOR_QUE .)


state 37

    (50) comparadores -> MENOR_O_IGUAL .

    VARIABLE        reduce using rule 50 (comparadores -> MENOR_O_IGUAL .)
    INTEGER         reduce using rule 50 (comparadores -> MENOR_O_IGUAL .)
    DOUBLE          reduce using rule 50 (comparadores -> MENOR_O_IGUAL .)


state 38

    (51) comparadores -> MAYOR_O_IGUAL .

    VARIABLE        reduce using rule 51 (comparadores -> MAYOR_O_IGUAL .)
    INTEGER         reduce using rule 51 (comparadores -> MAYOR_O_IGUAL .)
    DOUBLE          reduce using rule 51 (comparadores -> MAYOR_O_IGUAL .)


state 39

    (14) operacion -> datonumerico operador . datonumerico PUNTOCOMA
    (40) datonumerico -> . INTEGER
    (41) datonumerico -> . DOUBLE

    INTEGER         shift and go to state 20
    DOUBLE          shift and go to state 55

    datonumerico                   shift and go to state 54

state 40

    (42) operador -> MAS .

    INTEGER         reduce using rule 42 (operador -> MAS .)
    DOUBLE          reduce using rule 42 (operador -> MAS .)
    MAS             reduce using rule 42 (operador -> MAS .)
    RESTA           reduce using rule 42 (operador -> MAS .)
    MULTIPL         reduce using rule 42 (operador -> MAS .)
    DIVISION        reduce using rule 42 (operador -> MAS .)
    RPARENT         reduce using rule 42 (operador -> MAS .)


state 41

    (43) operador -> RESTA .

    INTEGER         reduce using rule 43 (operador -> RESTA .)
    DOUBLE          reduce using rule 43 (operador -> RESTA .)
    MAS             reduce using rule 43 (operador -> RESTA .)
    RESTA           reduce using rule 43 (operador -> RESTA .)
    MULTIPL         reduce using rule 43 (operador -> RESTA .)
    DIVISION        reduce using rule 43 (operador -> RESTA .)
    RPARENT         reduce using rule 43 (operador -> RESTA .)


state 42

    (44) operador -> MULTIPL .

    INTEGER         reduce using rule 44 (operador -> MULTIPL .)
    DOUBLE          reduce using rule 44 (operador -> MULTIPL .)
    MAS             reduce using rule 44 (operador -> MULTIPL .)
    RESTA           reduce using rule 44 (operador -> MULTIPL .)
    MULTIPL         reduce using rule 44 (operador -> MULTIPL .)
    DIVISION        reduce using rule 44 (operador -> MULTIPL .)
    RPARENT         reduce using rule 44 (operador -> MULTIPL .)


state 43

    (45) operador -> DIVISION .

    INTEGER         reduce using rule 45 (operador -> DIVISION .)
    DOUBLE          reduce using rule 45 (operador -> DIVISION .)
    MAS             reduce using rule 45 (operador -> DIVISION .)
    RESTA           reduce using rule 45 (operador -> DIVISION .)
    MULTIPL         reduce using rule 45 (operador -> DIVISION .)
    DIVISION        reduce using rule 45 (operador -> DIVISION .)
    RPARENT         reduce using rule 45 (operador -> DIVISION .)


state 44

    (15) impresion -> PRINT LPARENT . tipodato RPARENT PUNTOCOMA
    (63) tipodato -> . INTEGER
    (64) tipodato -> . CADENA
    (65) tipodato -> . FLOAT
    (66) tipodato -> . VARIABLE

    INTEGER         shift and go to state 57
    CADENA          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 60

    tipodato                       shift and go to state 56

state 45

    (16) funcion -> VOID VARIABLE . LPARENT declaracionfunciones VARIABLE RPARENT LLAVEL LLAVER
    (17) funcion -> VOID VARIABLE . LPARENT VARIABLE RPARENT LLAVEL LLAVER
    (18) funcion -> VOID VARIABLE . LPARENT RPARENT LLAVEL LLAVER

    LPARENT         shift and go to state 61


state 46

    (19) funcion -> declaracionfunciones VARIABLE . LPARENT RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER
    (20) funcion -> declaracionfunciones VARIABLE . LPARENT RPARENT LLAVEL RETURN tipodato PUNTOCOMA LLAVER

    LPARENT         shift and go to state 62


state 47

    (21) estructuras -> declaradoresestruras VARIABLE . IGUAL CORCHETE_IZQ tipodatoestructura CORCHETE_DER PUNTOCOMA
    (22) estructuras -> declaradoresestruras VARIABLE . IGUAL LLAVEL tipodato DOSPUNTOS tipodato LLAVER PUNTOCOMA
    (23) estructuras -> declaradoresestruras VARIABLE . IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL tipodato LLAVER PUNTOCOMA

    IGUAL           shift and go to state 63


state 48

    (24) for -> FOR LPARENT . declaradores VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER
    (25) for -> FOR LPARENT . declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER
    (52) declaradores -> . INT
    (53) declaradores -> . CONST
    (54) declaradores -> . VAR
    (55) declaradores -> . BOOL
    (56) declaradores -> . FINAL
    (57) declaradores -> . STRING

    INT             shift and go to state 65
    CONST           shift and go to state 66
    VAR             shift and go to state 67
    BOOL            shift and go to state 68
    FINAL           shift and go to state 69
    STRING          shift and go to state 70

    declaradores                   shift and go to state 64

state 49

    (26) if -> IF LPARENT . VARIABLE RPARENT LLAVEL LLAVER
    (27) if -> IF LPARENT . TRUE RPARENT LLAVEL LLAVER
    (28) if -> IF LPARENT . FALSE RPARENT LLAVEL LLAVER
    (29) if -> IF LPARENT . VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER
    (30) if -> IF LPARENT . datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER
    (40) datonumerico -> . INTEGER
    (41) datonumerico -> . DOUBLE

    VARIABLE        shift and go to state 71
    TRUE            shift and go to state 72
    FALSE           shift and go to state 73
    INTEGER         shift and go to state 20
    DOUBLE          shift and go to state 55

    datonumerico                   shift and go to state 74

state 50

    (32) write -> STDOUT PUNTO . WRITE LPARENT tipodato RPARENT PUNTOCOMA

    WRITE           shift and go to state 75


state 51

    (31) if-else -> if ELSE LLAVEL . LLAVER

    LLAVER          shift and go to state 76


state 52

    (11) asignacion -> declaradores VARIABLE IGUAL . tipodato PUNTOCOMA
    (12) asignacion -> declaradores VARIABLE IGUAL . negativo PUNTOCOMA
    (63) tipodato -> . INTEGER
    (64) tipodato -> . CADENA
    (65) tipodato -> . FLOAT
    (66) tipodato -> . VARIABLE
    (61) negativo -> . RESTA INTEGER
    (62) negativo -> . RESTA FLOAT

    INTEGER         shift and go to state 57
    CADENA          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 60
    RESTA           shift and go to state 79

    tipodato                       shift and go to state 77
    negativo                       shift and go to state 78

state 53

    (13) comparacion -> VARIABLE comparadores VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 80


state 54

    (14) operacion -> datonumerico operador datonumerico . PUNTOCOMA

    PUNTOCOMA       shift and go to state 81


state 55

    (41) datonumerico -> DOUBLE .

    PUNTOCOMA       reduce using rule 41 (datonumerico -> DOUBLE .)
    ES_IGUAL        reduce using rule 41 (datonumerico -> DOUBLE .)
    NO_IGUAL        reduce using rule 41 (datonumerico -> DOUBLE .)
    MENOR_QUE       reduce using rule 41 (datonumerico -> DOUBLE .)
    MAYOR_QUE       reduce using rule 41 (datonumerico -> DOUBLE .)
    MENOR_O_IGUAL   reduce using rule 41 (datonumerico -> DOUBLE .)
    MAYOR_O_IGUAL   reduce using rule 41 (datonumerico -> DOUBLE .)
    RPARENT         reduce using rule 41 (datonumerico -> DOUBLE .)


state 56

    (15) impresion -> PRINT LPARENT tipodato . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 82


state 57

    (63) tipodato -> INTEGER .

    RPARENT         reduce using rule 63 (tipodato -> INTEGER .)
    PUNTOCOMA       reduce using rule 63 (tipodato -> INTEGER .)
    DOSPUNTOS       reduce using rule 63 (tipodato -> INTEGER .)
    LLAVER          reduce using rule 63 (tipodato -> INTEGER .)


state 58

    (64) tipodato -> CADENA .

    RPARENT         reduce using rule 64 (tipodato -> CADENA .)
    PUNTOCOMA       reduce using rule 64 (tipodato -> CADENA .)
    DOSPUNTOS       reduce using rule 64 (tipodato -> CADENA .)
    LLAVER          reduce using rule 64 (tipodato -> CADENA .)


state 59

    (65) tipodato -> FLOAT .

    RPARENT         reduce using rule 65 (tipodato -> FLOAT .)
    PUNTOCOMA       reduce using rule 65 (tipodato -> FLOAT .)
    DOSPUNTOS       reduce using rule 65 (tipodato -> FLOAT .)
    LLAVER          reduce using rule 65 (tipodato -> FLOAT .)


state 60

    (66) tipodato -> VARIABLE .

    RPARENT         reduce using rule 66 (tipodato -> VARIABLE .)
    PUNTOCOMA       reduce using rule 66 (tipodato -> VARIABLE .)
    DOSPUNTOS       reduce using rule 66 (tipodato -> VARIABLE .)
    LLAVER          reduce using rule 66 (tipodato -> VARIABLE .)


state 61

    (16) funcion -> VOID VARIABLE LPARENT . declaracionfunciones VARIABLE RPARENT LLAVEL LLAVER
    (17) funcion -> VOID VARIABLE LPARENT . VARIABLE RPARENT LLAVEL LLAVER
    (18) funcion -> VOID VARIABLE LPARENT . RPARENT LLAVEL LLAVER
    (33) declaracionfunciones -> . INT
    (34) declaracionfunciones -> . DOUBLE
    (35) declaracionfunciones -> . STRING
    (36) declaracionfunciones -> . BOOL

    VARIABLE        shift and go to state 83
    RPARENT         shift and go to state 85
    INT             shift and go to state 86
    DOUBLE          shift and go to state 87
    STRING          shift and go to state 88
    BOOL            shift and go to state 89

    declaracionfunciones           shift and go to state 84

state 62

    (19) funcion -> declaracionfunciones VARIABLE LPARENT . RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER
    (20) funcion -> declaracionfunciones VARIABLE LPARENT . RPARENT LLAVEL RETURN tipodato PUNTOCOMA LLAVER

    RPARENT         shift and go to state 90


state 63

    (21) estructuras -> declaradoresestruras VARIABLE IGUAL . CORCHETE_IZQ tipodatoestructura CORCHETE_DER PUNTOCOMA
    (22) estructuras -> declaradoresestruras VARIABLE IGUAL . LLAVEL tipodato DOSPUNTOS tipodato LLAVER PUNTOCOMA
    (23) estructuras -> declaradoresestruras VARIABLE IGUAL . MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL tipodato LLAVER PUNTOCOMA

    CORCHETE_IZQ    shift and go to state 91
    LLAVEL          shift and go to state 92
    MENOR_QUE       shift and go to state 93


state 64

    (24) for -> FOR LPARENT declaradores . VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER
    (25) for -> FOR LPARENT declaradores . VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 94


state 65

    (52) declaradores -> INT .

    VARIABLE        reduce using rule 52 (declaradores -> INT .)


state 66

    (53) declaradores -> CONST .

    VARIABLE        reduce using rule 53 (declaradores -> CONST .)


state 67

    (54) declaradores -> VAR .

    VARIABLE        reduce using rule 54 (declaradores -> VAR .)


state 68

    (55) declaradores -> BOOL .

    VARIABLE        reduce using rule 55 (declaradores -> BOOL .)


state 69

    (56) declaradores -> FINAL .

    VARIABLE        reduce using rule 56 (declaradores -> FINAL .)


state 70

    (57) declaradores -> STRING .

    VARIABLE        reduce using rule 57 (declaradores -> STRING .)


state 71

    (26) if -> IF LPARENT VARIABLE . RPARENT LLAVEL LLAVER
    (29) if -> IF LPARENT VARIABLE . comparadores VARIABLE RPARENT LLAVEL LLAVER
    (46) comparadores -> . ES_IGUAL
    (47) comparadores -> . NO_IGUAL
    (48) comparadores -> . MENOR_QUE
    (49) comparadores -> . MAYOR_QUE
    (50) comparadores -> . MENOR_O_IGUAL
    (51) comparadores -> . MAYOR_O_IGUAL

    RPARENT         shift and go to state 95
    ES_IGUAL        shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MENOR_QUE       shift and go to state 35
    MAYOR_QUE       shift and go to state 36
    MENOR_O_IGUAL   shift and go to state 37
    MAYOR_O_IGUAL   shift and go to state 38

    comparadores                   shift and go to state 96

state 72

    (27) if -> IF LPARENT TRUE . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 97


state 73

    (28) if -> IF LPARENT FALSE . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 98


state 74

    (30) if -> IF LPARENT datonumerico . comparadores datonumerico RPARENT LLAVEL LLAVER
    (46) comparadores -> . ES_IGUAL
    (47) comparadores -> . NO_IGUAL
    (48) comparadores -> . MENOR_QUE
    (49) comparadores -> . MAYOR_QUE
    (50) comparadores -> . MENOR_O_IGUAL
    (51) comparadores -> . MAYOR_O_IGUAL

    ES_IGUAL        shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MENOR_QUE       shift and go to state 35
    MAYOR_QUE       shift and go to state 36
    MENOR_O_IGUAL   shift and go to state 37
    MAYOR_O_IGUAL   shift and go to state 38

    comparadores                   shift and go to state 99

state 75

    (32) write -> STDOUT PUNTO WRITE . LPARENT tipodato RPARENT PUNTOCOMA

    LPARENT         shift and go to state 100


state 76

    (31) if-else -> if ELSE LLAVEL LLAVER .

    $end            reduce using rule 31 (if-else -> if ELSE LLAVEL LLAVER .)


state 77

    (11) asignacion -> declaradores VARIABLE IGUAL tipodato . PUNTOCOMA

    PUNTOCOMA       shift and go to state 101


state 78

    (12) asignacion -> declaradores VARIABLE IGUAL negativo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 102


state 79

    (61) negativo -> RESTA . INTEGER
    (62) negativo -> RESTA . FLOAT

    INTEGER         shift and go to state 103
    FLOAT           shift and go to state 104


state 80

    (13) comparacion -> VARIABLE comparadores VARIABLE PUNTOCOMA .

    $end            reduce using rule 13 (comparacion -> VARIABLE comparadores VARIABLE PUNTOCOMA .)


state 81

    (14) operacion -> datonumerico operador datonumerico PUNTOCOMA .

    $end            reduce using rule 14 (operacion -> datonumerico operador datonumerico PUNTOCOMA .)


state 82

    (15) impresion -> PRINT LPARENT tipodato RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 105


state 83

    (17) funcion -> VOID VARIABLE LPARENT VARIABLE . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 106


state 84

    (16) funcion -> VOID VARIABLE LPARENT declaracionfunciones . VARIABLE RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 107


state 85

    (18) funcion -> VOID VARIABLE LPARENT RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 108


state 86

    (33) declaracionfunciones -> INT .

    VARIABLE        reduce using rule 33 (declaracionfunciones -> INT .)
    MAYOR_QUE       reduce using rule 33 (declaracionfunciones -> INT .)


state 87

    (34) declaracionfunciones -> DOUBLE .

    VARIABLE        reduce using rule 34 (declaracionfunciones -> DOUBLE .)
    MAYOR_QUE       reduce using rule 34 (declaracionfunciones -> DOUBLE .)


state 88

    (35) declaracionfunciones -> STRING .

    VARIABLE        reduce using rule 35 (declaracionfunciones -> STRING .)
    MAYOR_QUE       reduce using rule 35 (declaracionfunciones -> STRING .)


state 89

    (36) declaracionfunciones -> BOOL .

    VARIABLE        reduce using rule 36 (declaracionfunciones -> BOOL .)
    MAYOR_QUE       reduce using rule 36 (declaracionfunciones -> BOOL .)


state 90

    (19) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT . LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER
    (20) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT . LLAVEL RETURN tipodato PUNTOCOMA LLAVER

    LLAVEL          shift and go to state 109


state 91

    (21) estructuras -> declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ . tipodatoestructura CORCHETE_DER PUNTOCOMA
    (37) tipodatoestructura -> . INTEGER
    (38) tipodatoestructura -> . CADENA
    (39) tipodatoestructura -> . DOUBLE

    INTEGER         shift and go to state 111
    CADENA          shift and go to state 112
    DOUBLE          shift and go to state 113

    tipodatoestructura             shift and go to state 110

state 92

    (22) estructuras -> declaradoresestruras VARIABLE IGUAL LLAVEL . tipodato DOSPUNTOS tipodato LLAVER PUNTOCOMA
    (63) tipodato -> . INTEGER
    (64) tipodato -> . CADENA
    (65) tipodato -> . FLOAT
    (66) tipodato -> . VARIABLE

    INTEGER         shift and go to state 57
    CADENA          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 60

    tipodato                       shift and go to state 114

state 93

    (23) estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE . declaracionfunciones MAYOR_QUE LLAVEL tipodato LLAVER PUNTOCOMA
    (33) declaracionfunciones -> . INT
    (34) declaracionfunciones -> . DOUBLE
    (35) declaracionfunciones -> . STRING
    (36) declaracionfunciones -> . BOOL

    INT             shift and go to state 86
    DOUBLE          shift and go to state 87
    STRING          shift and go to state 88
    BOOL            shift and go to state 89

    declaracionfunciones           shift and go to state 115

state 94

    (24) for -> FOR LPARENT declaradores VARIABLE . IN VARIABLE RPARENT LLAVEL LLAVER
    (25) for -> FOR LPARENT declaradores VARIABLE . IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    IN              shift and go to state 116
    IGUAL           shift and go to state 117


state 95

    (26) if -> IF LPARENT VARIABLE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 118


state 96

    (29) if -> IF LPARENT VARIABLE comparadores . VARIABLE RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 119


state 97

    (27) if -> IF LPARENT TRUE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 120


state 98

    (28) if -> IF LPARENT FALSE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 121


state 99

    (30) if -> IF LPARENT datonumerico comparadores . datonumerico RPARENT LLAVEL LLAVER
    (40) datonumerico -> . INTEGER
    (41) datonumerico -> . DOUBLE

    INTEGER         shift and go to state 20
    DOUBLE          shift and go to state 55

    datonumerico                   shift and go to state 122

state 100

    (32) write -> STDOUT PUNTO WRITE LPARENT . tipodato RPARENT PUNTOCOMA
    (63) tipodato -> . INTEGER
    (64) tipodato -> . CADENA
    (65) tipodato -> . FLOAT
    (66) tipodato -> . VARIABLE

    INTEGER         shift and go to state 57
    CADENA          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 60

    tipodato                       shift and go to state 123

state 101

    (11) asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA .

    $end            reduce using rule 11 (asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA .)


state 102

    (12) asignacion -> declaradores VARIABLE IGUAL negativo PUNTOCOMA .

    $end            reduce using rule 12 (asignacion -> declaradores VARIABLE IGUAL negativo PUNTOCOMA .)


state 103

    (61) negativo -> RESTA INTEGER .

    PUNTOCOMA       reduce using rule 61 (negativo -> RESTA INTEGER .)


state 104

    (62) negativo -> RESTA FLOAT .

    PUNTOCOMA       reduce using rule 62 (negativo -> RESTA FLOAT .)


state 105

    (15) impresion -> PRINT LPARENT tipodato RPARENT PUNTOCOMA .

    $end            reduce using rule 15 (impresion -> PRINT LPARENT tipodato RPARENT PUNTOCOMA .)


state 106

    (17) funcion -> VOID VARIABLE LPARENT VARIABLE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 124


state 107

    (16) funcion -> VOID VARIABLE LPARENT declaracionfunciones VARIABLE . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 125


state 108

    (18) funcion -> VOID VARIABLE LPARENT RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 126


state 109

    (19) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL . RETURN VARIABLE PUNTOCOMA LLAVER
    (20) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL . RETURN tipodato PUNTOCOMA LLAVER

    RETURN          shift and go to state 127


state 110

    (21) estructuras -> declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ tipodatoestructura . CORCHETE_DER PUNTOCOMA

    CORCHETE_DER    shift and go to state 128


state 111

    (37) tipodatoestructura -> INTEGER .

    CORCHETE_DER    reduce using rule 37 (tipodatoestructura -> INTEGER .)


state 112

    (38) tipodatoestructura -> CADENA .

    CORCHETE_DER    reduce using rule 38 (tipodatoestructura -> CADENA .)


state 113

    (39) tipodatoestructura -> DOUBLE .

    CORCHETE_DER    reduce using rule 39 (tipodatoestructura -> DOUBLE .)


state 114

    (22) estructuras -> declaradoresestruras VARIABLE IGUAL LLAVEL tipodato . DOSPUNTOS tipodato LLAVER PUNTOCOMA

    DOSPUNTOS       shift and go to state 129


state 115

    (23) estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones . MAYOR_QUE LLAVEL tipodato LLAVER PUNTOCOMA

    MAYOR_QUE       shift and go to state 130


state 116

    (24) for -> FOR LPARENT declaradores VARIABLE IN . VARIABLE RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 131


state 117

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL . INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    INTEGER         shift and go to state 132


state 118

    (26) if -> IF LPARENT VARIABLE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 133


state 119

    (29) if -> IF LPARENT VARIABLE comparadores VARIABLE . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 134


state 120

    (27) if -> IF LPARENT TRUE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 135


state 121

    (28) if -> IF LPARENT FALSE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 136


state 122

    (30) if -> IF LPARENT datonumerico comparadores datonumerico . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 137


state 123

    (32) write -> STDOUT PUNTO WRITE LPARENT tipodato . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 138


state 124

    (17) funcion -> VOID VARIABLE LPARENT VARIABLE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 139


state 125

    (16) funcion -> VOID VARIABLE LPARENT declaracionfunciones VARIABLE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 140


state 126

    (18) funcion -> VOID VARIABLE LPARENT RPARENT LLAVEL LLAVER .

    $end            reduce using rule 18 (funcion -> VOID VARIABLE LPARENT RPARENT LLAVEL LLAVER .)


state 127

    (19) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN . VARIABLE PUNTOCOMA LLAVER
    (20) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN . tipodato PUNTOCOMA LLAVER
    (63) tipodato -> . INTEGER
    (64) tipodato -> . CADENA
    (65) tipodato -> . FLOAT
    (66) tipodato -> . VARIABLE

    VARIABLE        shift and go to state 141
    INTEGER         shift and go to state 57
    CADENA          shift and go to state 58
    FLOAT           shift and go to state 59

    tipodato                       shift and go to state 142

state 128

    (21) estructuras -> declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ tipodatoestructura CORCHETE_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 143


state 129

    (22) estructuras -> declaradoresestruras VARIABLE IGUAL LLAVEL tipodato DOSPUNTOS . tipodato LLAVER PUNTOCOMA
    (63) tipodato -> . INTEGER
    (64) tipodato -> . CADENA
    (65) tipodato -> . FLOAT
    (66) tipodato -> . VARIABLE

    INTEGER         shift and go to state 57
    CADENA          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 60

    tipodato                       shift and go to state 144

state 130

    (23) estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE . LLAVEL tipodato LLAVER PUNTOCOMA

    LLAVEL          shift and go to state 145


state 131

    (24) for -> FOR LPARENT declaradores VARIABLE IN VARIABLE . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 146


state 132

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER . PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    PUNTOCOMA       shift and go to state 147


state 133

    (26) if -> IF LPARENT VARIABLE RPARENT LLAVEL LLAVER .

    ELSE            reduce using rule 26 (if -> IF LPARENT VARIABLE RPARENT LLAVEL LLAVER .)
    $end            reduce using rule 26 (if -> IF LPARENT VARIABLE RPARENT LLAVEL LLAVER .)


state 134

    (29) if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 148


state 135

    (27) if -> IF LPARENT TRUE RPARENT LLAVEL LLAVER .

    ELSE            reduce using rule 27 (if -> IF LPARENT TRUE RPARENT LLAVEL LLAVER .)
    $end            reduce using rule 27 (if -> IF LPARENT TRUE RPARENT LLAVEL LLAVER .)


state 136

    (28) if -> IF LPARENT FALSE RPARENT LLAVEL LLAVER .

    ELSE            reduce using rule 28 (if -> IF LPARENT FALSE RPARENT LLAVEL LLAVER .)
    $end            reduce using rule 28 (if -> IF LPARENT FALSE RPARENT LLAVEL LLAVER .)


state 137

    (30) if -> IF LPARENT datonumerico comparadores datonumerico RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 149


state 138

    (32) write -> STDOUT PUNTO WRITE LPARENT tipodato RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 150


state 139

    (17) funcion -> VOID VARIABLE LPARENT VARIABLE RPARENT LLAVEL LLAVER .

    $end            reduce using rule 17 (funcion -> VOID VARIABLE LPARENT VARIABLE RPARENT LLAVEL LLAVER .)


state 140

    (16) funcion -> VOID VARIABLE LPARENT declaracionfunciones VARIABLE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 151


state 141

    (19) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN VARIABLE . PUNTOCOMA LLAVER
    (66) tipodato -> VARIABLE .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
    PUNTOCOMA       shift and go to state 152

  ! PUNTOCOMA       [ reduce using rule 66 (tipodato -> VARIABLE .) ]


state 142

    (20) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN tipodato . PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 153


state 143

    (21) estructuras -> declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ tipodatoestructura CORCHETE_DER PUNTOCOMA .

    $end            reduce using rule 21 (estructuras -> declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ tipodatoestructura CORCHETE_DER PUNTOCOMA .)


state 144

    (22) estructuras -> declaradoresestruras VARIABLE IGUAL LLAVEL tipodato DOSPUNTOS tipodato . LLAVER PUNTOCOMA

    LLAVER          shift and go to state 154


state 145

    (23) estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL . tipodato LLAVER PUNTOCOMA
    (63) tipodato -> . INTEGER
    (64) tipodato -> . CADENA
    (65) tipodato -> . FLOAT
    (66) tipodato -> . VARIABLE

    INTEGER         shift and go to state 57
    CADENA          shift and go to state 58
    FLOAT           shift and go to state 59
    VARIABLE        shift and go to state 60

    tipodato                       shift and go to state 155

state 146

    (24) for -> FOR LPARENT declaradores VARIABLE IN VARIABLE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 156


state 147

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA . VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 157


state 148

    (29) if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 158


state 149

    (30) if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 159


state 150

    (32) write -> STDOUT PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA .

    $end            reduce using rule 32 (write -> STDOUT PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA .)


state 151

    (16) funcion -> VOID VARIABLE LPARENT declaracionfunciones VARIABLE RPARENT LLAVEL LLAVER .

    $end            reduce using rule 16 (funcion -> VOID VARIABLE LPARENT declaracionfunciones VARIABLE RPARENT LLAVEL LLAVER .)


state 152

    (19) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 160


state 153

    (20) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN tipodato PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 161


state 154

    (22) estructuras -> declaradoresestruras VARIABLE IGUAL LLAVEL tipodato DOSPUNTOS tipodato LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 162


state 155

    (23) estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL tipodato . LLAVER PUNTOCOMA

    LLAVER          shift and go to state 163


state 156

    (24) for -> FOR LPARENT declaradores VARIABLE IN VARIABLE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 164


state 157

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE . comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER
    (46) comparadores -> . ES_IGUAL
    (47) comparadores -> . NO_IGUAL
    (48) comparadores -> . MENOR_QUE
    (49) comparadores -> . MAYOR_QUE
    (50) comparadores -> . MENOR_O_IGUAL
    (51) comparadores -> . MAYOR_O_IGUAL

    ES_IGUAL        shift and go to state 33
    NO_IGUAL        shift and go to state 34
    MENOR_QUE       shift and go to state 35
    MAYOR_QUE       shift and go to state 36
    MENOR_O_IGUAL   shift and go to state 37
    MAYOR_O_IGUAL   shift and go to state 38

    comparadores                   shift and go to state 165

state 158

    (29) if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER .

    ELSE            reduce using rule 29 (if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER .)
    $end            reduce using rule 29 (if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER .)


state 159

    (30) if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER .

    ELSE            reduce using rule 30 (if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER .)
    $end            reduce using rule 30 (if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER .)


state 160

    (19) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER .

    $end            reduce using rule 19 (funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER .)


state 161

    (20) funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN tipodato PUNTOCOMA LLAVER .

    $end            reduce using rule 20 (funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN tipodato PUNTOCOMA LLAVER .)


state 162

    (22) estructuras -> declaradoresestruras VARIABLE IGUAL LLAVEL tipodato DOSPUNTOS tipodato LLAVER PUNTOCOMA .

    $end            reduce using rule 22 (estructuras -> declaradoresestruras VARIABLE IGUAL LLAVEL tipodato DOSPUNTOS tipodato LLAVER PUNTOCOMA .)


state 163

    (23) estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL tipodato LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 166


state 164

    (24) for -> FOR LPARENT declaradores VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER .

    $end            reduce using rule 24 (for -> FOR LPARENT declaradores VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER .)


state 165

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores . INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    INTEGER         shift and go to state 167


state 166

    (23) estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL tipodato LLAVER PUNTOCOMA .

    $end            reduce using rule 23 (estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL tipodato LLAVER PUNTOCOMA .)


state 167

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER . PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    PUNTOCOMA       shift and go to state 168


state 168

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA . VARIABLE operador operador RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 169


state 169

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE . operador operador RPARENT LLAVEL LLAVER
    (42) operador -> . MAS
    (43) operador -> . RESTA
    (44) operador -> . MULTIPL
    (45) operador -> . DIVISION

    MAS             shift and go to state 40
    RESTA           shift and go to state 41
    MULTIPL         shift and go to state 42
    DIVISION        shift and go to state 43

    operador                       shift and go to state 170

state 170

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador . operador RPARENT LLAVEL LLAVER
    (42) operador -> . MAS
    (43) operador -> . RESTA
    (44) operador -> . MULTIPL
    (45) operador -> . DIVISION

    MAS             shift and go to state 40
    RESTA           shift and go to state 41
    MULTIPL         shift and go to state 42
    DIVISION        shift and go to state 43

    operador                       shift and go to state 171

state 171

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 172


state 172

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 173


state 173

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 174


state 174

    (25) for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER .

    $end            reduce using rule 25 (for -> FOR LPARENT declaradores VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUNTOCOMA in state 141 resolved as shift
WARNING: reduce/reduce conflict in state 23 resolved using rule (declaracionfunciones -> INT)
WARNING: rejected rule (declaradores -> INT) in state 23
WARNING: reduce/reduce conflict in state 24 resolved using rule (declaradores -> CONST)
WARNING: rejected rule (declaradoresestruras -> CONST) in state 24
WARNING: reduce/reduce conflict in state 25 resolved using rule (declaradores -> VAR)
WARNING: rejected rule (declaradoresestruras -> VAR) in state 25
WARNING: reduce/reduce conflict in state 26 resolved using rule (declaracionfunciones -> BOOL)
WARNING: rejected rule (declaradores -> BOOL) in state 26
WARNING: reduce/reduce conflict in state 27 resolved using rule (declaradores -> FINAL)
WARNING: rejected rule (declaradoresestruras -> FINAL) in state 27
WARNING: reduce/reduce conflict in state 28 resolved using rule (declaracionfunciones -> STRING)
WARNING: rejected rule (declaradores -> STRING) in state 28
WARNING: Rule (declaradoresestruras -> CONST) is never reduced
WARNING: Rule (declaradoresestruras -> VAR) is never reduced
WARNING: Rule (declaradoresestruras -> FINAL) is never reduced
