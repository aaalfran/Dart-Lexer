Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CADENA
    COMA
    CORCHETE_DER
    CORCHETE_IZQ
    ELSE
    ES_IGUAL
    FALSE
    FOR
    FUNCION
    IF
    IN
    INCREMENTADOR
    LIST
    LLAVEL
    LLAVER
    MAIN
    MAYOR_O_IGUAL
    MAYOR_QUE
    MENOR_O_IGUAL
    MENOR_QUE
    NEGACION
    NO_IGUAL
    OR
    PARSE
    PUNTO
    READLINESYNC
    RETURN
    SALTO_LINEA
    STDIN
    TABULACION
    TODOUBLE
    TOINT
    TOSTRING
    TRUE
    VOID
    WRITE

Grammar

Rule 0     S' -> asignacion
Rule 1     asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA
Rule 2     operacion -> datonumerico operador datonumerico PUNTOCOMA
Rule 3     salida -> PRINT LPARENT tipodato RPARENT PUNTOCOMA
Rule 4     funcion -> VARIABLE LPARENT argumentos RPARENT PUNTOCOMA
Rule 5     argumentos -> VARIABLE
Rule 6     argumentos -> tipodato argumentos
Rule 7     tipodato -> INTEGER
Rule 8     tipodato -> STRING
Rule 9     tipodato -> DOUBLE
Rule 10    tipodato -> VARIABLE
Rule 11    declaradores -> INT
Rule 12    declaradores -> CONST
Rule 13    declaradores -> VAR
Rule 14    declaradores -> BOOL
Rule 15    declaradores -> FINAL
Rule 16    operador -> MAS
Rule 17    operador -> RESTA
Rule 18    operador -> MULTIPL
Rule 19    operador -> DIVISION
Rule 20    datonumerico -> INTEGER
Rule 21    datonumerico -> DOUBLE

Terminals, with rules where they appear

AND                  : 
BOOL                 : 14
CADENA               : 
COMA                 : 
CONST                : 12
CORCHETE_DER         : 
CORCHETE_IZQ         : 
DIVISION             : 19
DOUBLE               : 9 21
ELSE                 : 
ES_IGUAL             : 
FALSE                : 
FINAL                : 15
FOR                  : 
FUNCION              : 
IF                   : 
IGUAL                : 1
IN                   : 
INCREMENTADOR        : 
INT                  : 11
INTEGER              : 7 20
LIST                 : 
LLAVEL               : 
LLAVER               : 
LPARENT              : 3 4
MAIN                 : 
MAS                  : 16
MAYOR_O_IGUAL        : 
MAYOR_QUE            : 
MENOR_O_IGUAL        : 
MENOR_QUE            : 
MULTIPL              : 18
NEGACION             : 
NO_IGUAL             : 
OR                   : 
PARSE                : 
PRINT                : 3
PUNTO                : 
PUNTOCOMA            : 1 2 3 4
READLINESYNC         : 
RESTA                : 17
RETURN               : 
RPARENT              : 3 4
SALTO_LINEA          : 
STDIN                : 
STRING               : 8
TABULACION           : 
TODOUBLE             : 
TOINT                : 
TOSTRING             : 
TRUE                 : 
VAR                  : 13
VARIABLE             : 1 4 5 10
VOID                 : 
WRITE                : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 4 6
asignacion           : 0
datonumerico         : 2 2
declaradores         : 1
funcion              : 
operacion            : 
operador             : 2
salida               : 
tipodato             : 1 3 6

Parsing method: LALR

state 0

    (0) S' -> . asignacion
    (1) asignacion -> . declaradores VARIABLE IGUAL tipodato PUNTOCOMA
    (11) declaradores -> . INT
    (12) declaradores -> . CONST
    (13) declaradores -> . VAR
    (14) declaradores -> . BOOL
    (15) declaradores -> . FINAL

    INT             shift and go to state 3
    CONST           shift and go to state 4
    VAR             shift and go to state 5
    BOOL            shift and go to state 6
    FINAL           shift and go to state 7

    asignacion                     shift and go to state 1
    declaradores                   shift and go to state 2

state 1

    (0) S' -> asignacion .



state 2

    (1) asignacion -> declaradores . VARIABLE IGUAL tipodato PUNTOCOMA

    VARIABLE        shift and go to state 8


state 3

    (11) declaradores -> INT .

    VARIABLE        reduce using rule 11 (declaradores -> INT .)


state 4

    (12) declaradores -> CONST .

    VARIABLE        reduce using rule 12 (declaradores -> CONST .)


state 5

    (13) declaradores -> VAR .

    VARIABLE        reduce using rule 13 (declaradores -> VAR .)


state 6

    (14) declaradores -> BOOL .

    VARIABLE        reduce using rule 14 (declaradores -> BOOL .)


state 7

    (15) declaradores -> FINAL .

    VARIABLE        reduce using rule 15 (declaradores -> FINAL .)


state 8

    (1) asignacion -> declaradores VARIABLE . IGUAL tipodato PUNTOCOMA

    IGUAL           shift and go to state 9


state 9

    (1) asignacion -> declaradores VARIABLE IGUAL . tipodato PUNTOCOMA
    (7) tipodato -> . INTEGER
    (8) tipodato -> . STRING
    (9) tipodato -> . DOUBLE
    (10) tipodato -> . VARIABLE

    INTEGER         shift and go to state 12
    STRING          shift and go to state 13
    DOUBLE          shift and go to state 14
    VARIABLE        shift and go to state 10

    tipodato                       shift and go to state 11

state 10

    (10) tipodato -> VARIABLE .

    PUNTOCOMA       reduce using rule 10 (tipodato -> VARIABLE .)


state 11

    (1) asignacion -> declaradores VARIABLE IGUAL tipodato . PUNTOCOMA

    PUNTOCOMA       shift and go to state 15


state 12

    (7) tipodato -> INTEGER .

    PUNTOCOMA       reduce using rule 7 (tipodato -> INTEGER .)


state 13

    (8) tipodato -> STRING .

    PUNTOCOMA       reduce using rule 8 (tipodato -> STRING .)


state 14

    (9) tipodato -> DOUBLE .

    PUNTOCOMA       reduce using rule 9 (tipodato -> DOUBLE .)


state 15

    (1) asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA .

    $end            reduce using rule 1 (asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA .)

