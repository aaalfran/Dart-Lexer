Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    FUNCION
    INCREMENTADOR
    LIST
    MAIN
    NEGACION
    OR
    PARSE
    READLINESYNC
    SALTO_LINEA
    STDIN
    TABULACION
    TODOUBLE
    TOINT
    TOSTRING

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> asignacion
Rule 2     sentencias -> comparacion
Rule 3     sentencias -> operacion
Rule 4     sentencias -> impresion
Rule 5     sentencias -> for
Rule 6     sentencias -> if
Rule 7     sentencias -> if-else
Rule 8     sentencias -> write
Rule 9     sentencias2 -> funcion
Rule 10    sentencias2 -> estructuras
Rule 11    sentenciasVarias -> sentencias2
Rule 12    sentenciasVarias -> sentencias2 sentenciasVarias
Rule 13    asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA
Rule 14    asignacion -> declaradores VARIABLE IGUAL negativo PUNTOCOMA
Rule 15    asignacion -> BOOL VARIABLE IGUAL valoresverdad PUNTOCOMA
Rule 16    declaradores -> INT
Rule 17    declaradores -> CONST
Rule 18    declaradores -> VAR
Rule 19    declaradores -> BOOL
Rule 20    declaradores -> FINAL
Rule 21    declaradores -> STRING
Rule 22    tipodato -> INTEGER
Rule 23    tipodato -> CADENA
Rule 24    tipodato -> FLOAT
Rule 25    tipodato -> VARIABLE
Rule 26    tipodato -> valoresverdad
Rule 27    tipodato -> negativo
Rule 28    negativo -> RESTA INTEGER
Rule 29    negativo -> RESTA FLOAT
Rule 30    valoresverdad -> TRUE
Rule 31    valoresverdad -> FALSE
Rule 32    comparacion -> VARIABLE comparadores VARIABLE PUNTOCOMA
Rule 33    comparadores -> ES_IGUAL
Rule 34    comparadores -> NO_IGUAL
Rule 35    comparadores -> MENOR_QUE
Rule 36    comparadores -> MAYOR_QUE
Rule 37    comparadores -> MENOR_O_IGUAL
Rule 38    comparadores -> MAYOR_O_IGUAL
Rule 39    operacion -> datonumerico operador datonumerico PUNTOCOMA
Rule 40    datonumerico -> INTEGER
Rule 41    datonumerico -> FLOAT
Rule 42    datonumerico -> negativo
Rule 43    operador -> MAS
Rule 44    operador -> RESTA
Rule 45    operador -> MULTIPL
Rule 46    operador -> DIVISION
Rule 47    impresion -> PRINT LPARENT tipodato RPARENT PUNTOCOMA
Rule 48    funcion -> VOID VARIABLE LPARENT declaracionfunciones VARIABLE RPARENT LLAVEL LLAVER
Rule 49    funcion -> VOID VARIABLE LPARENT VARIABLE RPARENT LLAVEL LLAVER
Rule 50    funcion -> VOID VARIABLE LPARENT RPARENT LLAVEL LLAVER
Rule 51    funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN VARIABLE PUNTOCOMA LLAVER
Rule 52    funcion -> declaracionfunciones VARIABLE LPARENT RPARENT LLAVEL RETURN tipodato PUNTOCOMA LLAVER
Rule 53    declaracionfunciones -> INT
Rule 54    declaracionfunciones -> DOUBLE
Rule 55    declaracionfunciones -> STRING
Rule 56    declaracionfunciones -> BOOL
Rule 57    estructuras -> declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ elementos CORCHETE_DER PUNTOCOMA
Rule 58    estructuras -> declaradoresestruras VARIABLE IGUAL CORCHETE_IZQ CORCHETE_DER PUNTOCOMA
Rule 59    estructuras -> declaradoresestruras VARIABLE IGUAL LLAVEL elementosdiccionario LLAVER PUNTOCOMA
Rule 60    estructuras -> declaradoresestruras VARIABLE IGUAL MENOR_QUE declaracionfunciones MAYOR_QUE LLAVEL elementos LLAVER PUNTOCOMA
Rule 61    declaradoresestruras -> CONST
Rule 62    declaradoresestruras -> VAR
Rule 63    declaradoresestruras -> FINAL
Rule 64    elementos -> tipodatoestructura
Rule 65    elementos -> tipodatoestructura COMA elementos
Rule 66    tipodatoestructura -> INTEGER
Rule 67    tipodatoestructura -> CADENA
Rule 68    tipodatoestructura -> DOUBLE
Rule 69    elementosdiccionario -> tipodatoestructura DOSPUNTOS tipodatoestructura
Rule 70    elementosdiccionario -> tipodatoestructura DOSPUNTOS tipodatoestructura COMA elementosdiccionario
Rule 71    for -> FOR LPARENT declaracionesfor VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER
Rule 72    for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER
Rule 73    declaracionesfor -> VAR
Rule 74    declaracionesfor -> INT
Rule 75    declaracionesfor -> VARIABLE
Rule 76    if -> IF LPARENT VARIABLE RPARENT LLAVEL LLAVER
Rule 77    if -> IF LPARENT TRUE RPARENT LLAVEL LLAVER
Rule 78    if -> IF LPARENT FALSE RPARENT LLAVEL LLAVER
Rule 79    if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER
Rule 80    if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER
Rule 81    if-else -> if ELSE LLAVEL LLAVER
Rule 82    write -> STDOUT PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA

Terminals, with rules where they appear

AND                  : 
BOOL                 : 15 19 56
CADENA               : 23 67
COMA                 : 65 70
CONST                : 17 61
CORCHETE_DER         : 57 58
CORCHETE_IZQ         : 57 58
DIVISION             : 46
DOSPUNTOS            : 69 70
DOUBLE               : 54 68
ELSE                 : 81
ES_IGUAL             : 33
FALSE                : 31 78
FINAL                : 20 63
FLOAT                : 24 29 41
FOR                  : 71 72
FUNCION              : 
IF                   : 76 77 78 79 80
IGUAL                : 13 14 15 57 58 59 60 72
IN                   : 71
INCREMENTADOR        : 
INT                  : 16 53 74
INTEGER              : 22 28 40 66 72 72
LIST                 : 
LLAVEL               : 48 49 50 51 52 59 60 71 72 76 77 78 79 80 81
LLAVER               : 48 49 50 51 52 59 60 71 72 76 77 78 79 80 81
LPARENT              : 47 48 49 50 51 52 71 72 76 77 78 79 80 82
MAIN                 : 
MAS                  : 43
MAYOR_O_IGUAL        : 38
MAYOR_QUE            : 36 60
MENOR_O_IGUAL        : 37
MENOR_QUE            : 35 60
MULTIPL              : 45
NEGACION             : 
NO_IGUAL             : 34
OR                   : 
PARSE                : 
PRINT                : 47
PUNTO                : 82
PUNTOCOMA            : 13 14 15 32 39 47 51 52 57 58 59 60 72 72 82
READLINESYNC         : 
RESTA                : 28 29 44
RETURN               : 51 52
RPARENT              : 47 48 49 50 51 52 71 72 76 77 78 79 80 82
SALTO_LINEA          : 
STDIN                : 
STDOUT               : 82
STRING               : 21 55
TABULACION           : 
TODOUBLE             : 
TOINT                : 
TOSTRING             : 
TRUE                 : 30 77
VAR                  : 18 62 73
VARIABLE             : 13 14 15 25 32 32 48 48 49 49 50 51 51 52 57 58 59 60 71 71 72 72 72 75 76 79 79
VOID                 : 48 49 50
WRITE                : 82
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
comparacion          : 2
comparadores         : 32 72 79 80
datonumerico         : 39 39 80 80
declaracionesfor     : 71 72
declaracionfunciones : 48 51 52 60
declaradores         : 13 14
declaradoresestruras : 57 58 59 60
elementos            : 57 60 65
elementosdiccionario : 59 70
estructuras          : 10
for                  : 5
funcion              : 9
if                   : 6 81
if-else              : 7
impresion            : 4
negativo             : 14 27 42
operacion            : 3
operador             : 39 72 72
sentencias           : 0
sentencias2          : 11 12
sentenciasVarias     : 12
tipodato             : 13 47 52 82
tipodatoestructura   : 64 65 69 69 70 70
valoresverdad        : 15 26
write                : 8

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . asignacion
    (2) sentencias -> . comparacion
    (3) sentencias -> . operacion
    (4) sentencias -> . impresion
    (5) sentencias -> . for
    (6) sentencias -> . if
    (7) sentencias -> . if-else
    (8) sentencias -> . write
    (13) asignacion -> . declaradores VARIABLE IGUAL tipodato PUNTOCOMA
    (14) asignacion -> . declaradores VARIABLE IGUAL negativo PUNTOCOMA
    (15) asignacion -> . BOOL VARIABLE IGUAL valoresverdad PUNTOCOMA
    (32) comparacion -> . VARIABLE comparadores VARIABLE PUNTOCOMA
    (39) operacion -> . datonumerico operador datonumerico PUNTOCOMA
    (47) impresion -> . PRINT LPARENT tipodato RPARENT PUNTOCOMA
    (71) for -> . FOR LPARENT declaracionesfor VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER
    (72) for -> . FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER
    (76) if -> . IF LPARENT VARIABLE RPARENT LLAVEL LLAVER
    (77) if -> . IF LPARENT TRUE RPARENT LLAVEL LLAVER
    (78) if -> . IF LPARENT FALSE RPARENT LLAVEL LLAVER
    (79) if -> . IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER
    (80) if -> . IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER
    (81) if-else -> . if ELSE LLAVEL LLAVER
    (82) write -> . STDOUT PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA
    (16) declaradores -> . INT
    (17) declaradores -> . CONST
    (18) declaradores -> . VAR
    (19) declaradores -> . BOOL
    (20) declaradores -> . FINAL
    (21) declaradores -> . STRING
    (40) datonumerico -> . INTEGER
    (41) datonumerico -> . FLOAT
    (42) datonumerico -> . negativo
    (28) negativo -> . RESTA INTEGER
    (29) negativo -> . RESTA FLOAT

    BOOL            shift and go to state 13
    VARIABLE        shift and go to state 11
    PRINT           shift and go to state 15
    FOR             shift and go to state 16
    IF              shift and go to state 18
    STDOUT          shift and go to state 19
    INT             shift and go to state 20
    CONST           shift and go to state 21
    VAR             shift and go to state 22
    FINAL           shift and go to state 23
    STRING          shift and go to state 24
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 25
    RESTA           shift and go to state 26

    sentencias                     shift and go to state 1
    asignacion                     shift and go to state 2
    comparacion                    shift and go to state 3
    operacion                      shift and go to state 4
    impresion                      shift and go to state 5
    for                            shift and go to state 6
    if                             shift and go to state 7
    if-else                        shift and go to state 8
    write                          shift and go to state 9
    declaradores                   shift and go to state 10
    negativo                       shift and go to state 12
    datonumerico                   shift and go to state 14

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> asignacion .

    $end            reduce using rule 1 (sentencias -> asignacion .)


state 3

    (2) sentencias -> comparacion .

    $end            reduce using rule 2 (sentencias -> comparacion .)


state 4

    (3) sentencias -> operacion .

    $end            reduce using rule 3 (sentencias -> operacion .)


state 5

    (4) sentencias -> impresion .

    $end            reduce using rule 4 (sentencias -> impresion .)


state 6

    (5) sentencias -> for .

    $end            reduce using rule 5 (sentencias -> for .)


state 7

    (6) sentencias -> if .
    (81) if-else -> if . ELSE LLAVEL LLAVER

    $end            reduce using rule 6 (sentencias -> if .)
    ELSE            shift and go to state 27


state 8

    (7) sentencias -> if-else .

    $end            reduce using rule 7 (sentencias -> if-else .)


state 9

    (8) sentencias -> write .

    $end            reduce using rule 8 (sentencias -> write .)


state 10

    (13) asignacion -> declaradores . VARIABLE IGUAL tipodato PUNTOCOMA
    (14) asignacion -> declaradores . VARIABLE IGUAL negativo PUNTOCOMA

    VARIABLE        shift and go to state 28


state 11

    (32) comparacion -> VARIABLE . comparadores VARIABLE PUNTOCOMA
    (33) comparadores -> . ES_IGUAL
    (34) comparadores -> . NO_IGUAL
    (35) comparadores -> . MENOR_QUE
    (36) comparadores -> . MAYOR_QUE
    (37) comparadores -> . MENOR_O_IGUAL
    (38) comparadores -> . MAYOR_O_IGUAL

    ES_IGUAL        shift and go to state 30
    NO_IGUAL        shift and go to state 31
    MENOR_QUE       shift and go to state 32
    MAYOR_QUE       shift and go to state 33
    MENOR_O_IGUAL   shift and go to state 34
    MAYOR_O_IGUAL   shift and go to state 35

    comparadores                   shift and go to state 29

state 12

    (42) datonumerico -> negativo .

    MAS             reduce using rule 42 (datonumerico -> negativo .)
    RESTA           reduce using rule 42 (datonumerico -> negativo .)
    MULTIPL         reduce using rule 42 (datonumerico -> negativo .)
    DIVISION        reduce using rule 42 (datonumerico -> negativo .)
    PUNTOCOMA       reduce using rule 42 (datonumerico -> negativo .)
    ES_IGUAL        reduce using rule 42 (datonumerico -> negativo .)
    NO_IGUAL        reduce using rule 42 (datonumerico -> negativo .)
    MENOR_QUE       reduce using rule 42 (datonumerico -> negativo .)
    MAYOR_QUE       reduce using rule 42 (datonumerico -> negativo .)
    MENOR_O_IGUAL   reduce using rule 42 (datonumerico -> negativo .)
    MAYOR_O_IGUAL   reduce using rule 42 (datonumerico -> negativo .)
    RPARENT         reduce using rule 42 (datonumerico -> negativo .)


state 13

    (15) asignacion -> BOOL . VARIABLE IGUAL valoresverdad PUNTOCOMA
    (19) declaradores -> BOOL .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 36

  ! VARIABLE        [ reduce using rule 19 (declaradores -> BOOL .) ]


state 14

    (39) operacion -> datonumerico . operador datonumerico PUNTOCOMA
    (43) operador -> . MAS
    (44) operador -> . RESTA
    (45) operador -> . MULTIPL
    (46) operador -> . DIVISION

    MAS             shift and go to state 38
    RESTA           shift and go to state 39
    MULTIPL         shift and go to state 40
    DIVISION        shift and go to state 41

    operador                       shift and go to state 37

state 15

    (47) impresion -> PRINT . LPARENT tipodato RPARENT PUNTOCOMA

    LPARENT         shift and go to state 42


state 16

    (71) for -> FOR . LPARENT declaracionesfor VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER
    (72) for -> FOR . LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    LPARENT         shift and go to state 43


state 17

    (40) datonumerico -> INTEGER .

    MAS             reduce using rule 40 (datonumerico -> INTEGER .)
    RESTA           reduce using rule 40 (datonumerico -> INTEGER .)
    MULTIPL         reduce using rule 40 (datonumerico -> INTEGER .)
    DIVISION        reduce using rule 40 (datonumerico -> INTEGER .)
    PUNTOCOMA       reduce using rule 40 (datonumerico -> INTEGER .)
    ES_IGUAL        reduce using rule 40 (datonumerico -> INTEGER .)
    NO_IGUAL        reduce using rule 40 (datonumerico -> INTEGER .)
    MENOR_QUE       reduce using rule 40 (datonumerico -> INTEGER .)
    MAYOR_QUE       reduce using rule 40 (datonumerico -> INTEGER .)
    MENOR_O_IGUAL   reduce using rule 40 (datonumerico -> INTEGER .)
    MAYOR_O_IGUAL   reduce using rule 40 (datonumerico -> INTEGER .)
    RPARENT         reduce using rule 40 (datonumerico -> INTEGER .)


state 18

    (76) if -> IF . LPARENT VARIABLE RPARENT LLAVEL LLAVER
    (77) if -> IF . LPARENT TRUE RPARENT LLAVEL LLAVER
    (78) if -> IF . LPARENT FALSE RPARENT LLAVEL LLAVER
    (79) if -> IF . LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER
    (80) if -> IF . LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER

    LPARENT         shift and go to state 44


state 19

    (82) write -> STDOUT . PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA

    PUNTO           shift and go to state 45


state 20

    (16) declaradores -> INT .

    VARIABLE        reduce using rule 16 (declaradores -> INT .)


state 21

    (17) declaradores -> CONST .

    VARIABLE        reduce using rule 17 (declaradores -> CONST .)


state 22

    (18) declaradores -> VAR .

    VARIABLE        reduce using rule 18 (declaradores -> VAR .)


state 23

    (20) declaradores -> FINAL .

    VARIABLE        reduce using rule 20 (declaradores -> FINAL .)


state 24

    (21) declaradores -> STRING .

    VARIABLE        reduce using rule 21 (declaradores -> STRING .)


state 25

    (41) datonumerico -> FLOAT .

    MAS             reduce using rule 41 (datonumerico -> FLOAT .)
    RESTA           reduce using rule 41 (datonumerico -> FLOAT .)
    MULTIPL         reduce using rule 41 (datonumerico -> FLOAT .)
    DIVISION        reduce using rule 41 (datonumerico -> FLOAT .)
    PUNTOCOMA       reduce using rule 41 (datonumerico -> FLOAT .)
    ES_IGUAL        reduce using rule 41 (datonumerico -> FLOAT .)
    NO_IGUAL        reduce using rule 41 (datonumerico -> FLOAT .)
    MENOR_QUE       reduce using rule 41 (datonumerico -> FLOAT .)
    MAYOR_QUE       reduce using rule 41 (datonumerico -> FLOAT .)
    MENOR_O_IGUAL   reduce using rule 41 (datonumerico -> FLOAT .)
    MAYOR_O_IGUAL   reduce using rule 41 (datonumerico -> FLOAT .)
    RPARENT         reduce using rule 41 (datonumerico -> FLOAT .)


state 26

    (28) negativo -> RESTA . INTEGER
    (29) negativo -> RESTA . FLOAT

    INTEGER         shift and go to state 46
    FLOAT           shift and go to state 47


state 27

    (81) if-else -> if ELSE . LLAVEL LLAVER

    LLAVEL          shift and go to state 48


state 28

    (13) asignacion -> declaradores VARIABLE . IGUAL tipodato PUNTOCOMA
    (14) asignacion -> declaradores VARIABLE . IGUAL negativo PUNTOCOMA

    IGUAL           shift and go to state 49


state 29

    (32) comparacion -> VARIABLE comparadores . VARIABLE PUNTOCOMA

    VARIABLE        shift and go to state 50


state 30

    (33) comparadores -> ES_IGUAL .

    VARIABLE        reduce using rule 33 (comparadores -> ES_IGUAL .)
    INTEGER         reduce using rule 33 (comparadores -> ES_IGUAL .)
    FLOAT           reduce using rule 33 (comparadores -> ES_IGUAL .)
    RESTA           reduce using rule 33 (comparadores -> ES_IGUAL .)


state 31

    (34) comparadores -> NO_IGUAL .

    VARIABLE        reduce using rule 34 (comparadores -> NO_IGUAL .)
    INTEGER         reduce using rule 34 (comparadores -> NO_IGUAL .)
    FLOAT           reduce using rule 34 (comparadores -> NO_IGUAL .)
    RESTA           reduce using rule 34 (comparadores -> NO_IGUAL .)


state 32

    (35) comparadores -> MENOR_QUE .

    VARIABLE        reduce using rule 35 (comparadores -> MENOR_QUE .)
    INTEGER         reduce using rule 35 (comparadores -> MENOR_QUE .)
    FLOAT           reduce using rule 35 (comparadores -> MENOR_QUE .)
    RESTA           reduce using rule 35 (comparadores -> MENOR_QUE .)


state 33

    (36) comparadores -> MAYOR_QUE .

    VARIABLE        reduce using rule 36 (comparadores -> MAYOR_QUE .)
    INTEGER         reduce using rule 36 (comparadores -> MAYOR_QUE .)
    FLOAT           reduce using rule 36 (comparadores -> MAYOR_QUE .)
    RESTA           reduce using rule 36 (comparadores -> MAYOR_QUE .)


state 34

    (37) comparadores -> MENOR_O_IGUAL .

    VARIABLE        reduce using rule 37 (comparadores -> MENOR_O_IGUAL .)
    INTEGER         reduce using rule 37 (comparadores -> MENOR_O_IGUAL .)
    FLOAT           reduce using rule 37 (comparadores -> MENOR_O_IGUAL .)
    RESTA           reduce using rule 37 (comparadores -> MENOR_O_IGUAL .)


state 35

    (38) comparadores -> MAYOR_O_IGUAL .

    VARIABLE        reduce using rule 38 (comparadores -> MAYOR_O_IGUAL .)
    INTEGER         reduce using rule 38 (comparadores -> MAYOR_O_IGUAL .)
    FLOAT           reduce using rule 38 (comparadores -> MAYOR_O_IGUAL .)
    RESTA           reduce using rule 38 (comparadores -> MAYOR_O_IGUAL .)


state 36

    (15) asignacion -> BOOL VARIABLE . IGUAL valoresverdad PUNTOCOMA

    IGUAL           shift and go to state 51


state 37

    (39) operacion -> datonumerico operador . datonumerico PUNTOCOMA
    (40) datonumerico -> . INTEGER
    (41) datonumerico -> . FLOAT
    (42) datonumerico -> . negativo
    (28) negativo -> . RESTA INTEGER
    (29) negativo -> . RESTA FLOAT

    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 25
    RESTA           shift and go to state 26

    datonumerico                   shift and go to state 52
    negativo                       shift and go to state 12

state 38

    (43) operador -> MAS .

    INTEGER         reduce using rule 43 (operador -> MAS .)
    FLOAT           reduce using rule 43 (operador -> MAS .)
    RESTA           reduce using rule 43 (operador -> MAS .)
    MAS             reduce using rule 43 (operador -> MAS .)
    MULTIPL         reduce using rule 43 (operador -> MAS .)
    DIVISION        reduce using rule 43 (operador -> MAS .)
    RPARENT         reduce using rule 43 (operador -> MAS .)


state 39

    (44) operador -> RESTA .

    INTEGER         reduce using rule 44 (operador -> RESTA .)
    FLOAT           reduce using rule 44 (operador -> RESTA .)
    RESTA           reduce using rule 44 (operador -> RESTA .)
    MAS             reduce using rule 44 (operador -> RESTA .)
    MULTIPL         reduce using rule 44 (operador -> RESTA .)
    DIVISION        reduce using rule 44 (operador -> RESTA .)
    RPARENT         reduce using rule 44 (operador -> RESTA .)


state 40

    (45) operador -> MULTIPL .

    INTEGER         reduce using rule 45 (operador -> MULTIPL .)
    FLOAT           reduce using rule 45 (operador -> MULTIPL .)
    RESTA           reduce using rule 45 (operador -> MULTIPL .)
    MAS             reduce using rule 45 (operador -> MULTIPL .)
    MULTIPL         reduce using rule 45 (operador -> MULTIPL .)
    DIVISION        reduce using rule 45 (operador -> MULTIPL .)
    RPARENT         reduce using rule 45 (operador -> MULTIPL .)


state 41

    (46) operador -> DIVISION .

    INTEGER         reduce using rule 46 (operador -> DIVISION .)
    FLOAT           reduce using rule 46 (operador -> DIVISION .)
    RESTA           reduce using rule 46 (operador -> DIVISION .)
    MAS             reduce using rule 46 (operador -> DIVISION .)
    MULTIPL         reduce using rule 46 (operador -> DIVISION .)
    DIVISION        reduce using rule 46 (operador -> DIVISION .)
    RPARENT         reduce using rule 46 (operador -> DIVISION .)


state 42

    (47) impresion -> PRINT LPARENT . tipodato RPARENT PUNTOCOMA
    (22) tipodato -> . INTEGER
    (23) tipodato -> . CADENA
    (24) tipodato -> . FLOAT
    (25) tipodato -> . VARIABLE
    (26) tipodato -> . valoresverdad
    (27) tipodato -> . negativo
    (30) valoresverdad -> . TRUE
    (31) valoresverdad -> . FALSE
    (28) negativo -> . RESTA INTEGER
    (29) negativo -> . RESTA FLOAT

    INTEGER         shift and go to state 54
    CADENA          shift and go to state 55
    FLOAT           shift and go to state 56
    VARIABLE        shift and go to state 57
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    RESTA           shift and go to state 26

    tipodato                       shift and go to state 53
    valoresverdad                  shift and go to state 58
    negativo                       shift and go to state 59

state 43

    (71) for -> FOR LPARENT . declaracionesfor VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER
    (72) for -> FOR LPARENT . declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER
    (73) declaracionesfor -> . VAR
    (74) declaracionesfor -> . INT
    (75) declaracionesfor -> . VARIABLE

    VAR             shift and go to state 64
    INT             shift and go to state 65
    VARIABLE        shift and go to state 63

    declaracionesfor               shift and go to state 62

state 44

    (76) if -> IF LPARENT . VARIABLE RPARENT LLAVEL LLAVER
    (77) if -> IF LPARENT . TRUE RPARENT LLAVEL LLAVER
    (78) if -> IF LPARENT . FALSE RPARENT LLAVEL LLAVER
    (79) if -> IF LPARENT . VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER
    (80) if -> IF LPARENT . datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER
    (40) datonumerico -> . INTEGER
    (41) datonumerico -> . FLOAT
    (42) datonumerico -> . negativo
    (28) negativo -> . RESTA INTEGER
    (29) negativo -> . RESTA FLOAT

    VARIABLE        shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 25
    RESTA           shift and go to state 26

    datonumerico                   shift and go to state 69
    negativo                       shift and go to state 12

state 45

    (82) write -> STDOUT PUNTO . WRITE LPARENT tipodato RPARENT PUNTOCOMA

    WRITE           shift and go to state 70


state 46

    (28) negativo -> RESTA INTEGER .

    MAS             reduce using rule 28 (negativo -> RESTA INTEGER .)
    RESTA           reduce using rule 28 (negativo -> RESTA INTEGER .)
    MULTIPL         reduce using rule 28 (negativo -> RESTA INTEGER .)
    DIVISION        reduce using rule 28 (negativo -> RESTA INTEGER .)
    PUNTOCOMA       reduce using rule 28 (negativo -> RESTA INTEGER .)
    RPARENT         reduce using rule 28 (negativo -> RESTA INTEGER .)
    ES_IGUAL        reduce using rule 28 (negativo -> RESTA INTEGER .)
    NO_IGUAL        reduce using rule 28 (negativo -> RESTA INTEGER .)
    MENOR_QUE       reduce using rule 28 (negativo -> RESTA INTEGER .)
    MAYOR_QUE       reduce using rule 28 (negativo -> RESTA INTEGER .)
    MENOR_O_IGUAL   reduce using rule 28 (negativo -> RESTA INTEGER .)
    MAYOR_O_IGUAL   reduce using rule 28 (negativo -> RESTA INTEGER .)


state 47

    (29) negativo -> RESTA FLOAT .

    MAS             reduce using rule 29 (negativo -> RESTA FLOAT .)
    RESTA           reduce using rule 29 (negativo -> RESTA FLOAT .)
    MULTIPL         reduce using rule 29 (negativo -> RESTA FLOAT .)
    DIVISION        reduce using rule 29 (negativo -> RESTA FLOAT .)
    PUNTOCOMA       reduce using rule 29 (negativo -> RESTA FLOAT .)
    RPARENT         reduce using rule 29 (negativo -> RESTA FLOAT .)
    ES_IGUAL        reduce using rule 29 (negativo -> RESTA FLOAT .)
    NO_IGUAL        reduce using rule 29 (negativo -> RESTA FLOAT .)
    MENOR_QUE       reduce using rule 29 (negativo -> RESTA FLOAT .)
    MAYOR_QUE       reduce using rule 29 (negativo -> RESTA FLOAT .)
    MENOR_O_IGUAL   reduce using rule 29 (negativo -> RESTA FLOAT .)
    MAYOR_O_IGUAL   reduce using rule 29 (negativo -> RESTA FLOAT .)


state 48

    (81) if-else -> if ELSE LLAVEL . LLAVER

    LLAVER          shift and go to state 71


state 49

    (13) asignacion -> declaradores VARIABLE IGUAL . tipodato PUNTOCOMA
    (14) asignacion -> declaradores VARIABLE IGUAL . negativo PUNTOCOMA
    (22) tipodato -> . INTEGER
    (23) tipodato -> . CADENA
    (24) tipodato -> . FLOAT
    (25) tipodato -> . VARIABLE
    (26) tipodato -> . valoresverdad
    (27) tipodato -> . negativo
    (28) negativo -> . RESTA INTEGER
    (29) negativo -> . RESTA FLOAT
    (30) valoresverdad -> . TRUE
    (31) valoresverdad -> . FALSE

    INTEGER         shift and go to state 54
    CADENA          shift and go to state 55
    FLOAT           shift and go to state 56
    VARIABLE        shift and go to state 57
    RESTA           shift and go to state 26
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    tipodato                       shift and go to state 72
    negativo                       shift and go to state 73
    valoresverdad                  shift and go to state 58

state 50

    (32) comparacion -> VARIABLE comparadores VARIABLE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 74


state 51

    (15) asignacion -> BOOL VARIABLE IGUAL . valoresverdad PUNTOCOMA
    (30) valoresverdad -> . TRUE
    (31) valoresverdad -> . FALSE

    TRUE            shift and go to state 60
    FALSE           shift and go to state 61

    valoresverdad                  shift and go to state 75

state 52

    (39) operacion -> datonumerico operador datonumerico . PUNTOCOMA

    PUNTOCOMA       shift and go to state 76


state 53

    (47) impresion -> PRINT LPARENT tipodato . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 77


state 54

    (22) tipodato -> INTEGER .

    RPARENT         reduce using rule 22 (tipodato -> INTEGER .)
    PUNTOCOMA       reduce using rule 22 (tipodato -> INTEGER .)


state 55

    (23) tipodato -> CADENA .

    RPARENT         reduce using rule 23 (tipodato -> CADENA .)
    PUNTOCOMA       reduce using rule 23 (tipodato -> CADENA .)


state 56

    (24) tipodato -> FLOAT .

    RPARENT         reduce using rule 24 (tipodato -> FLOAT .)
    PUNTOCOMA       reduce using rule 24 (tipodato -> FLOAT .)


state 57

    (25) tipodato -> VARIABLE .

    RPARENT         reduce using rule 25 (tipodato -> VARIABLE .)
    PUNTOCOMA       reduce using rule 25 (tipodato -> VARIABLE .)


state 58

    (26) tipodato -> valoresverdad .

    RPARENT         reduce using rule 26 (tipodato -> valoresverdad .)
    PUNTOCOMA       reduce using rule 26 (tipodato -> valoresverdad .)


state 59

    (27) tipodato -> negativo .

    RPARENT         reduce using rule 27 (tipodato -> negativo .)


state 60

    (30) valoresverdad -> TRUE .

    RPARENT         reduce using rule 30 (valoresverdad -> TRUE .)
    PUNTOCOMA       reduce using rule 30 (valoresverdad -> TRUE .)


state 61

    (31) valoresverdad -> FALSE .

    RPARENT         reduce using rule 31 (valoresverdad -> FALSE .)
    PUNTOCOMA       reduce using rule 31 (valoresverdad -> FALSE .)


state 62

    (71) for -> FOR LPARENT declaracionesfor . VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER
    (72) for -> FOR LPARENT declaracionesfor . VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 78


state 63

    (75) declaracionesfor -> VARIABLE .

    VARIABLE        reduce using rule 75 (declaracionesfor -> VARIABLE .)


state 64

    (73) declaracionesfor -> VAR .

    VARIABLE        reduce using rule 73 (declaracionesfor -> VAR .)


state 65

    (74) declaracionesfor -> INT .

    VARIABLE        reduce using rule 74 (declaracionesfor -> INT .)


state 66

    (76) if -> IF LPARENT VARIABLE . RPARENT LLAVEL LLAVER
    (79) if -> IF LPARENT VARIABLE . comparadores VARIABLE RPARENT LLAVEL LLAVER
    (33) comparadores -> . ES_IGUAL
    (34) comparadores -> . NO_IGUAL
    (35) comparadores -> . MENOR_QUE
    (36) comparadores -> . MAYOR_QUE
    (37) comparadores -> . MENOR_O_IGUAL
    (38) comparadores -> . MAYOR_O_IGUAL

    RPARENT         shift and go to state 79
    ES_IGUAL        shift and go to state 30
    NO_IGUAL        shift and go to state 31
    MENOR_QUE       shift and go to state 32
    MAYOR_QUE       shift and go to state 33
    MENOR_O_IGUAL   shift and go to state 34
    MAYOR_O_IGUAL   shift and go to state 35

    comparadores                   shift and go to state 80

state 67

    (77) if -> IF LPARENT TRUE . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 81


state 68

    (78) if -> IF LPARENT FALSE . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 82


state 69

    (80) if -> IF LPARENT datonumerico . comparadores datonumerico RPARENT LLAVEL LLAVER
    (33) comparadores -> . ES_IGUAL
    (34) comparadores -> . NO_IGUAL
    (35) comparadores -> . MENOR_QUE
    (36) comparadores -> . MAYOR_QUE
    (37) comparadores -> . MENOR_O_IGUAL
    (38) comparadores -> . MAYOR_O_IGUAL

    ES_IGUAL        shift and go to state 30
    NO_IGUAL        shift and go to state 31
    MENOR_QUE       shift and go to state 32
    MAYOR_QUE       shift and go to state 33
    MENOR_O_IGUAL   shift and go to state 34
    MAYOR_O_IGUAL   shift and go to state 35

    comparadores                   shift and go to state 83

state 70

    (82) write -> STDOUT PUNTO WRITE . LPARENT tipodato RPARENT PUNTOCOMA

    LPARENT         shift and go to state 84


state 71

    (81) if-else -> if ELSE LLAVEL LLAVER .

    $end            reduce using rule 81 (if-else -> if ELSE LLAVEL LLAVER .)


state 72

    (13) asignacion -> declaradores VARIABLE IGUAL tipodato . PUNTOCOMA

    PUNTOCOMA       shift and go to state 85


state 73

    (14) asignacion -> declaradores VARIABLE IGUAL negativo . PUNTOCOMA
    (27) tipodato -> negativo .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
    PUNTOCOMA       shift and go to state 86

  ! PUNTOCOMA       [ reduce using rule 27 (tipodato -> negativo .) ]


state 74

    (32) comparacion -> VARIABLE comparadores VARIABLE PUNTOCOMA .

    $end            reduce using rule 32 (comparacion -> VARIABLE comparadores VARIABLE PUNTOCOMA .)


state 75

    (15) asignacion -> BOOL VARIABLE IGUAL valoresverdad . PUNTOCOMA

    PUNTOCOMA       shift and go to state 87


state 76

    (39) operacion -> datonumerico operador datonumerico PUNTOCOMA .

    $end            reduce using rule 39 (operacion -> datonumerico operador datonumerico PUNTOCOMA .)


state 77

    (47) impresion -> PRINT LPARENT tipodato RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 88


state 78

    (71) for -> FOR LPARENT declaracionesfor VARIABLE . IN VARIABLE RPARENT LLAVEL LLAVER
    (72) for -> FOR LPARENT declaracionesfor VARIABLE . IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    IN              shift and go to state 89
    IGUAL           shift and go to state 90


state 79

    (76) if -> IF LPARENT VARIABLE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 91


state 80

    (79) if -> IF LPARENT VARIABLE comparadores . VARIABLE RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 92


state 81

    (77) if -> IF LPARENT TRUE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 93


state 82

    (78) if -> IF LPARENT FALSE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 94


state 83

    (80) if -> IF LPARENT datonumerico comparadores . datonumerico RPARENT LLAVEL LLAVER
    (40) datonumerico -> . INTEGER
    (41) datonumerico -> . FLOAT
    (42) datonumerico -> . negativo
    (28) negativo -> . RESTA INTEGER
    (29) negativo -> . RESTA FLOAT

    INTEGER         shift and go to state 17
    FLOAT           shift and go to state 25
    RESTA           shift and go to state 26

    datonumerico                   shift and go to state 95
    negativo                       shift and go to state 12

state 84

    (82) write -> STDOUT PUNTO WRITE LPARENT . tipodato RPARENT PUNTOCOMA
    (22) tipodato -> . INTEGER
    (23) tipodato -> . CADENA
    (24) tipodato -> . FLOAT
    (25) tipodato -> . VARIABLE
    (26) tipodato -> . valoresverdad
    (27) tipodato -> . negativo
    (30) valoresverdad -> . TRUE
    (31) valoresverdad -> . FALSE
    (28) negativo -> . RESTA INTEGER
    (29) negativo -> . RESTA FLOAT

    INTEGER         shift and go to state 54
    CADENA          shift and go to state 55
    FLOAT           shift and go to state 56
    VARIABLE        shift and go to state 57
    TRUE            shift and go to state 60
    FALSE           shift and go to state 61
    RESTA           shift and go to state 26

    tipodato                       shift and go to state 96
    valoresverdad                  shift and go to state 58
    negativo                       shift and go to state 59

state 85

    (13) asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA .

    $end            reduce using rule 13 (asignacion -> declaradores VARIABLE IGUAL tipodato PUNTOCOMA .)


state 86

    (14) asignacion -> declaradores VARIABLE IGUAL negativo PUNTOCOMA .

    $end            reduce using rule 14 (asignacion -> declaradores VARIABLE IGUAL negativo PUNTOCOMA .)


state 87

    (15) asignacion -> BOOL VARIABLE IGUAL valoresverdad PUNTOCOMA .

    $end            reduce using rule 15 (asignacion -> BOOL VARIABLE IGUAL valoresverdad PUNTOCOMA .)


state 88

    (47) impresion -> PRINT LPARENT tipodato RPARENT PUNTOCOMA .

    $end            reduce using rule 47 (impresion -> PRINT LPARENT tipodato RPARENT PUNTOCOMA .)


state 89

    (71) for -> FOR LPARENT declaracionesfor VARIABLE IN . VARIABLE RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 97


state 90

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL . INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    INTEGER         shift and go to state 98


state 91

    (76) if -> IF LPARENT VARIABLE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 99


state 92

    (79) if -> IF LPARENT VARIABLE comparadores VARIABLE . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 100


state 93

    (77) if -> IF LPARENT TRUE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 101


state 94

    (78) if -> IF LPARENT FALSE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 102


state 95

    (80) if -> IF LPARENT datonumerico comparadores datonumerico . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 103


state 96

    (82) write -> STDOUT PUNTO WRITE LPARENT tipodato . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 104


state 97

    (71) for -> FOR LPARENT declaracionesfor VARIABLE IN VARIABLE . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 105


state 98

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER . PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    PUNTOCOMA       shift and go to state 106


state 99

    (76) if -> IF LPARENT VARIABLE RPARENT LLAVEL LLAVER .

    ELSE            reduce using rule 76 (if -> IF LPARENT VARIABLE RPARENT LLAVEL LLAVER .)
    $end            reduce using rule 76 (if -> IF LPARENT VARIABLE RPARENT LLAVEL LLAVER .)


state 100

    (79) if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 107


state 101

    (77) if -> IF LPARENT TRUE RPARENT LLAVEL LLAVER .

    ELSE            reduce using rule 77 (if -> IF LPARENT TRUE RPARENT LLAVEL LLAVER .)
    $end            reduce using rule 77 (if -> IF LPARENT TRUE RPARENT LLAVEL LLAVER .)


state 102

    (78) if -> IF LPARENT FALSE RPARENT LLAVEL LLAVER .

    ELSE            reduce using rule 78 (if -> IF LPARENT FALSE RPARENT LLAVEL LLAVER .)
    $end            reduce using rule 78 (if -> IF LPARENT FALSE RPARENT LLAVEL LLAVER .)


state 103

    (80) if -> IF LPARENT datonumerico comparadores datonumerico RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 108


state 104

    (82) write -> STDOUT PUNTO WRITE LPARENT tipodato RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 109


state 105

    (71) for -> FOR LPARENT declaracionesfor VARIABLE IN VARIABLE RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 110


state 106

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA . VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 111


state 107

    (79) if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 112


state 108

    (80) if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 113


state 109

    (82) write -> STDOUT PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA .

    $end            reduce using rule 82 (write -> STDOUT PUNTO WRITE LPARENT tipodato RPARENT PUNTOCOMA .)


state 110

    (71) for -> FOR LPARENT declaracionesfor VARIABLE IN VARIABLE RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 114


state 111

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE . comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER
    (33) comparadores -> . ES_IGUAL
    (34) comparadores -> . NO_IGUAL
    (35) comparadores -> . MENOR_QUE
    (36) comparadores -> . MAYOR_QUE
    (37) comparadores -> . MENOR_O_IGUAL
    (38) comparadores -> . MAYOR_O_IGUAL

    ES_IGUAL        shift and go to state 30
    NO_IGUAL        shift and go to state 31
    MENOR_QUE       shift and go to state 32
    MAYOR_QUE       shift and go to state 33
    MENOR_O_IGUAL   shift and go to state 34
    MAYOR_O_IGUAL   shift and go to state 35

    comparadores                   shift and go to state 115

state 112

    (79) if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER .

    ELSE            reduce using rule 79 (if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER .)
    $end            reduce using rule 79 (if -> IF LPARENT VARIABLE comparadores VARIABLE RPARENT LLAVEL LLAVER .)


state 113

    (80) if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER .

    ELSE            reduce using rule 80 (if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER .)
    $end            reduce using rule 80 (if -> IF LPARENT datonumerico comparadores datonumerico RPARENT LLAVEL LLAVER .)


state 114

    (71) for -> FOR LPARENT declaracionesfor VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER .

    $end            reduce using rule 71 (for -> FOR LPARENT declaracionesfor VARIABLE IN VARIABLE RPARENT LLAVEL LLAVER .)


state 115

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores . INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    INTEGER         shift and go to state 116


state 116

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER . PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER

    PUNTOCOMA       shift and go to state 117


state 117

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA . VARIABLE operador operador RPARENT LLAVEL LLAVER

    VARIABLE        shift and go to state 118


state 118

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE . operador operador RPARENT LLAVEL LLAVER
    (43) operador -> . MAS
    (44) operador -> . RESTA
    (45) operador -> . MULTIPL
    (46) operador -> . DIVISION

    MAS             shift and go to state 38
    RESTA           shift and go to state 39
    MULTIPL         shift and go to state 40
    DIVISION        shift and go to state 41

    operador                       shift and go to state 119

state 119

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador . operador RPARENT LLAVEL LLAVER
    (43) operador -> . MAS
    (44) operador -> . RESTA
    (45) operador -> . MULTIPL
    (46) operador -> . DIVISION

    MAS             shift and go to state 38
    RESTA           shift and go to state 39
    MULTIPL         shift and go to state 40
    DIVISION        shift and go to state 41

    operador                       shift and go to state 120

state 120

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador . RPARENT LLAVEL LLAVER

    RPARENT         shift and go to state 121


state 121

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT . LLAVEL LLAVER

    LLAVEL          shift and go to state 122


state 122

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL . LLAVER

    LLAVER          shift and go to state 123


state 123

    (72) for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER .

    $end            reduce using rule 72 (for -> FOR LPARENT declaracionesfor VARIABLE IGUAL INTEGER PUNTOCOMA VARIABLE comparadores INTEGER PUNTOCOMA VARIABLE operador operador RPARENT LLAVEL LLAVER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 13 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 73 resolved as shift
